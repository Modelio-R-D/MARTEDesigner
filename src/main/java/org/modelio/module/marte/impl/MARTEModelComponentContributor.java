package org.modelio.module.marte.impl;

import java.util.Collections;
import java.util.HashSet;
import java.util.Set;
import com.modeliosoft.modelio.javadesigner.annotations.objid;
import org.modelio.api.modelio.mc.AbstractModelComponentContributor;
import org.modelio.api.modelio.model.IMetamodelExtensions;
import org.modelio.api.modelio.model.IModelingSession;
import org.modelio.api.module.IModule;
import org.modelio.metamodel.uml.behavior.activityModel.ActivityAction;
import org.modelio.metamodel.uml.behavior.activityModel.ActivityPartition;
import org.modelio.metamodel.uml.behavior.activityModel.CallAction;
import org.modelio.metamodel.uml.behavior.activityModel.LoopNode;
import org.modelio.metamodel.uml.behavior.activityModel.OpaqueAction;
import org.modelio.metamodel.uml.behavior.activityModel.SendSignalAction;
import org.modelio.metamodel.uml.behavior.commonBehaviors.Behavior;
import org.modelio.metamodel.uml.behavior.commonBehaviors.BehaviorParameter;
import org.modelio.metamodel.uml.behavior.commonBehaviors.Event;
import org.modelio.metamodel.uml.behavior.commonBehaviors.Signal;
import org.modelio.metamodel.uml.behavior.interactionModel.ExecutionSpecification;
import org.modelio.metamodel.uml.behavior.interactionModel.Lifeline;
import org.modelio.metamodel.uml.behavior.interactionModel.Message;
import org.modelio.metamodel.uml.behavior.stateMachineModel.State;
import org.modelio.metamodel.uml.behavior.stateMachineModel.StateMachine;
import org.modelio.metamodel.uml.behavior.stateMachineModel.Transition;
import org.modelio.metamodel.uml.behavior.usecaseModel.Actor;
import org.modelio.metamodel.uml.behavior.usecaseModel.UseCase;
import org.modelio.metamodel.uml.infrastructure.Constraint;
import org.modelio.metamodel.uml.infrastructure.Dependency;
import org.modelio.metamodel.uml.infrastructure.Element;
import org.modelio.metamodel.uml.infrastructure.ModelElement;
import org.modelio.metamodel.uml.infrastructure.Note;
import org.modelio.metamodel.uml.infrastructure.NoteType;
import org.modelio.metamodel.uml.infrastructure.Stereotype;
import org.modelio.metamodel.uml.infrastructure.TagType;
import org.modelio.metamodel.uml.infrastructure.TaggedValue;
import org.modelio.metamodel.uml.statik.Association;
import org.modelio.metamodel.uml.statik.AssociationEnd;
import org.modelio.metamodel.uml.statik.Attribute;
import org.modelio.metamodel.uml.statik.BindableInstance;
import org.modelio.metamodel.uml.statik.Class;
import org.modelio.metamodel.uml.statik.Classifier;
import org.modelio.metamodel.uml.statik.Collaboration;
import org.modelio.metamodel.uml.statik.CollaborationUse;
import org.modelio.metamodel.uml.statik.Connector;
import org.modelio.metamodel.uml.statik.ConnectorEnd;
import org.modelio.metamodel.uml.statik.DataType;
import org.modelio.metamodel.uml.statik.Enumeration;
import org.modelio.metamodel.uml.statik.EnumerationLiteral;
import org.modelio.metamodel.uml.statik.Instance;
import org.modelio.metamodel.uml.statik.Interface;
import org.modelio.metamodel.uml.statik.Link;
import org.modelio.metamodel.uml.statik.LinkEnd;
import org.modelio.metamodel.uml.statik.Node;
import org.modelio.metamodel.uml.statik.Operation;
import org.modelio.metamodel.uml.statik.Package;
import org.modelio.metamodel.uml.statik.Parameter;
import org.modelio.metamodel.uml.statik.Port;
import org.modelio.module.marte.api.IMARTEDesignerPeerModule;
import org.modelio.module.marte.api.MARTEDesignerNoteTypes;
import org.modelio.module.marte.api.MARTEDesignerStereotypes;
import org.modelio.module.marte.api.MARTEDesignerTagTypes;
import org.modelio.vcore.model.filter.IObjectFilter;
import org.modelio.vcore.smkernel.mapi.MClass;
import org.modelio.vcore.smkernel.mapi.MObject;

@objid ("f37f2150-42c9-4c70-a8e9-0021b58f3c44")
public class MARTEModelComponentContributor extends AbstractModelComponentContributor {
    @objid ("c2389670-d9e6-468c-a756-1d6a7ae25025")
    private IModelingSession session = MARTEModule.getInstance().getModuleContext().getModelingSession();

    @objid ("af137dcc-3947-4ab3-8f2c-8f1ca1e15109")
    public MARTEModelComponentContributor(IModule module) {
        super(module);
    }

    /**
     * Get a TagType from the metamodel extensions.
     */
    @objid ("6b7ce638-2c4e-4d7c-ac90-b1956bce18db")
    private TagType getTagType(java.lang.Class<? extends MObject> metaclass, String tagTypeName) {
        IMetamodelExtensions metamodel = this.session.getMetamodelExtensions();
        return metamodel.getTagType(IMARTEDesignerPeerModule.MODULE_NAME, tagTypeName, MARTEModule.getInstance().getModuleContext().getModelioServices().getMetamodelService().getMetamodel().getMClass(metaclass));
    }

    /**
     * Get a NoteType from the metamodel extensions.
     */
    @objid ("3f1c1aa4-7903-4925-b492-2aa16c877596")
    private NoteType getNoteType(java.lang.Class<? extends MObject> metaclass, String noteTypeName) {
        IMetamodelExtensions metamodel = this.session.getMetamodelExtensions();
        return metamodel.getNoteType(IMARTEDesignerPeerModule.MODULE_NAME, noteTypeName, MARTEModule.getInstance().getModuleContext().getModelioServices().getMetamodelService().getMetamodel().getMClass(metaclass));
    }

    /**
     * Get a Steretotype from the metamodel extensions.
     */
    @objid ("73eb6dfa-7a79-4c66-adea-cef4a2703aa4")
    private Stereotype getStereotype(java.lang.Class<? extends MObject> metaclass, String stereotypeName) {
        IMetamodelExtensions metamodel = this.session.getMetamodelExtensions();
        return metamodel.getStereotype(IMARTEDesignerPeerModule.MODULE_NAME, stereotypeName, MARTEModule.getInstance().getModuleContext().getModelioServices().getMetamodelService().getMetamodel().getMClass(metaclass));
    }

    @objid ("b312f8ee-bed8-4b6c-b98e-e01266ba0195")
    @Override
    public Set<Stereotype> getDependencyStereotypes() {
        Set<Stereotype> stereotypes = new HashSet<>();

        stereotypes.add(getStereotype(Behavior.class, MARTEDesignerStereotypes.ACQUIRE_BEHAVIOR));
        stereotypes.add(getStereotype(Collaboration.class, MARTEDesignerStereotypes.ACQUIRE_COLLABORATION));
        stereotypes.add(getStereotype(CollaborationUse.class, MARTEDesignerStereotypes.ACQUIRE_COLLABORATIONUSE));
        stereotypes.add(getStereotype(ExecutionSpecification.class, MARTEDesignerStereotypes.ACQUIRE_EXECUTIONSPECIFICATION));
        stereotypes.add(getStereotype(Operation.class, MARTEDesignerStereotypes.ACQUIRE_OPERATION));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.CLOCKRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.CLOCKRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.CLOCKRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.CLOCKRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.CLOCKRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.CLOCKRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.CLOCKRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.CLOCKRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_LINK));
        stereotypes.add(getStereotype(LinkEnd.class, MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_LINKEND));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.COMMUNICATIONMEDIA_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.COMMUNICATIONMEDIA_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.COMMUNICATIONMEDIA_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.COMMUNICATIONMEDIA_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.COMMUNICATIONMEDIA_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.COMPUTINGRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.COMPUTINGRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.COMPUTINGRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.COMPUTINGRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.COMPUTINGRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.COMPUTINGRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.COMPUTINGRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.COMPUTINGRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.CONCURRENCYRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.CONCURRENCYRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.CONCURRENCYRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.CONCURRENCYRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.CONCURRENCYRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.CONCURRENCYRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.CONCURRENCYRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.CONCURRENCYRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.DEVICERESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.DEVICERESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.DEVICERESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.DEVICERESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.DEVICERESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.DEVICERESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.DEVICERESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.DEVICERESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Behavior.class, MARTEDesignerStereotypes.GRSERVICE_BEHAVIOR));
        stereotypes.add(getStereotype(Collaboration.class, MARTEDesignerStereotypes.GRSERVICE_COLLABORATION));
        stereotypes.add(getStereotype(CollaborationUse.class, MARTEDesignerStereotypes.GRSERVICE_COLLABORATIONUSE));
        stereotypes.add(getStereotype(ExecutionSpecification.class, MARTEDesignerStereotypes.GRSERVICE_EXECUTIONSPECIFICATION));
        stereotypes.add(getStereotype(Operation.class, MARTEDesignerStereotypes.GRSERVICE_OPERATION));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.PROCESSINGRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.PROCESSINGRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.PROCESSINGRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.PROCESSINGRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.PROCESSINGRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.PROCESSINGRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.PROCESSINGRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.PROCESSINGRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Behavior.class, MARTEDesignerStereotypes.RELEASE_BEHAVIOR));
        stereotypes.add(getStereotype(Collaboration.class, MARTEDesignerStereotypes.RELEASE_COLLABORATION));
        stereotypes.add(getStereotype(CollaborationUse.class, MARTEDesignerStereotypes.RELEASE_COLLABORATIONUSE));
        stereotypes.add(getStereotype(ExecutionSpecification.class, MARTEDesignerStereotypes.RELEASE_EXECUTIONSPECIFICATION));
        stereotypes.add(getStereotype(Operation.class, MARTEDesignerStereotypes.RELEASE_OPERATION));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.RESOURCEUSAGE_MODELELEMENT));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.RESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.RESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.RESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.RESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.RESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.RESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.RESOURCE_LINK));
        stereotypes.add(getStereotype(LinkEnd.class, MARTEDesignerStereotypes.RESOURCE_LINKEND));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.RESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SCHEDULABLERESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SCHEDULABLERESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SCHEDULABLERESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SCHEDULABLERESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SCHEDULABLERESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.SCHEDULABLERESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SCHEDULABLERESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SCHEDULABLERESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SCHEDULER_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SCHEDULER_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SCHEDULER_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SCHEDULER_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SCHEDULER_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.SCHEDULER_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SCHEDULER_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SCHEDULER_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SECONDARYSCHEDULER_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SECONDARYSCHEDULER_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SECONDARYSCHEDULER_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SECONDARYSCHEDULER_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SECONDARYSCHEDULER_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.SECONDARYSCHEDULER_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SECONDARYSCHEDULER_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SECONDARYSCHEDULER_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.STORAGERESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.STORAGERESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.STORAGERESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.STORAGERESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.STORAGERESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.STORAGERESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.STORAGERESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.STORAGERESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SYNCHRONIZATIONRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SYNCHRONIZATIONRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SYNCHRONIZATIONRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SYNCHRONIZATIONRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SYNCHRONIZATIONRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.SYNCHRONIZATIONRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SYNCHRONIZATIONRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SYNCHRONIZATIONRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.TIMERRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.TIMERRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.TIMERRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.TIMERRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.TIMERRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.TIMERRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.TIMERRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.TIMERRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.TIMINGRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.TIMINGRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.TIMINGRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.TIMINGRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.TIMINGRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.TIMINGRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.TIMINGRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.TIMINGRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.PROCESSINGRESOURCE_LINK));
        stereotypes.add(getStereotype(ActivityPartition.class, MARTEDesignerStereotypes.ALLOCATEACTIVITYGROUP_ACTIVITYPARTITION));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.ALLOCATE_DEPENDENCY));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.ALLOCATED_MODELELEMENT));
        stereotypes.add(getStereotype(Note.class, MARTEDesignerStereotypes.ASSIGN_NOTE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.NFPREFINE_DEPENDENCY));
        stereotypes.add(getStereotype(Behavior.class, MARTEDesignerStereotypes.CONFIGURATION_BEHAVIOR));
        stereotypes.add(getStereotype(Class.class, MARTEDesignerStereotypes.CONFIGURATION_CLASS));
        stereotypes.add(getStereotype(Collaboration.class, MARTEDesignerStereotypes.CONFIGURATION_COLLABORATION));
        stereotypes.add(getStereotype(Node.class, MARTEDesignerStereotypes.CONFIGURATION_NODE));
        stereotypes.add(getStereotype(Package.class, MARTEDesignerStereotypes.CONFIGURATION_PACKAGE));
        stereotypes.add(getStereotype(StateMachine.class, MARTEDesignerStereotypes.MODEBEHAVIOR_STATEMACHINE));
        stereotypes.add(getStereotype(Transition.class, MARTEDesignerStereotypes.MODETRANSITION_TRANSITION));
        stereotypes.add(getStereotype(State.class, MARTEDesignerStereotypes.MODE_STATE));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.NFP_ASSOCIATIONEND));
        stereotypes.add(getStereotype(BindableInstance.class, MARTEDesignerStereotypes.NFP_BINDABLEINSTANCE));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.NFP_ATTRIBUTE));
        stereotypes.add(getStereotype(EnumerationLiteral.class, MARTEDesignerStereotypes.UNIT_ENUMERATIONLITERAL));
        stereotypes.add(getStereotype(DataType.class, MARTEDesignerStereotypes.NFPTYPE_DATATYPE));
        stereotypes.add(getStereotype(Enumeration.class, MARTEDesignerStereotypes.DIMENSION_ENUMERATION));
        stereotypes.add(getStereotype(Constraint.class, MARTEDesignerStereotypes.NFPCONSTRAINT_CONSTRAINT));
        stereotypes.add(getStereotype(Constraint.class, MARTEDesignerStereotypes.CLOCKCONSTRAINT_CONSTRAINT));
        stereotypes.add(getStereotype(Class.class, MARTEDesignerStereotypes.CLOCKTYPE_CLASS));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.CLOCK_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.CLOCK_ATTRIBUTE));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.CLOCK_ASSOCIATION));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.CLOCK_INSTANCE));
        stereotypes.add(getStereotype(Event.class, MARTEDesignerStereotypes.CLOCK_EVENT));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.CLOCK_LINK));
        stereotypes.add(getStereotype(Constraint.class, MARTEDesignerStereotypes.TIMEDCONSTRAINT_CONSTRAINT));
        stereotypes.add(getStereotype(Package.class, MARTEDesignerStereotypes.TIMEDDOMAIN_NAMESPACE));
        stereotypes.add(getStereotype(Constraint.class, MARTEDesignerStereotypes.DURATIONCONSTRAINT_CONSTRAINT));
        stereotypes.add(getStereotype(Constraint.class, MARTEDesignerStereotypes.INTERVALCONSTRAINT_CONSTRAINT));
        stereotypes.add(getStereotype(Constraint.class, MARTEDesignerStereotypes.TIMEDDURATIONOBSERVATION_CONSTRAINT));
        stereotypes.add(getStereotype(Constraint.class, MARTEDesignerStereotypes.DURATIONOBSERVATION_CONSTRAINT));
        stereotypes.add(getStereotype(Note.class, MARTEDesignerStereotypes.TIMEDINSTANTOBSERVATION_NOTE));
        stereotypes.add(getStereotype(Event.class, MARTEDesignerStereotypes.TIMEDEVENT_EVENT));
        stereotypes.add(getStereotype(ActivityAction.class, MARTEDesignerStereotypes.TIMEDPROCESSING_ACTIVITYACTION));
        stereotypes.add(getStereotype(Behavior.class, MARTEDesignerStereotypes.TIMEDPROCESSING_BEHAVIOR));
        stereotypes.add(getStereotype(Message.class, MARTEDesignerStereotypes.TIMEDPROCESSING_MESSAGE));
        stereotypes.add(getStereotype(TaggedValue.class, MARTEDesignerStereotypes.TIMEDVALUESPECIFICATION_TAGGEDVALUE));
        stereotypes.add(getStereotype(Note.class, MARTEDesignerStereotypes.TIMEDOBSERVATION_NOTE));
        stereotypes.add(getStereotype(Actor.class, MARTEDesignerStereotypes.PPUNIT_ACTOR));
        stereotypes.add(getStereotype(Behavior.class, MARTEDesignerStereotypes.PPUNIT_BEHAVIOR));
        stereotypes.add(getStereotype(Class.class, MARTEDesignerStereotypes.PPUNIT_CLASS));
        stereotypes.add(getStereotype(Collaboration.class, MARTEDesignerStereotypes.PPUNIT_COLLABORATION));
        stereotypes.add(getStereotype(UseCase.class, MARTEDesignerStereotypes.PPUNIT_USECASE));
        stereotypes.add(getStereotype(CallAction.class, MARTEDesignerStereotypes.RTACTION_CALLACTION));
        stereotypes.add(getStereotype(OpaqueAction.class, MARTEDesignerStereotypes.RTACTION_OPAQUEACTION));
        stereotypes.add(getStereotype(Operation.class, MARTEDesignerStereotypes.RTACTION_OPERATION));
        stereotypes.add(getStereotype(SendSignalAction.class, MARTEDesignerStereotypes.RTACTION_SENDSIGNALACTION));
        stereotypes.add(getStereotype(CallAction.class, MARTEDesignerStereotypes.RTFEATURE_CALLACTION));
        stereotypes.add(getStereotype(Message.class, MARTEDesignerStereotypes.RTFEATURE_MESSAGE));
        stereotypes.add(getStereotype(OpaqueAction.class, MARTEDesignerStereotypes.RTFEATURE_OPAQUEACTION));
        stereotypes.add(getStereotype(Operation.class, MARTEDesignerStereotypes.RTFEATURE_OPERATION));
        stereotypes.add(getStereotype(Port.class, MARTEDesignerStereotypes.RTFEATURE_PORT));
        stereotypes.add(getStereotype(SendSignalAction.class, MARTEDesignerStereotypes.RTFEATURE_SENDSIGNALACTION));
        stereotypes.add(getStereotype(Signal.class, MARTEDesignerStereotypes.RTFEATURE_SIGNAL));
        stereotypes.add(getStereotype(Operation.class, MARTEDesignerStereotypes.RTSERVICE_OPERATION));
        stereotypes.add(getStereotype(Note.class, MARTEDesignerStereotypes.RTSPECIFICATION_NOTE));
        stereotypes.add(getStereotype(Actor.class, MARTEDesignerStereotypes.RTUNIT_ACTOR));
        stereotypes.add(getStereotype(Behavior.class, MARTEDesignerStereotypes.RTUNIT_BEHAVIOR));
        stereotypes.add(getStereotype(Class.class, MARTEDesignerStereotypes.RTUNIT_CLASS));
        stereotypes.add(getStereotype(Collaboration.class, MARTEDesignerStereotypes.RTUNIT_COLLABORATION));
        stereotypes.add(getStereotype(UseCase.class, MARTEDesignerStereotypes.RTUNIT_USECASE));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWASIC_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWASIC_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWASIC_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWASIC_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWASIC_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWASIC_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWASIC_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWASIC_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWBRANCHPREDICTOR_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWBRANCHPREDICTOR_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWBRANCHPREDICTOR_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWBRANCHPREDICTOR_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWBRANCHPREDICTOR_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWBRANCHPREDICTOR_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWBRANCHPREDICTOR_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWBRANCHPREDICTOR_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWISA_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWISA_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWISA_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWISA_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWISA_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWISA_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWISA_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWISA_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWPLD_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWPLD_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWPLD_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWPLD_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWPLD_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWPLD_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWPLD_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWPLD_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWPROCESSOR_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWPROCESSOR_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWPROCESSOR_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWPROCESSOR_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWPROCESSOR_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWPROCESSOR_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWARBITER_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWARBITER_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWARBITER_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWARBITER_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWARBITER_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWARBITER_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWARBITER_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWARBITER_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWBRIDGE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWBRIDGE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWBRIDGE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWBRIDGE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWBRIDGE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWBRIDGE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWBRIDGE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWBRIDGE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWBUS_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWBUS_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWBUS_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWBUS_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWBUS_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWBUS_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWBUS_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWBUS_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWCOMMUNICATIONRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWCOMMUNICATIONRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWCOMMUNICATIONRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWCOMMUNICATIONRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWCOMMUNICATIONRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWCOMMUNICATIONRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWCOMMUNICATIONRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWCOMMUNICATIONRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWENDPOINT_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWENDPOINT_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWENDPOINT_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWENDPOINT_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWENDPOINT_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWENDPOINT_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWENDPOINT_LINK));
        stereotypes.add(getStereotype(LinkEnd.class, MARTEDesignerStereotypes.HWENDPOINT_LINKEND));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWENDPOINT_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWMEDIA_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWMEDIA_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWMEDIA_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWMEDIA_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWMEDIA_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWMEDIA_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWMEDIA_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWMEDIA_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWCLOCK_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWCLOCK_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWCLOCK_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWCLOCK_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWCLOCK_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWCLOCK_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWCLOCK_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWCLOCK_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWTIMER_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWTIMER_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWTIMER_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWTIMER_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWTIMER_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWTIMER_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWTIMER_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWTIMER_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWTIMINGRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWTIMINGRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWTIMINGRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWTIMINGRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWTIMINGRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWTIMINGRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWTIMINGRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWTIMINGRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWDEVICE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWDEVICE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWDEVICE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWDEVICE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWDEVICE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWDEVICE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWDEVICE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWDEVICE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWI_O_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWI_O_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWI_O_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWI_O_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWI_O_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWI_O_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWI_O_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWI_O_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWSUPPORT_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWSUPPORT_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWSUPPORT_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWSUPPORT_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWSUPPORT_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWSUPPORT_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWSUPPORT_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWSUPPORT_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWACTUATOR_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWACTUATOR_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWACTUATOR_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWACTUATOR_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWACTUATOR_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWACTUATOR_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWACTUATOR_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWACTUATOR_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWSENSOR_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWSENSOR_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWSENSOR_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWSENSOR_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWSENSOR_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWSENSOR_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWSENSOR_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWSENSOR_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWCACHE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWCACHE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWCACHE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWCACHE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWCACHE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWCACHE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWCACHE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWCACHE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWDRIVE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWDRIVE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWDRIVE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWDRIVE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWDRIVE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWDRIVE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWDRIVE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWDRIVE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWMEMORY_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWMEMORY_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWMEMORY_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWMEMORY_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWMEMORY_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWMEMORY_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWMEMORY_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWMEMORY_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWRAM_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWRAM_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWRAM_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWRAM_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWRAM_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWRAM_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWRAM_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWRAM_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWROM_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWROM_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWROM_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWROM_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWROM_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWROM_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWROM_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWROM_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWDMA_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWDMA_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWDMA_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWDMA_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWDMA_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWDMA_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWDMA_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWDMA_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWMMU_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWMMU_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWMMU_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWMMU_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWMMU_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWMMU_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWMMU_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWMMU_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWSTORAGEMANAGER_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWSTORAGEMANAGER_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWSTORAGEMANAGER_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWSTORAGEMANAGER_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWSTORAGEMANAGER_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWSTORAGEMANAGER_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWCOMPONENT_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWCOMPONENT_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWCOMPONENT_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWCOMPONENT_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWCOMPONENT_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWCOMPONENT_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWBATTERY_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWBATTERY_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWBATTERY_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWBATTERY_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWBATTERY_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWBATTERY_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWBATTERY_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWBATTERY_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWCOOLINGSUPPLY_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWCOOLINGSUPPLY_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWCOOLINGSUPPLY_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWCOOLINGSUPPLY_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWCOOLINGSUPPLY_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWCOOLINGSUPPLY_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWCOOLINGSUPPLY_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWCOOLINGSUPPLY_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWPOWERSUPPLY_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWPOWERSUPPLY_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWPOWERSUPPLY_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWPOWERSUPPLY_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWPOWERSUPPLY_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWPOWERSUPPLY_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWPOWERSUPPLY_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWPOWERSUPPLY_PARAMETER));
        stereotypes.add(getStereotype(Behavior.class, MARTEDesignerStereotypes.HWRESOURCESERVICE_BEHAVIOR));
        stereotypes.add(getStereotype(Collaboration.class, MARTEDesignerStereotypes.HWRESOURCESERVICE_COLLABORATION));
        stereotypes.add(getStereotype(CollaborationUse.class, MARTEDesignerStereotypes.HWRESOURCESERVICE_COLLABORATIONUSE));
        stereotypes.add(getStereotype(ExecutionSpecification.class, MARTEDesignerStereotypes.HWRESOURCESERVICE_EXECUTIONSPECIFICATION));
        stereotypes.add(getStereotype(Operation.class, MARTEDesignerStereotypes.HWRESOURCESERVICE_OPERATION));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.HWRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.HWRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.HWRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.HWRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.HWRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.HWRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.HWRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.HWRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Behavior.class, MARTEDesignerStereotypes.SWACCESSSERVICE_BEHAVIOR));
        stereotypes.add(getStereotype(Collaboration.class, MARTEDesignerStereotypes.SWACCESSSERVICE_COLLABORATION));
        stereotypes.add(getStereotype(CollaborationUse.class, MARTEDesignerStereotypes.SWACCESSSERVICE_COLLABORATIONUSE));
        stereotypes.add(getStereotype(ExecutionSpecification.class, MARTEDesignerStereotypes.SWACCESSSERVICE_EXECUTIONSPECIFICATION));
        stereotypes.add(getStereotype(Operation.class, MARTEDesignerStereotypes.SWACCESSSERVICE_OPERATION));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SWRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SWRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SWRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SWRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SWRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.SWRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SWRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SWRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.ALARM_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.ALARM_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.ALARM_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.ALARM_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.ALARM_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.ALARM_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.ALARM_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.ALARM_PARAMETER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.ENTRYPOINT_DEPENDENCY));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.INTERRUPTRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.INTERRUPTRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.INTERRUPTRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.INTERRUPTRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.INTERRUPTRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.INTERRUPTRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.INTERRUPTRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.INTERRUPTRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.MEMORYPARTITION_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.MEMORYPARTITION_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.MEMORYPARTITION_ATTRIBUTE));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.MEMORYPARTITION_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.MEMORYPARTITION_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.MEMORYPARTITION_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.MEMORYPARTITION_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SWTIMERRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SWTIMERRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SWTIMERRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SWTIMERRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SWTIMERRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.SWTIMERRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SWTIMERRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SWTIMERRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.DEVICEBROKER_PARAMETER));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.DEVICEBROKER_ATTRIBUTE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.DEVICEBROKER_LINK));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.DEVICEBROKER_INSTANCE));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATION));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.DEVICEBROKER_LIFELINE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.DEVICEBROKER_CLASSIFIER));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.MEMORYBROKER_PARAMETER));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.MEMORYBROKER_ATTRIBUTE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.MEMORYBROKER_LINK));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.MEMORYBROKER_INSTANCE));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATION));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.MEMORYBROKER_LIFELINE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.MEMORYBROKER_CLASSIFIER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.MESSAGECOMRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.MESSAGECOMRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.MESSAGECOMRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(LoopNode.class, MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SWSYNCHRONIZATIONRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SWSYNCHRONIZATIONRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SWSYNCHRONIZATIONRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SWSYNCHRONIZATIONRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SWSYNCHRONIZATIONRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.SWSYNCHRONIZATIONRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SWSYNCHRONIZATIONRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SWSYNCHRONIZATIONRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(Operation.class, MARTEDesignerStereotypes.CLIENTSERVERFEATURE_OPERATION));
        stereotypes.add(getStereotype(Port.class, MARTEDesignerStereotypes.CLIENTSERVERPORT_PORT));
        stereotypes.add(getStereotype(Interface.class, MARTEDesignerStereotypes.CLIENTSERVERSPECIFICATION_INTERFACE));
        stereotypes.add(getStereotype(Event.class, MARTEDesignerStereotypes.DATAEVENT_EVENT));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.DATAPOOL_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.DATAPOOL_ATTRIBUTE));
        stereotypes.add(getStereotype(BindableInstance.class, MARTEDesignerStereotypes.DATAPOOL_BINDABLEINSTANCE));
        stereotypes.add(getStereotype(Port.class, MARTEDesignerStereotypes.FLOWPORT_PORT));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.FLOWPROPERTY_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.FLOWPROPERTY_ATTRIBUTE));
        stereotypes.add(getStereotype(BindableInstance.class, MARTEDesignerStereotypes.FLOWPROPERTY_BINDABLEINSTANCE));
        stereotypes.add(getStereotype(Interface.class, MARTEDesignerStereotypes.FLOWSPECIFICATION_INTERFACE));
        stereotypes.add(getStereotype(Behavior.class, MARTEDesignerStereotypes.GCMINVOCATINGBEHAVIOR_BEHAVIOR));
        stereotypes.add(getStereotype(ActivityAction.class, MARTEDesignerStereotypes.GCMINVOCATIONACTION_ACTIVITYACTION));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.GCMTRIGGER_DEPENDENCY));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.GAACQSTEP_MODELELEMENT));
        stereotypes.add(getStereotype(Behavior.class, MARTEDesignerStereotypes.GAANALYSISCONTEXT_BEHAVIOR));
        stereotypes.add(getStereotype(Class.class, MARTEDesignerStereotypes.GAANALYSISCONTEXT_CLASS));
        stereotypes.add(getStereotype(Collaboration.class, MARTEDesignerStereotypes.GAANALYSISCONTEXT_COLLABORATION));
        stereotypes.add(getStereotype(Node.class, MARTEDesignerStereotypes.GAANALYSISCONTEXT_NODE));
        stereotypes.add(getStereotype(Package.class, MARTEDesignerStereotypes.GAANALYSISCONTEXT_PACKAGE));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.GACOMMCHANNEL_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.GACOMMCHANNEL_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.GACOMMCHANNEL_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.GACOMMCHANNEL_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.GACOMMCHANNEL_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.GACOMMCHANNEL_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.GACOMMCHANNEL_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.GACOMMCHANNEL_PARAMETER));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.GACOMMHOST_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.GACOMMHOST_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.GACOMMHOST_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.GACOMMHOST_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.GACOMMHOST_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.GACOMMHOST_PARAMETER));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.GACOMMSTEP_MODELELEMENT));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.GAEVENTTRACE_MODELELEMENT));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.GAEXECHOST_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.GAEXECHOST_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.GAEXECHOST_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.GAEXECHOST_PARAMETER));
        stereotypes.add(getStereotype(Constraint.class, MARTEDesignerStereotypes.GALATENCYOBS_CONSTRAINT));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.GARELSTEP_MODELELEMENT));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.GAREQUESTEDSERVICE_MODELELEMENT));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.GARESOURCESPLATFORM_CLASSIFIER));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.GASTEP_MODELELEMENT));
        stereotypes.add(getStereotype(Constraint.class, MARTEDesignerStereotypes.GATIMEDOBS_CONSTRAINT));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.GAWORKLOADBEHAVIOR_MODELELEMENT));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.GAWORKLOADEVENT_MODELELEMENT));
        stereotypes.add(getStereotype(Behavior.class, MARTEDesignerStereotypes.GAWORKLOADGENERATOR_BEHAVIOR));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.PACOMMSTEP_MODELELEMENT));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.PALOGICALRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.PALOGICALRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.PALOGICALRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.PALOGICALRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.PALOGICALRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.PALOGICALRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.PALOGICALRESOURCE_LINK));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.PALOGICALRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.PAREQUESTEDSERVICE_MODELELEMENT));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.PARESPASSSTEP_MODELELEMENT));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.PARUNTINSTANCE_MODELELEMENT));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.PASTEP_MODELELEMENT));
        stereotypes.add(getStereotype(Behavior.class, MARTEDesignerStereotypes.SAANALYSISCONTEXT_BEHAVIOR));
        stereotypes.add(getStereotype(Class.class, MARTEDesignerStereotypes.SAANALYSISCONTEXT_CLASS));
        stereotypes.add(getStereotype(Collaboration.class, MARTEDesignerStereotypes.SAANALYSISCONTEXT_COLLABORATION));
        stereotypes.add(getStereotype(Package.class, MARTEDesignerStereotypes.SAANALYSISCONTEXT_PACKAGE));
        stereotypes.add(getStereotype(Node.class, MARTEDesignerStereotypes.SAANALYSISCONTEXT_NODE));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SACOMMHOST_PARAMETER));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SACOMMHOST_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SACOMMHOST_ATTRIBUTE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SACOMMHOST_LINK));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SACOMMHOST_INSTANCE));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SACOMMHOST_ASSOCIATION));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.SACOMMHOST_LIFELINE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SACOMMHOST_CLASSIFIER));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.SACOMMSTEP_MODELELEMENT));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.SAENDTOENDFLOW_MODELELEMENT));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SAEXECHOST_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SAEXECHOST_ASSOCIATION));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SAEXECHOST_ATTRIBUTE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SAEXECHOST_CLASSIFIER));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SAEXECHOST_INSTANCE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SAEXECHOST_LINK));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.SAEXECHOST_LIFELINE));
        stereotypes.add(getStereotype(BehaviorParameter.class, MARTEDesignerStereotypes.SAEXECHOST_PARAMETER));
        stereotypes.add(getStereotype(Constraint.class, MARTEDesignerStereotypes.SASCHEDOBS_CONSTRAINT));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SASHAREDRESOURCE_PARAMETER));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SASHAREDRESOURCE_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SASHAREDRESOURCE_ATTRIBUTE));
        stereotypes.add(getStereotype(Link.class, MARTEDesignerStereotypes.SASHAREDRESOURCE_LINK));
        stereotypes.add(getStereotype(Instance.class, MARTEDesignerStereotypes.SASHAREDRESOURCE_INSTANCE));
        stereotypes.add(getStereotype(Association.class, MARTEDesignerStereotypes.SASHAREDRESOURCE_ASSOCIATION));
        stereotypes.add(getStereotype(Lifeline.class, MARTEDesignerStereotypes.SASHAREDRESOURCE_LIFELINE));
        stereotypes.add(getStereotype(Classifier.class, MARTEDesignerStereotypes.SASHAREDRESOURCE_CLASSIFIER));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.SASTEP_MODELELEMENT));
        stereotypes.add(getStereotype(Connector.class, MARTEDesignerStereotypes.DEFAULTLINK_CONNECTOR));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.DISTRIBUTE_DEPENDENCY));
        stereotypes.add(getStereotype(Connector.class, MARTEDesignerStereotypes.INTERREPETITION_CONNECTOR));
        stereotypes.add(getStereotype(Connector.class, MARTEDesignerStereotypes.LINKTOPOLOGY_CONNECTOR));
        stereotypes.add(getStereotype(Connector.class, MARTEDesignerStereotypes.RESHAPE_CONNECTOR));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.SHAPED_ASSOCIATIONEND));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.SHAPED_ATTRIBUTE));
        stereotypes.add(getStereotype(BindableInstance.class, MARTEDesignerStereotypes.SHAPED_BINDABLEINSTANCE));
        stereotypes.add(getStereotype(ConnectorEnd.class, MARTEDesignerStereotypes.SHAPED_CONNECTOREND));
        stereotypes.add(getStereotype(Parameter.class, MARTEDesignerStereotypes.SHAPED_PARAMETER));
        stereotypes.add(getStereotype(Connector.class, MARTEDesignerStereotypes.TILER_CONNECTOR));
        stereotypes.add(getStereotype(ConnectorEnd.class, MARTEDesignerStereotypes.TILER_CONNECTOREND));
        stereotypes.add(getStereotype(AssociationEnd.class, MARTEDesignerStereotypes.VAR_ASSOCIATIONEND));
        stereotypes.add(getStereotype(BindableInstance.class, MARTEDesignerStereotypes.VAR_BINDABLEINSTANCE));
        stereotypes.add(getStereotype(Attribute.class, MARTEDesignerStereotypes.VAR_ATTRIBUTE));
        stereotypes.add(getStereotype(ModelElement.class, MARTEDesignerStereotypes.EXPRESSIONCONTEXT_MODELELEMENT));
        stereotypes.add(getStereotype(DataType.class, MARTEDesignerStereotypes.BOUNDEDSUBTYPE_DATATYPE));
        stereotypes.add(getStereotype(DataType.class, MARTEDesignerStereotypes.CHOICETYPE_DATATYPE));
        stereotypes.add(getStereotype(DataType.class, MARTEDesignerStereotypes.COLLECTIONTYPE_DATATYPE));
        stereotypes.add(getStereotype(DataType.class, MARTEDesignerStereotypes.INTERVALTYPE_DATATYPE));
        stereotypes.add(getStereotype(DataType.class, MARTEDesignerStereotypes.TUPLETYPE_DATATYPE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ACCESSTOKENELEMENTS_SWMUTUALEXCLUSIONRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ACCESSEDELEMENT_SWACCESSSERVICE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_CHILDSCENARIO_GASCENARIO));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_SCENARIO_GASCENARIO));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_INVOCATIONS_GCMINVOCATINGBEHAVIOR));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ACQRES_GAACQSTEP));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ACQUIRESERVICES_SWMUTUALEXCLUSIONRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ACTIVATESERVICES_SWCONCURRENTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ADDRESSSPACE_SWCONCURRENTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ARBITERS_HWMEDIA_HWARBITER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_BEHAVDEMAND_PASTEP));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_BEHAVIOR_GASTEP));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_BEHAVIOR_GAWORKLOADBEHAVIOR));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_BLOCKSCOMPUTING_HWPLD_HWCOMPUTINGRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_BLOCKSRAM_HWPLD_HWRAM));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_BUFFER_HWDRIVE_HWRAM));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_CACHES_HWPROCESSOR_HWCACHE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_CAUSE_GASCENARIO));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_CLASSIFIER_DATAEVENT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_CLEARSERVICES_NOTIFICATIONRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_CLOSESERVICES_DEVICEBROKER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_CONCURRES_GASTEP));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_CONCURRENTRESOURCES_MEMORYPARTITION));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_CONNECTEDTO_HWENDPOINT_HWMEDIA));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_CONTROLSERVICES_DEVICEBROKER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_CREATESERVICES_SWRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_DEADLINEELEMENTS_SWSCHEDULABLERESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_DEADLINETYPEELEMENTS_SWSCHEDULABLERESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_DELAYSERVICES_SWSCHEDULABLERESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_DELETESERVICES_SWRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_DEMAND_GAWORKLOADEVENT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_DEPENDENTSCHEDULER_SCHEDULABLERESOURCE_SECONDARYSCHEDULER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_DEVICES_DEVICEBROKER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_DISABLECONCURRENCYSERVICES_SWCONCURRENTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_DRIVENBY_HWDMA_HWPROCESSOR));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_DURATIONELEMENTS_SWTIMERRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_EFFECT_GAWORKLOADEVENT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ENABLECONCURRENCYSERVICES_SWCONCURRENTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ENDPOINTS_HWRESOURCE_HWENDPOINT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_EXIT_MEMORYPARTITION));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_FEATURESSPEC_CLIENTSERVERPORT_CLIENTSERVERSPECIFICATION));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_FLUSHSERVICES_NOTIFICATIONRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_FORK_MEMORYPARTITION));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_GENERATOR_GAWORKLOADEVENT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_HEAPSIZEELEMENTS_SWCONCURRENTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_HOST_GASTEP));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_HOST_PARUNTINSTANCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_HOST_SCHEDULABLERESOURCE_SCHEDULER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_HOST_SCHEDULER_COMPUTINGRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_IDENTIFIERELEMENTS_SWRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_IMPLIEDCONSTRAINT_ALLOCATE_NFPCONSTRAINT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_INITIALIZESERVICES_SWRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_INPUTCLOCK_HWTIMER_HWCLOCK));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_INSERTION_DATAPOOL_BEHAVIOR));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_INSTANCE_PARUNTINSTANCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_JOINSERVICES_SWSCHEDULABLERESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_LOCKSERVICE_MEMORYBROKER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MAINSCHEDULER_PROCESSINGRESOURCE_SCHEDULER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MAIN_RTUNIT_OPERATION));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MANAGEDMEMORIES_HWSTORAGEMANAGER_HWMEMORY));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MAPSERVICE_MEMORYBROKER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MASKELEMENTS_INTERRUPTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MASKELEMENTS_NOTIFICATIONRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MEMORIES_MEMORYBROKER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MEMORYBLOCKADDRESSELEMENTS_MEMORYBROKER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MEMORYBLOCKSIZEELEMENTS_MEMORYBROKER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MEMORYSIZEFOOTPRINT_SWRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MEMORYSPACES_MEMORYPARTITION));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MESSAGEQUEUECAPACITYELEMENTS_MESSAGECOMRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MESSAGERESOURCES_SWCONCURRENTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MESSAGESIZEELEMENTS_MESSAGECOMRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MODE_CONFIGURATION_MODE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MODE_NFPCONSTRAINT_MODE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MUTUALEXCLUSIONRESOURCES_SWCONCURRENTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_NOTIFICATIONRESOURCES_SWCONCURRENTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_OCCURENCECOUNTELEMENTS_NOTIFICATIONRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ONFEATURE_GCMINVOCATIONACTION));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ONFEATURE_GCMINVOCATINGBEHAVIOR));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ONPORT_GCMINVOCATINGBEHAVIOR));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_OPENSERVICES_DEVICEBROKER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_OPERATIONMODE_RTUNIT_BEHAVIOR));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_OWNEDHW_HWRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_OWNEDISAS_HWPROCESSOR_HWISA));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_OWNEDMMUS_HWPROCESSOR_HWMMU));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_OWNEDTLBS_HWMMU_HWCACHE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_P_HW_SERVICES_HWRESOURCE_HWRESOURCESERVICE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_PERIODELEMENTS_SWCONCURRENTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_PLATFORM_GAANALYSISCONTEXT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_POWEREDSERVICES_HWCOMPONENT_HWRESOURCESERVICE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_PREDICTORS_HWPROCESSOR_HWBRANCHPREDICTOR));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_PRIORITYELEMENTS_SWCONCURRENTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_R_HW_SERVICES_HWRESOURCE_HWRESOURCESERVICE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_READSERVICES_DEVICEBROKER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_READSERVICES_SHAREDDATACOMRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_RECEIVESERVICES_MESSAGECOMRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_RELRES_GAACQSTEP));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_RELEASESERVICES_SWMUTUALEXCLUSIONRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_RESOURCE_PARESPASSSTEP));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_RESOURCES_GARESOURCESPLATFORM));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_RESUMESERVICES_SWCONCURRENTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ROOT_GASCENARIO));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ROUTINECONNECTSERVICES_INTERRUPTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ROUTINEDISCONNECTSERVICES_INTERRUPTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ROUTINE_ENTRYPOINT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_SCHEDULER_MUTUALEXCLUSIONRESOURCE_SCHEDULER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_SCHEDULERS_SWSCHEDULABLERESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_SELECTION_DATAPOOL_BEHAVIOR));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_SENDSERVICES_MESSAGECOMRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_SERVDEMAN_GASTEP));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_SHAREDATARESOURCES_SWCONCURRENTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_SHAREDRES_SASTEP));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_SIDES_HWBRIDGE_HWMEDIA));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_SIGNALSERVICES_NOTIFICATIONRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_STACKSIZEELEMENTS_SWCONCURRENTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_STATEELEMENTS_SWRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_SUBCOMPONENTS_HWCOMPONENT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_SUBUSAGE_RESOURCEUSAGE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_SUSPENDSERVICES_SWCONCURRENTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_TERMINATESERVICES_SWCONCURRENTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_TIMESLICEELEMENTS_SWSCHEDULABLERESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_TIMEDEVENT_GAWORKLOADEVENT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_TIMERS_ALARM));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_TRACE_GAWORKLOADEVENT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_UNMAPSERVICE_MEMORYBROKER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_UNLOCKSERVICE_MEMORYBROKER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_USEDRESOURCES_RESOURCEUSAGE_RESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_VECTORELEMENTS_INTERRUPTRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_WAITSERVICES_NOTIFICATIONRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_WAITINGPOLICYELEMENTS_SWINTERACTIONRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_WORKLOAD_GAANALYSISCONTEXT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_WRITESERVICES_DEVICEBROKER));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_WRITESERVICES_SHAREDDATACOMRESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_YIELDSERVICES_SWSCHEDULABLERESOURCE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MODE_NFPCONSTRAINT_MODE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_BASEUNIT_UNIT_UNIT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_BASETYPE_BOUNDEDSUBTYPE_DATATYPE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_CHOICEATTRIB_CHOICETYPE_ATTRIBUTE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_COLLECTIONATTRIB_COLLECTIONTYPE_ATTRIBUTE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_DEFAULTATTRIB_CHOICETYPE_ATTRIBUTE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_INTERVALATTRIB_INTERVALTYPE_ATTRIBUTE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_TUPLEATTRIB_TUPLETYPE_ATTRIBUTE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_BASEDIMENSION_DIMENSION_DIMENSION));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_VALUEATTRIB_NFPTYPE_ATTRIBUTE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_UNITATTRIB_NFPTYPE_ATTRIBUTE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_EXPRATTRIB_NFPTYPE_ATTRIBUTE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_UNIT_CLOCK_UNIT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_UNITTYPE_CLOCKTYPE_ENUMERATION));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_ON_TIMEDELEMENT_CLOCK));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_FINISH_TIMEDPROCESSING_EVENT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_START_TIMEDPROCESSING_EVENT));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_MAXVALATTR_CLOCKTYPE_ATTRIBUTE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_OFFSETATTR_CLOCKTYPE_ATTRIBUTE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_RESOLATTR_CLOCKTYPE_ATTRIBUTE));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_GETTIME_CLOCKTYPE_OPERATION));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_SETTIME_CLOCKTYPE_OPERATION));
        stereotypes.add(getStereotype(Dependency.class, MARTEDesignerStereotypes.PROFILEASSOCIATION_INDEXTOVALUE_CLOCKTYPE_OPERATION));
        return stereotypes;
    }

    @objid ("e2289e0c-adda-4ab2-8a60-aa980b720ff1")
    @Override
    public Set<MObject> getElements() {
        return Collections.emptySet();
    }

    @objid ("ca7fb112-140e-4c9c-8ee1-68579203ef63")
    @Override
    public Set<ExportedFileEntry> getFiles() {
        return Collections.emptySet();
    }

    @objid ("2fc45c83-6939-4fef-80c6-b72b00aec130")
    @Override
    public Set<NoteType> getNoteTypes() {
        Set<NoteType> noteTypes = new HashSet<>();

        noteTypes.add(getNoteType(MARTEDesignerStereotypes.RTFEATURE_CALLACTION, CallAction.class, MARTEDesignerNoteTypes.RTFEATURE_CALLACTION_RTFEATURE_CALLACTION_SPECIFICATION));
        noteTypes.add(getNoteType(MARTEDesignerStereotypes.RTFEATURE_MESSAGE, Message.class, MARTEDesignerNoteTypes.RTFEATURE_MESSAGE_RTFEATURE_MESSAGE_SPECIFICATION));
        noteTypes.add(getNoteType(MARTEDesignerStereotypes.RTFEATURE_OPAQUEACTION, OpaqueAction.class, MARTEDesignerNoteTypes.RTFEATURE_OPAQUEACTION_RTFEATURE_OPAQUEACTION_SPECIFICATION));
        noteTypes.add(getNoteType(MARTEDesignerStereotypes.RTFEATURE_OPERATION, Operation.class, MARTEDesignerNoteTypes.RTFEATURE_OPERATION_RTFEATURE_OPERATION_SPECIFICATION));
        noteTypes.add(getNoteType(MARTEDesignerStereotypes.RTFEATURE_PORT, Port.class, MARTEDesignerNoteTypes.RTFEATURE_PORT_RTFEATURE_PORT_SPECIFICATION));
        noteTypes.add(getNoteType(MARTEDesignerStereotypes.RTFEATURE_SENDSIGNALACTION, SendSignalAction.class, MARTEDesignerNoteTypes.RTFEATURE_SENDSIGNALACTION_RTFEATURE_SENDSIGNALACTION_SPECIFICATION));
        noteTypes.add(getNoteType(MARTEDesignerStereotypes.RTFEATURE_SIGNAL, Signal.class, MARTEDesignerNoteTypes.RTFEATURE_SIGNAL_RTFEATURE_SIGNAL_SPECIFICATION));
        noteTypes.add(getNoteType(ModelElement.class, MARTEDesignerNoteTypes.MODELELEMENT_TIMEDOBSERVATION));
        noteTypes.add(getNoteType(ModelElement.class, MARTEDesignerNoteTypes.MODELELEMENT_ASSIGN));
        return noteTypes;
    }

    /**
     * Get a NoteType from the metamodel extensions.
     */
    @objid ("ff01a1fb-afe0-434c-b082-4f831ab08027")
    private NoteType getNoteType(String sterotypeName, java.lang.Class<? extends MObject> metaclass, String noteTypeName) {
        IMetamodelExtensions metamodel = this.session.getMetamodelExtensions();
        MClass mClass = MARTEModule.getInstance().getModuleContext().getModelioServices().getMetamodelService().getMetamodel().getMClass(metaclass);
        return metamodel.getNoteType(metamodel.getStereotype(IMARTEDesignerPeerModule.MODULE_NAME, sterotypeName, mClass), noteTypeName);
    }

    /**
     * Get a tagType from the metamodel extensions.
     */
    @objid ("075ccda0-75d2-42e2-b409-48bf735853c6")
    private TagType getTagType(String sterotypeName, java.lang.Class<? extends MObject> metaclass, String tagTypeName) {
        IMetamodelExtensions metamodel = this.session.getMetamodelExtensions();
        MClass mClass = MARTEModule.getInstance().getModuleContext().getModelioServices().getMetamodelService().getMetamodel().getMClass(metaclass);
        return metamodel.getTagType(metamodel.getStereotype(IMARTEDesignerPeerModule.MODULE_NAME, sterotypeName, mClass), tagTypeName);
    }

    @objid ("187820c0-523e-4d2f-8510-92e929ffe0ec")
    @Override
    public Set<TagType> getTagTypes() {
        Set<TagType> tagTypes = new HashSet<>();

        tagTypes.add(getTagType(MARTEDesignerStereotypes.ACQUIRE_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.ACQUIRE_BEHAVIOR_ACQUIRE_BEHAVIOR_ISBLOCKING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ACQUIRE_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.ACQUIRE_COLLABORATION_ACQUIRE_COLLABORATION_ISBLOCKING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ACQUIRE_COLLABORATIONUSE, CollaborationUse.class, MARTEDesignerTagTypes.ACQUIRE_COLLABORATIONUSE_ACQUIRE_COLLABORATIONUSE_ISBLOCKING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ACQUIRE_EXECUTIONSPECIFICATION, ExecutionSpecification.class, MARTEDesignerTagTypes.ACQUIRE_EXECUTIONSPECIFICATION_ACQUIRE_EXECUTIONSPECIFICATION_ISBLOCKING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ACQUIRE_OPERATION, Operation.class, MARTEDesignerTagTypes.ACQUIRE_OPERATION_ACQUIRE_OPERATION_ISBLOCKING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.COMMUNICATIONENDPOINT_ASSOCIATION_COMMUNICATIONENDPOINT_ASSOCIATION_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.COMMUNICATIONENDPOINT_ASSOCIATIONEND_COMMUNICATIONENDPOINT_ASSOCIATIONEND_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.COMMUNICATIONENDPOINT_ATTRIBUTE_COMMUNICATIONENDPOINT_ATTRIBUTE_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.COMMUNICATIONENDPOINT_CLASSIFIER_COMMUNICATIONENDPOINT_CLASSIFIER_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_INSTANCE, Instance.class, MARTEDesignerTagTypes.COMMUNICATIONENDPOINT_INSTANCE_COMMUNICATIONENDPOINT_INSTANCE_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.COMMUNICATIONENDPOINT_LIFELINE_COMMUNICATIONENDPOINT_LIFELINE_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_LINK, Link.class, MARTEDesignerTagTypes.COMMUNICATIONENDPOINT_LINK_COMMUNICATIONENDPOINT_LINK_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_LINKEND, LinkEnd.class, MARTEDesignerTagTypes.COMMUNICATIONENDPOINT_LINKEND_COMMUNICATIONENDPOINT_LINKEND_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONENDPOINT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.COMMUNICATIONENDPOINT_PARAMETER_COMMUNICATIONENDPOINT_PARAMETER_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ASSOCIATION, Association.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_ASSOCIATION_COMMUNICATIONMEDIA_ASSOCIATION_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ASSOCIATION, Association.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_ASSOCIATION_COMMUNICATIONMEDIA_ASSOCIATION_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ASSOCIATION, Association.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_ASSOCIATION_COMMUNICATIONMEDIA_ASSOCIATION_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ASSOCIATION, Association.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_ASSOCIATION_COMMUNICATIONMEDIA_ASSOCIATION_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ASSOCIATION, Association.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_ASSOCIATION_COMMUNICATIONMEDIA_ASSOCIATION_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_ASSOCIATIONEND_COMMUNICATIONMEDIA_ASSOCIATIONEND_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_ASSOCIATIONEND_COMMUNICATIONMEDIA_ASSOCIATIONEND_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_ASSOCIATIONEND_COMMUNICATIONMEDIA_ASSOCIATIONEND_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_ASSOCIATIONEND_COMMUNICATIONMEDIA_ASSOCIATIONEND_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_ASSOCIATIONEND_COMMUNICATIONMEDIA_ASSOCIATIONEND_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_ATTRIBUTE_COMMUNICATIONMEDIA_ATTRIBUTE_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_ATTRIBUTE_COMMUNICATIONMEDIA_ATTRIBUTE_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_ATTRIBUTE_COMMUNICATIONMEDIA_ATTRIBUTE_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_ATTRIBUTE_COMMUNICATIONMEDIA_ATTRIBUTE_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_ATTRIBUTE_COMMUNICATIONMEDIA_ATTRIBUTE_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_CLASSIFIER_COMMUNICATIONMEDIA_CLASSIFIER_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_CLASSIFIER_COMMUNICATIONMEDIA_CLASSIFIER_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_CLASSIFIER_COMMUNICATIONMEDIA_CLASSIFIER_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_CLASSIFIER_COMMUNICATIONMEDIA_CLASSIFIER_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_CLASSIFIER_COMMUNICATIONMEDIA_CLASSIFIER_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_INSTANCE, Instance.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_INSTANCE_COMMUNICATIONMEDIA_INSTANCE_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_INSTANCE, Instance.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_INSTANCE_COMMUNICATIONMEDIA_INSTANCE_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_INSTANCE, Instance.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_INSTANCE_COMMUNICATIONMEDIA_INSTANCE_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_INSTANCE, Instance.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_INSTANCE_COMMUNICATIONMEDIA_INSTANCE_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_INSTANCE, Instance.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_INSTANCE_COMMUNICATIONMEDIA_INSTANCE_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_LIFELINE_COMMUNICATIONMEDIA_LIFELINE_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_LIFELINE_COMMUNICATIONMEDIA_LIFELINE_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_LIFELINE_COMMUNICATIONMEDIA_LIFELINE_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_LIFELINE_COMMUNICATIONMEDIA_LIFELINE_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_LIFELINE_COMMUNICATIONMEDIA_LIFELINE_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_LINK, Link.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_LINK_COMMUNICATIONMEDIA_LINK_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_LINK, Link.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_LINK_COMMUNICATIONMEDIA_LINK_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_LINK, Link.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_LINK_COMMUNICATIONMEDIA_LINK_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_LINK, Link.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_LINK_COMMUNICATIONMEDIA_LINK_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_LINK, Link.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_LINK_COMMUNICATIONMEDIA_LINK_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_PARAMETER, Parameter.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_PARAMETER_COMMUNICATIONMEDIA_PARAMETER_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_PARAMETER, Parameter.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_PARAMETER_COMMUNICATIONMEDIA_PARAMETER_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_PARAMETER, Parameter.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_PARAMETER_COMMUNICATIONMEDIA_PARAMETER_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_PARAMETER, Parameter.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_PARAMETER_COMMUNICATIONMEDIA_PARAMETER_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COMMUNICATIONMEDIA_PARAMETER, Parameter.class, MARTEDesignerTagTypes.COMMUNICATIONMEDIA_PARAMETER_COMMUNICATIONMEDIA_PARAMETER_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GRSERVICE_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.GRSERVICE_BEHAVIOR_GRSERVICE_BEHAVIOR_OWNER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GRSERVICE_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.GRSERVICE_COLLABORATION_GRSERVICE_COLLABORATION_OWNER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GRSERVICE_COLLABORATIONUSE, CollaborationUse.class, MARTEDesignerTagTypes.GRSERVICE_COLLABORATIONUSE_GRSERVICE_COLLABORATIONUSE_OWNER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GRSERVICE_EXECUTIONSPECIFICATION, ExecutionSpecification.class, MARTEDesignerTagTypes.GRSERVICE_EXECUTIONSPECIFICATION_GRSERVICE_EXECUTIONSPECIFICATION_OWNER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GRSERVICE_OPERATION, Operation.class, MARTEDesignerTagTypes.GRSERVICE_OPERATION_GRSERVICE_OPERATION_OWNER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATION_MUTUALEXCLUSIONRESOURCE_ASSOCIATION_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATION_MUTUALEXCLUSIONRESOURCE_ASSOCIATION_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATION_MUTUALEXCLUSIONRESOURCE_ASSOCIATION_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATION_MUTUALEXCLUSIONRESOURCE_ASSOCIATION_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_MUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_MUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_MUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_MUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_ATTRIBUTE_MUTUALEXCLUSIONRESOURCE_ATTRIBUTE_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_ATTRIBUTE_MUTUALEXCLUSIONRESOURCE_ATTRIBUTE_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_ATTRIBUTE_MUTUALEXCLUSIONRESOURCE_ATTRIBUTE_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_ATTRIBUTE_MUTUALEXCLUSIONRESOURCE_ATTRIBUTE_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_CLASSIFIER_MUTUALEXCLUSIONRESOURCE_CLASSIFIER_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_CLASSIFIER_MUTUALEXCLUSIONRESOURCE_CLASSIFIER_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_CLASSIFIER_MUTUALEXCLUSIONRESOURCE_CLASSIFIER_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_CLASSIFIER_MUTUALEXCLUSIONRESOURCE_CLASSIFIER_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_INSTANCE_MUTUALEXCLUSIONRESOURCE_INSTANCE_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_INSTANCE_MUTUALEXCLUSIONRESOURCE_INSTANCE_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_INSTANCE_MUTUALEXCLUSIONRESOURCE_INSTANCE_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_INSTANCE_MUTUALEXCLUSIONRESOURCE_INSTANCE_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_LIFELINE_MUTUALEXCLUSIONRESOURCE_LIFELINE_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_LIFELINE_MUTUALEXCLUSIONRESOURCE_LIFELINE_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_LIFELINE_MUTUALEXCLUSIONRESOURCE_LIFELINE_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_LIFELINE_MUTUALEXCLUSIONRESOURCE_LIFELINE_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_LINK_MUTUALEXCLUSIONRESOURCE_LINK_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_LINK_MUTUALEXCLUSIONRESOURCE_LINK_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_LINK_MUTUALEXCLUSIONRESOURCE_LINK_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_LINK_MUTUALEXCLUSIONRESOURCE_LINK_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_PARAMETER_MUTUALEXCLUSIONRESOURCE_PARAMETER_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_PARAMETER_MUTUALEXCLUSIONRESOURCE_PARAMETER_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_PARAMETER_MUTUALEXCLUSIONRESOURCE_PARAMETER_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MUTUALEXCLUSIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MUTUALEXCLUSIONRESOURCE_PARAMETER_MUTUALEXCLUSIONRESOURCE_PARAMETER_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_ASSOCIATION_PROCESSINGRESOURCE_ASSOCIATION_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_ASSOCIATION_PROCESSINGRESOURCE_ASSOCIATION_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_ASSOCIATIONEND_PROCESSINGRESOURCE_ASSOCIATIONEND_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_ASSOCIATIONEND_PROCESSINGRESOURCE_ASSOCIATIONEND_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_ATTRIBUTE_PROCESSINGRESOURCE_ATTRIBUTE_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_ATTRIBUTE_PROCESSINGRESOURCE_ATTRIBUTE_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_CLASSIFIER_PROCESSINGRESOURCE_CLASSIFIER_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_CLASSIFIER_PROCESSINGRESOURCE_CLASSIFIER_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_INSTANCE_PROCESSINGRESOURCE_INSTANCE_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_INSTANCE_PROCESSINGRESOURCE_INSTANCE_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_LIFELINE_PROCESSINGRESOURCE_LIFELINE_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_LIFELINE_PROCESSINGRESOURCE_LIFELINE_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_LINK_PROCESSINGRESOURCE_LINK_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_LINK_PROCESSINGRESOURCE_LINK_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_PARAMETER_PROCESSINGRESOURCE_PARAMETER_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PROCESSINGRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.PROCESSINGRESOURCE_PARAMETER_PROCESSINGRESOURCE_PARAMETER_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCEUSAGE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.RESOURCEUSAGE_MODELELEMENT_RESOURCEUSAGE_MODELELEMENT_EXECTIME));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCEUSAGE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.RESOURCEUSAGE_MODELELEMENT_RESOURCEUSAGE_MODELELEMENT_ALLOCATEDMEMORY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCEUSAGE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.RESOURCEUSAGE_MODELELEMENT_RESOURCEUSAGE_MODELELEMENT_USEDMEMORY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCEUSAGE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.RESOURCEUSAGE_MODELELEMENT_RESOURCEUSAGE_MODELELEMENT_POWERPEAK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCEUSAGE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.RESOURCEUSAGE_MODELELEMENT_RESOURCEUSAGE_MODELELEMENT_ENERGY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCEUSAGE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.RESOURCEUSAGE_MODELELEMENT_RESOURCEUSAGE_MODELELEMENT_SUBUSAGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCEUSAGE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.RESOURCEUSAGE_MODELELEMENT_RESOURCEUSAGE_MODELELEMENT_USEDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCEUSAGE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.RESOURCEUSAGE_MODELELEMENT_RESOURCEUSAGE_MODELELEMENT_MSGSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.RESOURCE_ASSOCIATION_RESOURCE_ASSOCIATION_RESMULT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.RESOURCE_ASSOCIATION_RESOURCE_ASSOCIATION_ISPROTECTED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.RESOURCE_ASSOCIATION_RESOURCE_ASSOCIATION_ISACTIVE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.RESOURCE_ASSOCIATIONEND_RESOURCE_ASSOCIATIONEND_RESMULT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.RESOURCE_ASSOCIATIONEND_RESOURCE_ASSOCIATIONEND_ISPROTECTED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.RESOURCE_ASSOCIATIONEND_RESOURCE_ASSOCIATIONEND_ISACTIVE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.RESOURCE_ATTRIBUTE_RESOURCE_ATTRIBUTE_RESMULT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.RESOURCE_ATTRIBUTE_RESOURCE_ATTRIBUTE_ISPROTECTED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.RESOURCE_ATTRIBUTE_RESOURCE_ATTRIBUTE_ISACTIVE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.RESOURCE_CLASSIFIER_RESOURCE_CLASSIFIER_RESMULT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.RESOURCE_CLASSIFIER_RESOURCE_CLASSIFIER_ISPROTECTED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.RESOURCE_CLASSIFIER_RESOURCE_CLASSIFIER_ISACTIVE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.RESOURCE_INSTANCE_RESOURCE_INSTANCE_RESMULT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.RESOURCE_INSTANCE_RESOURCE_INSTANCE_ISPROTECTED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.RESOURCE_INSTANCE_RESOURCE_INSTANCE_ISACTIVE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.RESOURCE_LIFELINE_RESOURCE_LIFELINE_RESMULT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.RESOURCE_LIFELINE_RESOURCE_LIFELINE_ISPROTECTED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.RESOURCE_LIFELINE_RESOURCE_LIFELINE_ISACTIVE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_LINK, Link.class, MARTEDesignerTagTypes.RESOURCE_LINK_RESOURCE_LINK_RESMULT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_LINK, Link.class, MARTEDesignerTagTypes.RESOURCE_LINK_RESOURCE_LINK_ISPROTECTED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_LINK, Link.class, MARTEDesignerTagTypes.RESOURCE_LINK_RESOURCE_LINK_ISACTIVE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_LINKEND, LinkEnd.class, MARTEDesignerTagTypes.RESOURCE_LINKEND_RESOURCE_LINKEND_RESMULT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_LINKEND, LinkEnd.class, MARTEDesignerTagTypes.RESOURCE_LINKEND_RESOURCE_LINKEND_ISPROTECTED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_LINKEND, LinkEnd.class, MARTEDesignerTagTypes.RESOURCE_LINKEND_RESOURCE_LINKEND_ISACTIVE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.RESOURCE_PARAMETER_RESOURCE_PARAMETER_RESMULT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.RESOURCE_PARAMETER_RESOURCE_PARAMETER_ISPROTECTED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.RESOURCE_PARAMETER_RESOURCE_PARAMETER_ISACTIVE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_ASSOCIATION_SCHEDULABLERESOURCE_ASSOCIATION_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_ASSOCIATION_SCHEDULABLERESOURCE_ASSOCIATION_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_ASSOCIATION_SCHEDULABLERESOURCE_ASSOCIATION_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_ASSOCIATIONEND_SCHEDULABLERESOURCE_ASSOCIATIONEND_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_ASSOCIATIONEND_SCHEDULABLERESOURCE_ASSOCIATIONEND_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_ASSOCIATIONEND_SCHEDULABLERESOURCE_ASSOCIATIONEND_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_ATTRIBUTE_SCHEDULABLERESOURCE_ATTRIBUTE_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_ATTRIBUTE_SCHEDULABLERESOURCE_ATTRIBUTE_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_ATTRIBUTE_SCHEDULABLERESOURCE_ATTRIBUTE_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_CLASSIFIER_SCHEDULABLERESOURCE_CLASSIFIER_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_CLASSIFIER_SCHEDULABLERESOURCE_CLASSIFIER_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_CLASSIFIER_SCHEDULABLERESOURCE_CLASSIFIER_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_INSTANCE_SCHEDULABLERESOURCE_INSTANCE_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_INSTANCE_SCHEDULABLERESOURCE_INSTANCE_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_INSTANCE_SCHEDULABLERESOURCE_INSTANCE_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_LIFELINE_SCHEDULABLERESOURCE_LIFELINE_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_LIFELINE_SCHEDULABLERESOURCE_LIFELINE_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_LIFELINE_SCHEDULABLERESOURCE_LIFELINE_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_LINK_SCHEDULABLERESOURCE_LINK_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_LINK_SCHEDULABLERESOURCE_LINK_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_LINK_SCHEDULABLERESOURCE_LINK_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_PARAMETER_SCHEDULABLERESOURCE_PARAMETER_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_PARAMETER_SCHEDULABLERESOURCE_PARAMETER_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULABLERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SCHEDULABLERESOURCE_PARAMETER_SCHEDULABLERESOURCE_PARAMETER_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATION_SCHEDULER_ASSOCIATION_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATION_SCHEDULER_ASSOCIATION_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATION_SCHEDULER_ASSOCIATION_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATION_SCHEDULER_ASSOCIATION_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATION_SCHEDULER_ASSOCIATION_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATION_SCHEDULER_ASSOCIATION_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATION_SCHEDULER_ASSOCIATION_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATION_SCHEDULER_ASSOCIATION_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATIONEND_SCHEDULER_ASSOCIATIONEND_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATIONEND_SCHEDULER_ASSOCIATIONEND_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATIONEND_SCHEDULER_ASSOCIATIONEND_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATIONEND_SCHEDULER_ASSOCIATIONEND_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATIONEND_SCHEDULER_ASSOCIATIONEND_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATIONEND_SCHEDULER_ASSOCIATIONEND_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATIONEND_SCHEDULER_ASSOCIATIONEND_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SCHEDULER_ASSOCIATIONEND_SCHEDULER_ASSOCIATIONEND_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SCHEDULER_ATTRIBUTE_SCHEDULER_ATTRIBUTE_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SCHEDULER_ATTRIBUTE_SCHEDULER_ATTRIBUTE_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SCHEDULER_ATTRIBUTE_SCHEDULER_ATTRIBUTE_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SCHEDULER_ATTRIBUTE_SCHEDULER_ATTRIBUTE_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SCHEDULER_ATTRIBUTE_SCHEDULER_ATTRIBUTE_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SCHEDULER_ATTRIBUTE_SCHEDULER_ATTRIBUTE_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SCHEDULER_ATTRIBUTE_SCHEDULER_ATTRIBUTE_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SCHEDULER_ATTRIBUTE_SCHEDULER_ATTRIBUTE_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SCHEDULER_CLASSIFIER_SCHEDULER_CLASSIFIER_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SCHEDULER_CLASSIFIER_SCHEDULER_CLASSIFIER_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SCHEDULER_CLASSIFIER_SCHEDULER_CLASSIFIER_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SCHEDULER_CLASSIFIER_SCHEDULER_CLASSIFIER_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SCHEDULER_CLASSIFIER_SCHEDULER_CLASSIFIER_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SCHEDULER_CLASSIFIER_SCHEDULER_CLASSIFIER_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SCHEDULER_CLASSIFIER_SCHEDULER_CLASSIFIER_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SCHEDULER_CLASSIFIER_SCHEDULER_CLASSIFIER_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_INSTANCE, Instance.class, MARTEDesignerTagTypes.SCHEDULER_INSTANCE_SCHEDULER_INSTANCE_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_INSTANCE, Instance.class, MARTEDesignerTagTypes.SCHEDULER_INSTANCE_SCHEDULER_INSTANCE_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_INSTANCE, Instance.class, MARTEDesignerTagTypes.SCHEDULER_INSTANCE_SCHEDULER_INSTANCE_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_INSTANCE, Instance.class, MARTEDesignerTagTypes.SCHEDULER_INSTANCE_SCHEDULER_INSTANCE_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_INSTANCE, Instance.class, MARTEDesignerTagTypes.SCHEDULER_INSTANCE_SCHEDULER_INSTANCE_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_INSTANCE, Instance.class, MARTEDesignerTagTypes.SCHEDULER_INSTANCE_SCHEDULER_INSTANCE_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_INSTANCE, Instance.class, MARTEDesignerTagTypes.SCHEDULER_INSTANCE_SCHEDULER_INSTANCE_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_INSTANCE, Instance.class, MARTEDesignerTagTypes.SCHEDULER_INSTANCE_SCHEDULER_INSTANCE_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SCHEDULER_LIFELINE_SCHEDULER_LIFELINE_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SCHEDULER_LIFELINE_SCHEDULER_LIFELINE_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SCHEDULER_LIFELINE_SCHEDULER_LIFELINE_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SCHEDULER_LIFELINE_SCHEDULER_LIFELINE_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SCHEDULER_LIFELINE_SCHEDULER_LIFELINE_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SCHEDULER_LIFELINE_SCHEDULER_LIFELINE_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SCHEDULER_LIFELINE_SCHEDULER_LIFELINE_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SCHEDULER_LIFELINE_SCHEDULER_LIFELINE_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LINK, Link.class, MARTEDesignerTagTypes.SCHEDULER_LINK_SCHEDULER_LINK_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LINK, Link.class, MARTEDesignerTagTypes.SCHEDULER_LINK_SCHEDULER_LINK_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LINK, Link.class, MARTEDesignerTagTypes.SCHEDULER_LINK_SCHEDULER_LINK_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LINK, Link.class, MARTEDesignerTagTypes.SCHEDULER_LINK_SCHEDULER_LINK_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LINK, Link.class, MARTEDesignerTagTypes.SCHEDULER_LINK_SCHEDULER_LINK_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LINK, Link.class, MARTEDesignerTagTypes.SCHEDULER_LINK_SCHEDULER_LINK_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LINK, Link.class, MARTEDesignerTagTypes.SCHEDULER_LINK_SCHEDULER_LINK_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_LINK, Link.class, MARTEDesignerTagTypes.SCHEDULER_LINK_SCHEDULER_LINK_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SCHEDULER_PARAMETER_SCHEDULER_PARAMETER_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SCHEDULER_PARAMETER_SCHEDULER_PARAMETER_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SCHEDULER_PARAMETER_SCHEDULER_PARAMETER_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SCHEDULER_PARAMETER_SCHEDULER_PARAMETER_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SCHEDULER_PARAMETER_SCHEDULER_PARAMETER_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SCHEDULER_PARAMETER_SCHEDULER_PARAMETER_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SCHEDULER_PARAMETER_SCHEDULER_PARAMETER_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SCHEDULER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SCHEDULER_PARAMETER_SCHEDULER_PARAMETER_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SECONDARYSCHEDULER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SECONDARYSCHEDULER_ASSOCIATION_SECONDARYSCHEDULER_ASSOCIATION_VIRTUALPROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SECONDARYSCHEDULER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SECONDARYSCHEDULER_ASSOCIATIONEND_SECONDARYSCHEDULER_ASSOCIATIONEND_VIRTUALPROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SECONDARYSCHEDULER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SECONDARYSCHEDULER_ATTRIBUTE_SECONDARYSCHEDULER_ATTRIBUTE_VIRTUALPROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SECONDARYSCHEDULER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SECONDARYSCHEDULER_CLASSIFIER_SECONDARYSCHEDULER_CLASSIFIER_VIRTUALPROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SECONDARYSCHEDULER_INSTANCE, Instance.class, MARTEDesignerTagTypes.SECONDARYSCHEDULER_INSTANCE_SECONDARYSCHEDULER_INSTANCE_VIRTUALPROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SECONDARYSCHEDULER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SECONDARYSCHEDULER_LIFELINE_SECONDARYSCHEDULER_LIFELINE_VIRTUALPROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SECONDARYSCHEDULER_LINK, Link.class, MARTEDesignerTagTypes.SECONDARYSCHEDULER_LINK_SECONDARYSCHEDULER_LINK_VIRTUALPROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SECONDARYSCHEDULER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SECONDARYSCHEDULER_PARAMETER_SECONDARYSCHEDULER_PARAMETER_VIRTUALPROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.STORAGERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.STORAGERESOURCE_ASSOCIATION_STORAGERESOURCE_ASSOCIATION_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.STORAGERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.STORAGERESOURCE_ASSOCIATIONEND_STORAGERESOURCE_ASSOCIATIONEND_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.STORAGERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.STORAGERESOURCE_ATTRIBUTE_STORAGERESOURCE_ATTRIBUTE_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.STORAGERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.STORAGERESOURCE_CLASSIFIER_STORAGERESOURCE_CLASSIFIER_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.STORAGERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.STORAGERESOURCE_INSTANCE_STORAGERESOURCE_INSTANCE_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.STORAGERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.STORAGERESOURCE_LIFELINE_STORAGERESOURCE_LIFELINE_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.STORAGERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.STORAGERESOURCE_LINK_STORAGERESOURCE_LINK_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.STORAGERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.STORAGERESOURCE_PARAMETER_STORAGERESOURCE_PARAMETER_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.TIMERRESOURCE_ASSOCIATION_TIMERRESOURCE_ASSOCIATION_DURATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.TIMERRESOURCE_ASSOCIATION_TIMERRESOURCE_ASSOCIATION_ISPERIODIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.TIMERRESOURCE_ASSOCIATIONEND_TIMERRESOURCE_ASSOCIATIONEND_DURATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.TIMERRESOURCE_ASSOCIATIONEND_TIMERRESOURCE_ASSOCIATIONEND_ISPERIODIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.TIMERRESOURCE_ATTRIBUTE_TIMERRESOURCE_ATTRIBUTE_DURATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.TIMERRESOURCE_ATTRIBUTE_TIMERRESOURCE_ATTRIBUTE_ISPERIODIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.TIMERRESOURCE_CLASSIFIER_TIMERRESOURCE_CLASSIFIER_DURATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.TIMERRESOURCE_CLASSIFIER_TIMERRESOURCE_CLASSIFIER_ISPERIODIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.TIMERRESOURCE_INSTANCE_TIMERRESOURCE_INSTANCE_DURATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.TIMERRESOURCE_INSTANCE_TIMERRESOURCE_INSTANCE_ISPERIODIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.TIMERRESOURCE_LIFELINE_TIMERRESOURCE_LIFELINE_DURATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.TIMERRESOURCE_LIFELINE_TIMERRESOURCE_LIFELINE_ISPERIODIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.TIMERRESOURCE_LINK_TIMERRESOURCE_LINK_DURATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.TIMERRESOURCE_LINK_TIMERRESOURCE_LINK_ISPERIODIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.TIMERRESOURCE_PARAMETER_TIMERRESOURCE_PARAMETER_DURATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMERRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.TIMERRESOURCE_PARAMETER_TIMERRESOURCE_PARAMETER_ISPERIODIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALLOCATEACTIVITYGROUP_ACTIVITYPARTITION, ActivityPartition.class, MARTEDesignerTagTypes.ALLOCATEACTIVITYGROUP_ACTIVITYPARTITION_ALLOCATEACTIVITYGROUP_ACTIVITYPARTITION_ISUNIQUE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALLOCATE_DEPENDENCY, Dependency.class, MARTEDesignerTagTypes.ALLOCATE_DEPENDENCY_ALLOCATE_DEPENDENCY_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALLOCATE_DEPENDENCY, Dependency.class, MARTEDesignerTagTypes.ALLOCATE_DEPENDENCY_ALLOCATE_DEPENDENCY_NATURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALLOCATE_DEPENDENCY, Dependency.class, MARTEDesignerTagTypes.ALLOCATE_DEPENDENCY_ALLOCATE_DEPENDENCY_IMPLIEDCONSTRAINT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALLOCATED_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.ALLOCATED_MODELELEMENT_ALLOCATED_MODELELEMENT_ALLOCATEDTO));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALLOCATED_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.ALLOCATED_MODELELEMENT_ALLOCATED_MODELELEMENT_ALLOCATEDFROM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALLOCATED_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.ALLOCATED_MODELELEMENT_ALLOCATED_MODELELEMENT_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ASSIGN_NOTE, Note.class, MARTEDesignerTagTypes.ASSIGN_NOTE_ASSIGN_NOTE_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ASSIGN_NOTE, Note.class, MARTEDesignerTagTypes.ASSIGN_NOTE_ASSIGN_NOTE_NATURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ASSIGN_NOTE, Note.class, MARTEDesignerTagTypes.ASSIGN_NOTE_ASSIGN_NOTE_FROM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ASSIGN_NOTE, Note.class, MARTEDesignerTagTypes.ASSIGN_NOTE_ASSIGN_NOTE_TO));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ASSIGN_NOTE, Note.class, MARTEDesignerTagTypes.ASSIGN_NOTE_ASSIGN_NOTE_IMPLIEDCONSTRAINT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NFPREFINE_DEPENDENCY, Dependency.class, MARTEDesignerTagTypes.NFPREFINE_DEPENDENCY_NFPREFINE_DEPENDENCY_CONSTRAINT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CONFIGURATION_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.CONFIGURATION_BEHAVIOR_CONFIGURATION_BEHAVIOR_MODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CONFIGURATION_CLASS, Class.class, MARTEDesignerTagTypes.CONFIGURATION_CLASS_CONFIGURATION_CLASS_MODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CONFIGURATION_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.CONFIGURATION_COLLABORATION_CONFIGURATION_COLLABORATION_MODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CONFIGURATION_NODE, Node.class, MARTEDesignerTagTypes.CONFIGURATION_NODE_CONFIGURATION_NODE_MODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CONFIGURATION_PACKAGE, Package.class, MARTEDesignerTagTypes.CONFIGURATION_PACKAGE_CONFIGURATION_PACKAGE_MODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.UNIT_ENUMERATIONLITERAL, EnumerationLiteral.class, MARTEDesignerTagTypes.UNIT_ENUMERATIONLITERAL_UNIT_ENUMERATIONLITERAL_CONVFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.UNIT_ENUMERATIONLITERAL, EnumerationLiteral.class, MARTEDesignerTagTypes.UNIT_ENUMERATIONLITERAL_UNIT_ENUMERATIONLITERAL_OFFSETFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.UNIT_ENUMERATIONLITERAL, EnumerationLiteral.class, MARTEDesignerTagTypes.UNIT_ENUMERATIONLITERAL_UNIT_ENUMERATIONLITERAL_BASEUNIT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NFPTYPE_DATATYPE, DataType.class, MARTEDesignerTagTypes.NFPTYPE_DATATYPE_NFPTYPE_DATATYPE_VALUEATTRIB));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NFPTYPE_DATATYPE, DataType.class, MARTEDesignerTagTypes.NFPTYPE_DATATYPE_NFPTYPE_DATATYPE_UNITATTRIB));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NFPTYPE_DATATYPE, DataType.class, MARTEDesignerTagTypes.NFPTYPE_DATATYPE_NFPTYPE_DATATYPE_EXPRATTRIB));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DIMENSION_ENUMERATION, Enumeration.class, MARTEDesignerTagTypes.DIMENSION_ENUMERATION_DIMENSION_ENUMERATION_SYMBOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DIMENSION_ENUMERATION, Enumeration.class, MARTEDesignerTagTypes.DIMENSION_ENUMERATION_DIMENSION_ENUMERATION_BASEDIMENSION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DIMENSION_ENUMERATION, Enumeration.class, MARTEDesignerTagTypes.DIMENSION_ENUMERATION_DIMENSION_ENUMERATION_BASEEXPONENT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NFPCONSTRAINT_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.NFPCONSTRAINT_CONSTRAINT_NFPCONSTRAINT_CONSTRAINT_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NFPCONSTRAINT_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.NFPCONSTRAINT_CONSTRAINT_NFPCONSTRAINT_CONSTRAINT_MODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCKCONSTRAINT_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.CLOCKCONSTRAINT_CONSTRAINT_CLOCKCONSTRAINT_CONSTRAINT_ISCOINCIDENCEBASED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCKCONSTRAINT_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.CLOCKCONSTRAINT_CONSTRAINT_CLOCKCONSTRAINT_CONSTRAINT_ISPRECEDENCEBASED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCKCONSTRAINT_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.CLOCKCONSTRAINT_CONSTRAINT_CLOCKCONSTRAINT_CONSTRAINT_ISCHRONOMETRICBASED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCKCONSTRAINT_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.CLOCKCONSTRAINT_CONSTRAINT_CLOCKCONSTRAINT_CONSTRAINT_ON));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCKTYPE_CLASS, Class.class, MARTEDesignerTagTypes.CLOCKTYPE_CLASS_CLOCKTYPE_CLASS_NATURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCKTYPE_CLASS, Class.class, MARTEDesignerTagTypes.CLOCKTYPE_CLASS_CLOCKTYPE_CLASS_UNITTYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCKTYPE_CLASS, Class.class, MARTEDesignerTagTypes.CLOCKTYPE_CLASS_CLOCKTYPE_CLASS_ISLOGICAL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCKTYPE_CLASS, Class.class, MARTEDesignerTagTypes.CLOCKTYPE_CLASS_CLOCKTYPE_CLASS_RESOLATTR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCKTYPE_CLASS, Class.class, MARTEDesignerTagTypes.CLOCKTYPE_CLASS_CLOCKTYPE_CLASS_MAXVALATTR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCKTYPE_CLASS, Class.class, MARTEDesignerTagTypes.CLOCKTYPE_CLASS_CLOCKTYPE_CLASS_OFFSETATTR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCKTYPE_CLASS, Class.class, MARTEDesignerTagTypes.CLOCKTYPE_CLASS_CLOCKTYPE_CLASS_GETTIME));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCKTYPE_CLASS, Class.class, MARTEDesignerTagTypes.CLOCKTYPE_CLASS_CLOCKTYPE_CLASS_SETTIME));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCKTYPE_CLASS, Class.class, MARTEDesignerTagTypes.CLOCKTYPE_CLASS_CLOCKTYPE_CLASS_INDEXTOVALUE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.CLOCK_ASSOCIATIONEND_CLOCK_ASSOCIATIONEND_STANDARD));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.CLOCK_ASSOCIATIONEND_CLOCK_ASSOCIATIONEND_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.CLOCK_ASSOCIATIONEND_CLOCK_ASSOCIATIONEND_UNIT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.CLOCK_ATTRIBUTE_CLOCK_ATTRIBUTE_STANDARD));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.CLOCK_ATTRIBUTE_CLOCK_ATTRIBUTE_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.CLOCK_ATTRIBUTE_CLOCK_ATTRIBUTE_UNIT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_ASSOCIATION, Association.class, MARTEDesignerTagTypes.CLOCK_ASSOCIATION_CLOCK_ASSOCIATION_STANDARD));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_ASSOCIATION, Association.class, MARTEDesignerTagTypes.CLOCK_ASSOCIATION_CLOCK_ASSOCIATION_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_ASSOCIATION, Association.class, MARTEDesignerTagTypes.CLOCK_ASSOCIATION_CLOCK_ASSOCIATION_UNIT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_INSTANCE, Instance.class, MARTEDesignerTagTypes.CLOCK_INSTANCE_CLOCK_INSTANCE_STANDARD));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_INSTANCE, Instance.class, MARTEDesignerTagTypes.CLOCK_INSTANCE_CLOCK_INSTANCE_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_INSTANCE, Instance.class, MARTEDesignerTagTypes.CLOCK_INSTANCE_CLOCK_INSTANCE_UNIT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_EVENT, Event.class, MARTEDesignerTagTypes.CLOCK_EVENT_CLOCK_EVENT_STANDARD));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_EVENT, Event.class, MARTEDesignerTagTypes.CLOCK_EVENT_CLOCK_EVENT_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_EVENT, Event.class, MARTEDesignerTagTypes.CLOCK_EVENT_CLOCK_EVENT_UNIT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_LINK, Link.class, MARTEDesignerTagTypes.CLOCK_LINK_CLOCK_LINK_STANDARD));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_LINK, Link.class, MARTEDesignerTagTypes.CLOCK_LINK_CLOCK_LINK_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLOCK_LINK, Link.class, MARTEDesignerTagTypes.CLOCK_LINK_CLOCK_LINK_UNIT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDCONSTRAINT_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.TIMEDCONSTRAINT_CONSTRAINT_TIMEDCONSTRAINT_CONSTRAINT_INTERPRETATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDCONSTRAINT_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.TIMEDCONSTRAINT_CONSTRAINT_TIMEDCONSTRAINT_CONSTRAINT_ON));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DURATIONCONSTRAINT_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.DURATIONCONSTRAINT_CONSTRAINT_DURATIONCONSTRAINT_CONSTRAINT_FIRSTEVENT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDDURATIONOBSERVATION_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.TIMEDDURATIONOBSERVATION_CONSTRAINT_TIMEDDURATIONOBSERVATION_CONSTRAINT_OBSKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDDURATIONOBSERVATION_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.TIMEDDURATIONOBSERVATION_CONSTRAINT_TIMEDDURATIONOBSERVATION_CONSTRAINT_ON));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDINSTANTOBSERVATION_NOTE, Note.class, MARTEDesignerTagTypes.TIMEDINSTANTOBSERVATION_NOTE_TIMEDINSTANTOBSERVATION_NOTE_OBSKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDINSTANTOBSERVATION_NOTE, Note.class, MARTEDesignerTagTypes.TIMEDINSTANTOBSERVATION_NOTE_TIMEDINSTANTOBSERVATION_NOTE_ON));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDEVENT_EVENT, Event.class, MARTEDesignerTagTypes.TIMEDEVENT_EVENT_TIMEDEVENT_EVENT_REPETITION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDEVENT_EVENT, Event.class, MARTEDesignerTagTypes.TIMEDEVENT_EVENT_TIMEDEVENT_EVENT_EVERY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDEVENT_EVENT, Event.class, MARTEDesignerTagTypes.TIMEDEVENT_EVENT_TIMEDEVENT_EVENT_ON));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDPROCESSING_ACTIVITYACTION, ActivityAction.class, MARTEDesignerTagTypes.TIMEDPROCESSING_ACTIVITYACTION_TIMEDPROCESSING_ACTIVITYACTION_DURATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDPROCESSING_ACTIVITYACTION, ActivityAction.class, MARTEDesignerTagTypes.TIMEDPROCESSING_ACTIVITYACTION_TIMEDPROCESSING_ACTIVITYACTION_START));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDPROCESSING_ACTIVITYACTION, ActivityAction.class, MARTEDesignerTagTypes.TIMEDPROCESSING_ACTIVITYACTION_TIMEDPROCESSING_ACTIVITYACTION_FINISH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDPROCESSING_ACTIVITYACTION, ActivityAction.class, MARTEDesignerTagTypes.TIMEDPROCESSING_ACTIVITYACTION_TIMEDPROCESSING_ACTIVITYACTION_ON));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDPROCESSING_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.TIMEDPROCESSING_BEHAVIOR_TIMEDPROCESSING_BEHAVIOR_DURATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDPROCESSING_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.TIMEDPROCESSING_BEHAVIOR_TIMEDPROCESSING_BEHAVIOR_START));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDPROCESSING_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.TIMEDPROCESSING_BEHAVIOR_TIMEDPROCESSING_BEHAVIOR_FINISH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDPROCESSING_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.TIMEDPROCESSING_BEHAVIOR_TIMEDPROCESSING_BEHAVIOR_ON));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDPROCESSING_MESSAGE, Message.class, MARTEDesignerTagTypes.TIMEDPROCESSING_MESSAGE_TIMEDPROCESSING_MESSAGE_DURATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDPROCESSING_MESSAGE, Message.class, MARTEDesignerTagTypes.TIMEDPROCESSING_MESSAGE_TIMEDPROCESSING_MESSAGE_START));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDPROCESSING_MESSAGE, Message.class, MARTEDesignerTagTypes.TIMEDPROCESSING_MESSAGE_TIMEDPROCESSING_MESSAGE_FINISH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDPROCESSING_MESSAGE, Message.class, MARTEDesignerTagTypes.TIMEDPROCESSING_MESSAGE_TIMEDPROCESSING_MESSAGE_ON));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDVALUESPECIFICATION_TAGGEDVALUE, TaggedValue.class, MARTEDesignerTagTypes.TIMEDVALUESPECIFICATION_TAGGEDVALUE_TIMEDVALUESPECIFICATION_TAGGEDVALUE_INTERPRETATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TIMEDVALUESPECIFICATION_TAGGEDVALUE, TaggedValue.class, MARTEDesignerTagTypes.TIMEDVALUESPECIFICATION_TAGGEDVALUE_TIMEDVALUESPECIFICATION_TAGGEDVALUE_ON));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PPUNIT_ACTOR, Actor.class, MARTEDesignerTagTypes.PPUNIT_ACTOR_PPUNIT_ACTOR_CONCPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PPUNIT_ACTOR, Actor.class, MARTEDesignerTagTypes.PPUNIT_ACTOR_PPUNIT_ACTOR_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PPUNIT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.PPUNIT_BEHAVIOR_PPUNIT_BEHAVIOR_CONCPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PPUNIT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.PPUNIT_BEHAVIOR_PPUNIT_BEHAVIOR_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PPUNIT_CLASS, Class.class, MARTEDesignerTagTypes.PPUNIT_CLASS_PPUNIT_CLASS_CONCPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PPUNIT_CLASS, Class.class, MARTEDesignerTagTypes.PPUNIT_CLASS_PPUNIT_CLASS_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PPUNIT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.PPUNIT_COLLABORATION_PPUNIT_COLLABORATION_CONCPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PPUNIT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.PPUNIT_COLLABORATION_PPUNIT_COLLABORATION_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PPUNIT_USECASE, UseCase.class, MARTEDesignerTagTypes.PPUNIT_USECASE_PPUNIT_USECASE_CONCPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PPUNIT_USECASE, UseCase.class, MARTEDesignerTagTypes.PPUNIT_USECASE_PPUNIT_USECASE_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTACTION_CALLACTION, CallAction.class, MARTEDesignerTagTypes.RTACTION_CALLACTION_RTACTION_CALLACTION_ISATOMIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTACTION_CALLACTION, CallAction.class, MARTEDesignerTagTypes.RTACTION_CALLACTION_RTACTION_CALLACTION_SYNCHKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTACTION_CALLACTION, CallAction.class, MARTEDesignerTagTypes.RTACTION_CALLACTION_RTACTION_CALLACTION_MSGSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTACTION_OPAQUEACTION, OpaqueAction.class, MARTEDesignerTagTypes.RTACTION_OPAQUEACTION_RTACTION_OPAQUEACTION_ISATOMIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTACTION_OPAQUEACTION, OpaqueAction.class, MARTEDesignerTagTypes.RTACTION_OPAQUEACTION_RTACTION_OPAQUEACTION_SYNCHKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTACTION_OPAQUEACTION, OpaqueAction.class, MARTEDesignerTagTypes.RTACTION_OPAQUEACTION_RTACTION_OPAQUEACTION_MSGSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTACTION_OPERATION, Operation.class, MARTEDesignerTagTypes.RTACTION_OPERATION_RTACTION_OPERATION_ISATOMIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTACTION_OPERATION, Operation.class, MARTEDesignerTagTypes.RTACTION_OPERATION_RTACTION_OPERATION_SYNCHKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTACTION_OPERATION, Operation.class, MARTEDesignerTagTypes.RTACTION_OPERATION_RTACTION_OPERATION_MSGSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTACTION_SENDSIGNALACTION, SendSignalAction.class, MARTEDesignerTagTypes.RTACTION_SENDSIGNALACTION_RTACTION_SENDSIGNALACTION_ISATOMIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTACTION_SENDSIGNALACTION, SendSignalAction.class, MARTEDesignerTagTypes.RTACTION_SENDSIGNALACTION_RTACTION_SENDSIGNALACTION_SYNCHKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTACTION_SENDSIGNALACTION, SendSignalAction.class, MARTEDesignerTagTypes.RTACTION_SENDSIGNALACTION_RTACTION_SENDSIGNALACTION_MSGSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTSERVICE_OPERATION, Operation.class, MARTEDesignerTagTypes.RTSERVICE_OPERATION_RTSERVICE_OPERATION_CONCPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTSERVICE_OPERATION, Operation.class, MARTEDesignerTagTypes.RTSERVICE_OPERATION_RTSERVICE_OPERATION_EXEKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTSERVICE_OPERATION, Operation.class, MARTEDesignerTagTypes.RTSERVICE_OPERATION_RTSERVICE_OPERATION_ISATOMIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTSERVICE_OPERATION, Operation.class, MARTEDesignerTagTypes.RTSERVICE_OPERATION_RTSERVICE_OPERATION_SYNCHKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTSPECIFICATION_NOTE, Note.class, MARTEDesignerTagTypes.RTSPECIFICATION_NOTE_RTSPECIFICATION_NOTE_UTILITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTSPECIFICATION_NOTE, Note.class, MARTEDesignerTagTypes.RTSPECIFICATION_NOTE_RTSPECIFICATION_NOTE_OCCKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTSPECIFICATION_NOTE, Note.class, MARTEDesignerTagTypes.RTSPECIFICATION_NOTE_RTSPECIFICATION_NOTE_TREF));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTSPECIFICATION_NOTE, Note.class, MARTEDesignerTagTypes.RTSPECIFICATION_NOTE_RTSPECIFICATION_NOTE_RELDL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTSPECIFICATION_NOTE, Note.class, MARTEDesignerTagTypes.RTSPECIFICATION_NOTE_RTSPECIFICATION_NOTE_ABSDL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTSPECIFICATION_NOTE, Note.class, MARTEDesignerTagTypes.RTSPECIFICATION_NOTE_RTSPECIFICATION_NOTE_BOUNDDL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTSPECIFICATION_NOTE, Note.class, MARTEDesignerTagTypes.RTSPECIFICATION_NOTE_RTSPECIFICATION_NOTE_RDTIME));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTSPECIFICATION_NOTE, Note.class, MARTEDesignerTagTypes.RTSPECIFICATION_NOTE_RTSPECIFICATION_NOTE_MISS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTSPECIFICATION_NOTE, Note.class, MARTEDesignerTagTypes.RTSPECIFICATION_NOTE_RTSPECIFICATION_NOTE_PRIORITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTSPECIFICATION_NOTE, Note.class, MARTEDesignerTagTypes.RTSPECIFICATION_NOTE_RTSPECIFICATION_NOTE_CONTEXT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_ACTOR, Actor.class, MARTEDesignerTagTypes.RTUNIT_ACTOR_RTUNIT_ACTOR_ISDYNAMIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_ACTOR, Actor.class, MARTEDesignerTagTypes.RTUNIT_ACTOR_RTUNIT_ACTOR_ISMAIN));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_ACTOR, Actor.class, MARTEDesignerTagTypes.RTUNIT_ACTOR_RTUNIT_ACTOR_SRPOOLSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_ACTOR, Actor.class, MARTEDesignerTagTypes.RTUNIT_ACTOR_RTUNIT_ACTOR_SRPOOLPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_ACTOR, Actor.class, MARTEDesignerTagTypes.RTUNIT_ACTOR_RTUNIT_ACTOR_SRPOOLWAITINGTIME));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_ACTOR, Actor.class, MARTEDesignerTagTypes.RTUNIT_ACTOR_RTUNIT_ACTOR_QUEUESCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_ACTOR, Actor.class, MARTEDesignerTagTypes.RTUNIT_ACTOR_RTUNIT_ACTOR_QUEUESIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_ACTOR, Actor.class, MARTEDesignerTagTypes.RTUNIT_ACTOR_RTUNIT_ACTOR_MSGMAXSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_ACTOR, Actor.class, MARTEDesignerTagTypes.RTUNIT_ACTOR_RTUNIT_ACTOR_OPERATIONALMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_ACTOR, Actor.class, MARTEDesignerTagTypes.RTUNIT_ACTOR_RTUNIT_ACTOR_MAIN));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_ACTOR, Actor.class, MARTEDesignerTagTypes.RTUNIT_ACTOR_RTUNIT_ACTOR_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.RTUNIT_BEHAVIOR_RTUNIT_BEHAVIOR_ISDYNAMIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.RTUNIT_BEHAVIOR_RTUNIT_BEHAVIOR_ISMAIN));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.RTUNIT_BEHAVIOR_RTUNIT_BEHAVIOR_SRPOOLSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.RTUNIT_BEHAVIOR_RTUNIT_BEHAVIOR_SRPOOLPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.RTUNIT_BEHAVIOR_RTUNIT_BEHAVIOR_SRPOOLWAITINGTIME));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.RTUNIT_BEHAVIOR_RTUNIT_BEHAVIOR_QUEUESCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.RTUNIT_BEHAVIOR_RTUNIT_BEHAVIOR_QUEUESIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.RTUNIT_BEHAVIOR_RTUNIT_BEHAVIOR_MSGMAXSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.RTUNIT_BEHAVIOR_RTUNIT_BEHAVIOR_OPERATIONALMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.RTUNIT_BEHAVIOR_RTUNIT_BEHAVIOR_MAIN));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.RTUNIT_BEHAVIOR_RTUNIT_BEHAVIOR_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_CLASS, Class.class, MARTEDesignerTagTypes.RTUNIT_CLASS_RTUNIT_CLASS_ISDYNAMIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_CLASS, Class.class, MARTEDesignerTagTypes.RTUNIT_CLASS_RTUNIT_CLASS_ISMAIN));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_CLASS, Class.class, MARTEDesignerTagTypes.RTUNIT_CLASS_RTUNIT_CLASS_SRPOOLSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_CLASS, Class.class, MARTEDesignerTagTypes.RTUNIT_CLASS_RTUNIT_CLASS_SRPOOLPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_CLASS, Class.class, MARTEDesignerTagTypes.RTUNIT_CLASS_RTUNIT_CLASS_SRPOOLWAITINGTIME));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_CLASS, Class.class, MARTEDesignerTagTypes.RTUNIT_CLASS_RTUNIT_CLASS_QUEUESCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_CLASS, Class.class, MARTEDesignerTagTypes.RTUNIT_CLASS_RTUNIT_CLASS_QUEUESIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_CLASS, Class.class, MARTEDesignerTagTypes.RTUNIT_CLASS_RTUNIT_CLASS_MSGMAXSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_CLASS, Class.class, MARTEDesignerTagTypes.RTUNIT_CLASS_RTUNIT_CLASS_OPERATIONALMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_CLASS, Class.class, MARTEDesignerTagTypes.RTUNIT_CLASS_RTUNIT_CLASS_MAIN));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_CLASS, Class.class, MARTEDesignerTagTypes.RTUNIT_CLASS_RTUNIT_CLASS_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.RTUNIT_COLLABORATION_RTUNIT_COLLABORATION_ISDYNAMIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.RTUNIT_COLLABORATION_RTUNIT_COLLABORATION_ISMAIN));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.RTUNIT_COLLABORATION_RTUNIT_COLLABORATION_SRPOOLSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.RTUNIT_COLLABORATION_RTUNIT_COLLABORATION_SRPOOLPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.RTUNIT_COLLABORATION_RTUNIT_COLLABORATION_SRPOOLWAITINGTIME));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.RTUNIT_COLLABORATION_RTUNIT_COLLABORATION_QUEUESCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.RTUNIT_COLLABORATION_RTUNIT_COLLABORATION_QUEUESIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.RTUNIT_COLLABORATION_RTUNIT_COLLABORATION_MSGMAXSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.RTUNIT_COLLABORATION_RTUNIT_COLLABORATION_OPERATIONALMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.RTUNIT_COLLABORATION_RTUNIT_COLLABORATION_MAIN));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.RTUNIT_COLLABORATION_RTUNIT_COLLABORATION_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_USECASE, UseCase.class, MARTEDesignerTagTypes.RTUNIT_USECASE_RTUNIT_USECASE_ISDYNAMIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_USECASE, UseCase.class, MARTEDesignerTagTypes.RTUNIT_USECASE_RTUNIT_USECASE_ISMAIN));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_USECASE, UseCase.class, MARTEDesignerTagTypes.RTUNIT_USECASE_RTUNIT_USECASE_SRPOOLSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_USECASE, UseCase.class, MARTEDesignerTagTypes.RTUNIT_USECASE_RTUNIT_USECASE_SRPOOLPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_USECASE, UseCase.class, MARTEDesignerTagTypes.RTUNIT_USECASE_RTUNIT_USECASE_SRPOOLWAITINGTIME));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_USECASE, UseCase.class, MARTEDesignerTagTypes.RTUNIT_USECASE_RTUNIT_USECASE_QUEUESCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_USECASE, UseCase.class, MARTEDesignerTagTypes.RTUNIT_USECASE_RTUNIT_USECASE_QUEUESIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_USECASE, UseCase.class, MARTEDesignerTagTypes.RTUNIT_USECASE_RTUNIT_USECASE_MSGMAXSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_USECASE, UseCase.class, MARTEDesignerTagTypes.RTUNIT_USECASE_RTUNIT_USECASE_OPERATIONALMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_USECASE, UseCase.class, MARTEDesignerTagTypes.RTUNIT_USECASE_RTUNIT_USECASE_MAIN));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RTUNIT_USECASE, UseCase.class, MARTEDesignerTagTypes.RTUNIT_USECASE_RTUNIT_USECASE_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ASSOCIATION_HWCOMPUTINGRESOURCE_ASSOCIATION_OP_FREQUENCIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ASSOCIATION_HWCOMPUTINGRESOURCE_ASSOCIATION_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ASSOCIATION_HWCOMPUTINGRESOURCE_ASSOCIATION_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ASSOCIATION_HWCOMPUTINGRESOURCE_ASSOCIATION_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ASSOCIATION_HWCOMPUTINGRESOURCE_ASSOCIATION_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ASSOCIATION_HWCOMPUTINGRESOURCE_ASSOCIATION_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ASSOCIATION_HWCOMPUTINGRESOURCE_ASSOCIATION_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ASSOCIATIONEND_HWCOMPUTINGRESOURCE_ASSOCIATIONEND_OP_FREQUENCIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ASSOCIATIONEND_HWCOMPUTINGRESOURCE_ASSOCIATIONEND_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ASSOCIATIONEND_HWCOMPUTINGRESOURCE_ASSOCIATIONEND_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ASSOCIATIONEND_HWCOMPUTINGRESOURCE_ASSOCIATIONEND_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ASSOCIATIONEND_HWCOMPUTINGRESOURCE_ASSOCIATIONEND_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ASSOCIATIONEND_HWCOMPUTINGRESOURCE_ASSOCIATIONEND_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ASSOCIATIONEND_HWCOMPUTINGRESOURCE_ASSOCIATIONEND_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ATTRIBUTE_HWCOMPUTINGRESOURCE_ATTRIBUTE_OP_FREQUENCIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ATTRIBUTE_HWCOMPUTINGRESOURCE_ATTRIBUTE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ATTRIBUTE_HWCOMPUTINGRESOURCE_ATTRIBUTE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ATTRIBUTE_HWCOMPUTINGRESOURCE_ATTRIBUTE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ATTRIBUTE_HWCOMPUTINGRESOURCE_ATTRIBUTE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ATTRIBUTE_HWCOMPUTINGRESOURCE_ATTRIBUTE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_ATTRIBUTE_HWCOMPUTINGRESOURCE_ATTRIBUTE_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_CLASSIFIER_HWCOMPUTINGRESOURCE_CLASSIFIER_OP_FREQUENCIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_CLASSIFIER_HWCOMPUTINGRESOURCE_CLASSIFIER_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_CLASSIFIER_HWCOMPUTINGRESOURCE_CLASSIFIER_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_CLASSIFIER_HWCOMPUTINGRESOURCE_CLASSIFIER_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_CLASSIFIER_HWCOMPUTINGRESOURCE_CLASSIFIER_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_CLASSIFIER_HWCOMPUTINGRESOURCE_CLASSIFIER_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_CLASSIFIER_HWCOMPUTINGRESOURCE_CLASSIFIER_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_INSTANCE_HWCOMPUTINGRESOURCE_INSTANCE_OP_FREQUENCIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_INSTANCE_HWCOMPUTINGRESOURCE_INSTANCE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_INSTANCE_HWCOMPUTINGRESOURCE_INSTANCE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_INSTANCE_HWCOMPUTINGRESOURCE_INSTANCE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_INSTANCE_HWCOMPUTINGRESOURCE_INSTANCE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_INSTANCE_HWCOMPUTINGRESOURCE_INSTANCE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_INSTANCE_HWCOMPUTINGRESOURCE_INSTANCE_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_LIFELINE_HWCOMPUTINGRESOURCE_LIFELINE_OP_FREQUENCIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_LIFELINE_HWCOMPUTINGRESOURCE_LIFELINE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_LIFELINE_HWCOMPUTINGRESOURCE_LIFELINE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_LIFELINE_HWCOMPUTINGRESOURCE_LIFELINE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_LIFELINE_HWCOMPUTINGRESOURCE_LIFELINE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_LIFELINE_HWCOMPUTINGRESOURCE_LIFELINE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_LIFELINE_HWCOMPUTINGRESOURCE_LIFELINE_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_LINK_HWCOMPUTINGRESOURCE_LINK_OP_FREQUENCIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_LINK_HWCOMPUTINGRESOURCE_LINK_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_LINK_HWCOMPUTINGRESOURCE_LINK_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_LINK_HWCOMPUTINGRESOURCE_LINK_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_LINK_HWCOMPUTINGRESOURCE_LINK_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_LINK_HWCOMPUTINGRESOURCE_LINK_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_LINK_HWCOMPUTINGRESOURCE_LINK_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_PARAMETER_HWCOMPUTINGRESOURCE_PARAMETER_OP_FREQUENCIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_PARAMETER_HWCOMPUTINGRESOURCE_PARAMETER_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_PARAMETER_HWCOMPUTINGRESOURCE_PARAMETER_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_PARAMETER_HWCOMPUTINGRESOURCE_PARAMETER_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_PARAMETER_HWCOMPUTINGRESOURCE_PARAMETER_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_PARAMETER_HWCOMPUTINGRESOURCE_PARAMETER_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPUTINGRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPUTINGRESOURCE_PARAMETER_HWCOMPUTINGRESOURCE_PARAMETER_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWISA_ASSOCIATION_HWISA_ASSOCIATION_FAMILY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWISA_ASSOCIATION_HWISA_ASSOCIATION_INST_WIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWISA_ASSOCIATION_HWISA_ASSOCIATION_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWISA_ASSOCIATIONEND_HWISA_ASSOCIATIONEND_FAMILY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWISA_ASSOCIATIONEND_HWISA_ASSOCIATIONEND_INST_WIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWISA_ASSOCIATIONEND_HWISA_ASSOCIATIONEND_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWISA_ATTRIBUTE_HWISA_ATTRIBUTE_FAMILY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWISA_ATTRIBUTE_HWISA_ATTRIBUTE_INST_WIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWISA_ATTRIBUTE_HWISA_ATTRIBUTE_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWISA_CLASSIFIER_HWISA_CLASSIFIER_FAMILY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWISA_CLASSIFIER_HWISA_CLASSIFIER_INST_WIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWISA_CLASSIFIER_HWISA_CLASSIFIER_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWISA_INSTANCE_HWISA_INSTANCE_FAMILY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWISA_INSTANCE_HWISA_INSTANCE_INST_WIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWISA_INSTANCE_HWISA_INSTANCE_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWISA_LIFELINE_HWISA_LIFELINE_FAMILY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWISA_LIFELINE_HWISA_LIFELINE_INST_WIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWISA_LIFELINE_HWISA_LIFELINE_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_LINK, Link.class, MARTEDesignerTagTypes.HWISA_LINK_HWISA_LINK_FAMILY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_LINK, Link.class, MARTEDesignerTagTypes.HWISA_LINK_HWISA_LINK_INST_WIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_LINK, Link.class, MARTEDesignerTagTypes.HWISA_LINK_HWISA_LINK_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWISA_PARAMETER_HWISA_PARAMETER_FAMILY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWISA_PARAMETER_HWISA_PARAMETER_INST_WIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWISA_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWISA_PARAMETER_HWISA_PARAMETER_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPLD_ASSOCIATION_HWPLD_ASSOCIATION_TECHNOLOGY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPLD_ASSOCIATION_HWPLD_ASSOCIATION_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPLD_ASSOCIATION_HWPLD_ASSOCIATION_NBLUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPLD_ASSOCIATION_HWPLD_ASSOCIATION_NDLUT_INPUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPLD_ASSOCIATION_HWPLD_ASSOCIATION_NBFLIPFLOPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPLD_ASSOCIATION_HWPLD_ASSOCIATION_BLOCKSRAM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPLD_ASSOCIATION_HWPLD_ASSOCIATION_BLOCKSCOMPUTING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPLD_ASSOCIATIONEND_HWPLD_ASSOCIATIONEND_TECHNOLOGY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPLD_ASSOCIATIONEND_HWPLD_ASSOCIATIONEND_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPLD_ASSOCIATIONEND_HWPLD_ASSOCIATIONEND_NBLUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPLD_ASSOCIATIONEND_HWPLD_ASSOCIATIONEND_NDLUT_INPUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPLD_ASSOCIATIONEND_HWPLD_ASSOCIATIONEND_NBFLIPFLOPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPLD_ASSOCIATIONEND_HWPLD_ASSOCIATIONEND_BLOCKSRAM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPLD_ASSOCIATIONEND_HWPLD_ASSOCIATIONEND_BLOCKSCOMPUTING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPLD_ATTRIBUTE_HWPLD_ATTRIBUTE_TECHNOLOGY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPLD_ATTRIBUTE_HWPLD_ATTRIBUTE_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPLD_ATTRIBUTE_HWPLD_ATTRIBUTE_NBLUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPLD_ATTRIBUTE_HWPLD_ATTRIBUTE_NDLUT_INPUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPLD_ATTRIBUTE_HWPLD_ATTRIBUTE_NBFLIPFLOPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPLD_ATTRIBUTE_HWPLD_ATTRIBUTE_BLOCKSRAM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPLD_ATTRIBUTE_HWPLD_ATTRIBUTE_BLOCKSCOMPUTING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPLD_CLASSIFIER_HWPLD_CLASSIFIER_TECHNOLOGY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPLD_CLASSIFIER_HWPLD_CLASSIFIER_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPLD_CLASSIFIER_HWPLD_CLASSIFIER_NBLUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPLD_CLASSIFIER_HWPLD_CLASSIFIER_NDLUT_INPUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPLD_CLASSIFIER_HWPLD_CLASSIFIER_NBFLIPFLOPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPLD_CLASSIFIER_HWPLD_CLASSIFIER_BLOCKSRAM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPLD_CLASSIFIER_HWPLD_CLASSIFIER_BLOCKSCOMPUTING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPLD_INSTANCE_HWPLD_INSTANCE_TECHNOLOGY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPLD_INSTANCE_HWPLD_INSTANCE_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPLD_INSTANCE_HWPLD_INSTANCE_NBLUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPLD_INSTANCE_HWPLD_INSTANCE_NDLUT_INPUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPLD_INSTANCE_HWPLD_INSTANCE_NBFLIPFLOPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPLD_INSTANCE_HWPLD_INSTANCE_BLOCKSRAM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPLD_INSTANCE_HWPLD_INSTANCE_BLOCKSCOMPUTING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPLD_LIFELINE_HWPLD_LIFELINE_TECHNOLOGY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPLD_LIFELINE_HWPLD_LIFELINE_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPLD_LIFELINE_HWPLD_LIFELINE_NBLUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPLD_LIFELINE_HWPLD_LIFELINE_NDLUT_INPUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPLD_LIFELINE_HWPLD_LIFELINE_NBFLIPFLOPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPLD_LIFELINE_HWPLD_LIFELINE_BLOCKSRAM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPLD_LIFELINE_HWPLD_LIFELINE_BLOCKSCOMPUTING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_LINK, Link.class, MARTEDesignerTagTypes.HWPLD_LINK_HWPLD_LINK_TECHNOLOGY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_LINK, Link.class, MARTEDesignerTagTypes.HWPLD_LINK_HWPLD_LINK_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_LINK, Link.class, MARTEDesignerTagTypes.HWPLD_LINK_HWPLD_LINK_NBLUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_LINK, Link.class, MARTEDesignerTagTypes.HWPLD_LINK_HWPLD_LINK_NDLUT_INPUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_LINK, Link.class, MARTEDesignerTagTypes.HWPLD_LINK_HWPLD_LINK_NBFLIPFLOPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_LINK, Link.class, MARTEDesignerTagTypes.HWPLD_LINK_HWPLD_LINK_BLOCKSRAM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_LINK, Link.class, MARTEDesignerTagTypes.HWPLD_LINK_HWPLD_LINK_BLOCKSCOMPUTING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPLD_PARAMETER_HWPLD_PARAMETER_TECHNOLOGY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPLD_PARAMETER_HWPLD_PARAMETER_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPLD_PARAMETER_HWPLD_PARAMETER_NBLUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPLD_PARAMETER_HWPLD_PARAMETER_NDLUT_INPUTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPLD_PARAMETER_HWPLD_PARAMETER_NBFLIPFLOPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPLD_PARAMETER_HWPLD_PARAMETER_BLOCKSRAM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPLD_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPLD_PARAMETER_HWPLD_PARAMETER_BLOCKSCOMPUTING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATION_HWPROCESSOR_ASSOCIATION_ARCHITECTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATION_HWPROCESSOR_ASSOCIATION_MIPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATION_HWPROCESSOR_ASSOCIATION_IPC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATION_HWPROCESSOR_ASSOCIATION_NBCORES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATION_HWPROCESSOR_ASSOCIATION_NBPIPELINES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATION_HWPROCESSOR_ASSOCIATION_NBSTAGES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATION_HWPROCESSOR_ASSOCIATION_NBALUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATION_HWPROCESSOR_ASSOCIATION_NBFPUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATION_HWPROCESSOR_ASSOCIATION_OWNEDISAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATION_HWPROCESSOR_ASSOCIATION_PREDICTORS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATION_HWPROCESSOR_ASSOCIATION_CACHES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATION_HWPROCESSOR_ASSOCIATION_OWNEDMMUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATIONEND_HWPROCESSOR_ASSOCIATIONEND_ARCHITECTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATIONEND_HWPROCESSOR_ASSOCIATIONEND_MIPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATIONEND_HWPROCESSOR_ASSOCIATIONEND_IPC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATIONEND_HWPROCESSOR_ASSOCIATIONEND_NBCORES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATIONEND_HWPROCESSOR_ASSOCIATIONEND_NBPIPELINES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATIONEND_HWPROCESSOR_ASSOCIATIONEND_NBSTAGES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATIONEND_HWPROCESSOR_ASSOCIATIONEND_NBALUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATIONEND_HWPROCESSOR_ASSOCIATIONEND_NBFPUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATIONEND_HWPROCESSOR_ASSOCIATIONEND_OWNEDISAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATIONEND_HWPROCESSOR_ASSOCIATIONEND_PREDICTORS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATIONEND_HWPROCESSOR_ASSOCIATIONEND_CACHES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPROCESSOR_ASSOCIATIONEND_HWPROCESSOR_ASSOCIATIONEND_OWNEDMMUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPROCESSOR_ATTRIBUTE_HWPROCESSOR_ATTRIBUTE_ARCHITECTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPROCESSOR_ATTRIBUTE_HWPROCESSOR_ATTRIBUTE_MIPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPROCESSOR_ATTRIBUTE_HWPROCESSOR_ATTRIBUTE_IPC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPROCESSOR_ATTRIBUTE_HWPROCESSOR_ATTRIBUTE_NBCORES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPROCESSOR_ATTRIBUTE_HWPROCESSOR_ATTRIBUTE_NBPIPELINES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPROCESSOR_ATTRIBUTE_HWPROCESSOR_ATTRIBUTE_NBSTAGES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPROCESSOR_ATTRIBUTE_HWPROCESSOR_ATTRIBUTE_NBALUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPROCESSOR_ATTRIBUTE_HWPROCESSOR_ATTRIBUTE_NBFPUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPROCESSOR_ATTRIBUTE_HWPROCESSOR_ATTRIBUTE_OWNEDISAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPROCESSOR_ATTRIBUTE_HWPROCESSOR_ATTRIBUTE_PREDICTORS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPROCESSOR_ATTRIBUTE_HWPROCESSOR_ATTRIBUTE_CACHES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPROCESSOR_ATTRIBUTE_HWPROCESSOR_ATTRIBUTE_OWNEDMMUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPROCESSOR_CLASSIFIER_HWPROCESSOR_CLASSIFIER_ARCHITECTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPROCESSOR_CLASSIFIER_HWPROCESSOR_CLASSIFIER_MIPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPROCESSOR_CLASSIFIER_HWPROCESSOR_CLASSIFIER_IPC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPROCESSOR_CLASSIFIER_HWPROCESSOR_CLASSIFIER_NBCORES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPROCESSOR_CLASSIFIER_HWPROCESSOR_CLASSIFIER_NBPIPELINES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPROCESSOR_CLASSIFIER_HWPROCESSOR_CLASSIFIER_NBSTAGES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPROCESSOR_CLASSIFIER_HWPROCESSOR_CLASSIFIER_NBALUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPROCESSOR_CLASSIFIER_HWPROCESSOR_CLASSIFIER_NBFPUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPROCESSOR_CLASSIFIER_HWPROCESSOR_CLASSIFIER_OWNEDISAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPROCESSOR_CLASSIFIER_HWPROCESSOR_CLASSIFIER_PREDICTORS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPROCESSOR_CLASSIFIER_HWPROCESSOR_CLASSIFIER_CACHES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPROCESSOR_CLASSIFIER_HWPROCESSOR_CLASSIFIER_OWNEDMMUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPROCESSOR_INSTANCE_HWPROCESSOR_INSTANCE_ARCHITECTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPROCESSOR_INSTANCE_HWPROCESSOR_INSTANCE_MIPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPROCESSOR_INSTANCE_HWPROCESSOR_INSTANCE_IPC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPROCESSOR_INSTANCE_HWPROCESSOR_INSTANCE_NBCORES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPROCESSOR_INSTANCE_HWPROCESSOR_INSTANCE_NBPIPELINES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPROCESSOR_INSTANCE_HWPROCESSOR_INSTANCE_NBSTAGES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPROCESSOR_INSTANCE_HWPROCESSOR_INSTANCE_NBALUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPROCESSOR_INSTANCE_HWPROCESSOR_INSTANCE_NBFPUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPROCESSOR_INSTANCE_HWPROCESSOR_INSTANCE_OWNEDISAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPROCESSOR_INSTANCE_HWPROCESSOR_INSTANCE_PREDICTORS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPROCESSOR_INSTANCE_HWPROCESSOR_INSTANCE_CACHES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPROCESSOR_INSTANCE_HWPROCESSOR_INSTANCE_OWNEDMMUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPROCESSOR_LIFELINE_HWPROCESSOR_LIFELINE_ARCHITECTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPROCESSOR_LIFELINE_HWPROCESSOR_LIFELINE_MIPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPROCESSOR_LIFELINE_HWPROCESSOR_LIFELINE_IPC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPROCESSOR_LIFELINE_HWPROCESSOR_LIFELINE_NBCORES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPROCESSOR_LIFELINE_HWPROCESSOR_LIFELINE_NBPIPELINES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPROCESSOR_LIFELINE_HWPROCESSOR_LIFELINE_NBSTAGES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPROCESSOR_LIFELINE_HWPROCESSOR_LIFELINE_NBALUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPROCESSOR_LIFELINE_HWPROCESSOR_LIFELINE_NBFPUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPROCESSOR_LIFELINE_HWPROCESSOR_LIFELINE_OWNEDISAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPROCESSOR_LIFELINE_HWPROCESSOR_LIFELINE_PREDICTORS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPROCESSOR_LIFELINE_HWPROCESSOR_LIFELINE_CACHES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPROCESSOR_LIFELINE_HWPROCESSOR_LIFELINE_OWNEDMMUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LINK, Link.class, MARTEDesignerTagTypes.HWPROCESSOR_LINK_HWPROCESSOR_LINK_ARCHITECTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LINK, Link.class, MARTEDesignerTagTypes.HWPROCESSOR_LINK_HWPROCESSOR_LINK_MIPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LINK, Link.class, MARTEDesignerTagTypes.HWPROCESSOR_LINK_HWPROCESSOR_LINK_IPC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LINK, Link.class, MARTEDesignerTagTypes.HWPROCESSOR_LINK_HWPROCESSOR_LINK_NBCORES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LINK, Link.class, MARTEDesignerTagTypes.HWPROCESSOR_LINK_HWPROCESSOR_LINK_NBPIPELINES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LINK, Link.class, MARTEDesignerTagTypes.HWPROCESSOR_LINK_HWPROCESSOR_LINK_NBSTAGES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LINK, Link.class, MARTEDesignerTagTypes.HWPROCESSOR_LINK_HWPROCESSOR_LINK_NBALUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LINK, Link.class, MARTEDesignerTagTypes.HWPROCESSOR_LINK_HWPROCESSOR_LINK_NBFPUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LINK, Link.class, MARTEDesignerTagTypes.HWPROCESSOR_LINK_HWPROCESSOR_LINK_OWNEDISAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LINK, Link.class, MARTEDesignerTagTypes.HWPROCESSOR_LINK_HWPROCESSOR_LINK_PREDICTORS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LINK, Link.class, MARTEDesignerTagTypes.HWPROCESSOR_LINK_HWPROCESSOR_LINK_CACHES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_LINK, Link.class, MARTEDesignerTagTypes.HWPROCESSOR_LINK_HWPROCESSOR_LINK_OWNEDMMUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPROCESSOR_PARAMETER_HWPROCESSOR_PARAMETER_ARCHITECTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPROCESSOR_PARAMETER_HWPROCESSOR_PARAMETER_MIPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPROCESSOR_PARAMETER_HWPROCESSOR_PARAMETER_IPC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPROCESSOR_PARAMETER_HWPROCESSOR_PARAMETER_NBCORES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPROCESSOR_PARAMETER_HWPROCESSOR_PARAMETER_NBPIPELINES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPROCESSOR_PARAMETER_HWPROCESSOR_PARAMETER_NBSTAGES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPROCESSOR_PARAMETER_HWPROCESSOR_PARAMETER_NBALUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPROCESSOR_PARAMETER_HWPROCESSOR_PARAMETER_NBFPUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPROCESSOR_PARAMETER_HWPROCESSOR_PARAMETER_OWNEDISAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPROCESSOR_PARAMETER_HWPROCESSOR_PARAMETER_PREDICTORS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPROCESSOR_PARAMETER_HWPROCESSOR_PARAMETER_CACHES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPROCESSOR_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPROCESSOR_PARAMETER_HWPROCESSOR_PARAMETER_OWNEDMMUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWARBITER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWARBITER_ASSOCIATION_HWARBITER_ASSOCIATION_CONTROLLEDMEDIAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWARBITER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWARBITER_ASSOCIATIONEND_HWARBITER_ASSOCIATIONEND_CONTROLLEDMEDIAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWARBITER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWARBITER_ATTRIBUTE_HWARBITER_ATTRIBUTE_CONTROLLEDMEDIAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWARBITER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWARBITER_CLASSIFIER_HWARBITER_CLASSIFIER_CONTROLLEDMEDIAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWARBITER_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWARBITER_INSTANCE_HWARBITER_INSTANCE_CONTROLLEDMEDIAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWARBITER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWARBITER_LIFELINE_HWARBITER_LIFELINE_CONTROLLEDMEDIAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWARBITER_LINK, Link.class, MARTEDesignerTagTypes.HWARBITER_LINK_HWARBITER_LINK_CONTROLLEDMEDIAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWARBITER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWARBITER_PARAMETER_HWARBITER_PARAMETER_CONTROLLEDMEDIAS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBRIDGE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWBRIDGE_ASSOCIATION_HWBRIDGE_ASSOCIATION_SIDES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBRIDGE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWBRIDGE_ASSOCIATIONEND_HWBRIDGE_ASSOCIATIONEND_SIDES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBRIDGE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWBRIDGE_ATTRIBUTE_HWBRIDGE_ATTRIBUTE_SIDES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBRIDGE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWBRIDGE_CLASSIFIER_HWBRIDGE_CLASSIFIER_SIDES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBRIDGE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWBRIDGE_INSTANCE_HWBRIDGE_INSTANCE_SIDES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBRIDGE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWBRIDGE_LIFELINE_HWBRIDGE_LIFELINE_SIDES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBRIDGE_LINK, Link.class, MARTEDesignerTagTypes.HWBRIDGE_LINK_HWBRIDGE_LINK_SIDES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBRIDGE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWBRIDGE_PARAMETER_HWBRIDGE_PARAMETER_SIDES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWBUS_ASSOCIATION_HWBUS_ASSOCIATION_ADRESSWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWBUS_ASSOCIATION_HWBUS_ASSOCIATION_WORDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWBUS_ASSOCIATION_HWBUS_ASSOCIATION_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWBUS_ASSOCIATION_HWBUS_ASSOCIATION_ISSERIAL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWBUS_ASSOCIATIONEND_HWBUS_ASSOCIATIONEND_ADRESSWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWBUS_ASSOCIATIONEND_HWBUS_ASSOCIATIONEND_WORDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWBUS_ASSOCIATIONEND_HWBUS_ASSOCIATIONEND_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWBUS_ASSOCIATIONEND_HWBUS_ASSOCIATIONEND_ISSERIAL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWBUS_ATTRIBUTE_HWBUS_ATTRIBUTE_ADRESSWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWBUS_ATTRIBUTE_HWBUS_ATTRIBUTE_WORDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWBUS_ATTRIBUTE_HWBUS_ATTRIBUTE_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWBUS_ATTRIBUTE_HWBUS_ATTRIBUTE_ISSERIAL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWBUS_CLASSIFIER_HWBUS_CLASSIFIER_ADRESSWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWBUS_CLASSIFIER_HWBUS_CLASSIFIER_WORDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWBUS_CLASSIFIER_HWBUS_CLASSIFIER_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWBUS_CLASSIFIER_HWBUS_CLASSIFIER_ISSERIAL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWBUS_INSTANCE_HWBUS_INSTANCE_ADRESSWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWBUS_INSTANCE_HWBUS_INSTANCE_WORDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWBUS_INSTANCE_HWBUS_INSTANCE_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWBUS_INSTANCE_HWBUS_INSTANCE_ISSERIAL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWBUS_LIFELINE_HWBUS_LIFELINE_ADRESSWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWBUS_LIFELINE_HWBUS_LIFELINE_WORDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWBUS_LIFELINE_HWBUS_LIFELINE_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWBUS_LIFELINE_HWBUS_LIFELINE_ISSERIAL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_LINK, Link.class, MARTEDesignerTagTypes.HWBUS_LINK_HWBUS_LINK_ADRESSWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_LINK, Link.class, MARTEDesignerTagTypes.HWBUS_LINK_HWBUS_LINK_WORDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_LINK, Link.class, MARTEDesignerTagTypes.HWBUS_LINK_HWBUS_LINK_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_LINK, Link.class, MARTEDesignerTagTypes.HWBUS_LINK_HWBUS_LINK_ISSERIAL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWBUS_PARAMETER_HWBUS_PARAMETER_ADRESSWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWBUS_PARAMETER_HWBUS_PARAMETER_WORDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWBUS_PARAMETER_HWBUS_PARAMETER_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBUS_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWBUS_PARAMETER_HWBUS_PARAMETER_ISSERIAL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWENDPOINT_ASSOCIATION_HWENDPOINT_ASSOCIATION_CONNECTEDTO));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWENDPOINT_ASSOCIATION_HWENDPOINT_ASSOCIATION_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWENDPOINT_ASSOCIATION_HWENDPOINT_ASSOCIATION_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWENDPOINT_ASSOCIATION_HWENDPOINT_ASSOCIATION_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWENDPOINT_ASSOCIATION_HWENDPOINT_ASSOCIATION_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWENDPOINT_ASSOCIATION_HWENDPOINT_ASSOCIATION_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWENDPOINT_ASSOCIATIONEND_HWENDPOINT_ASSOCIATIONEND_CONNECTEDTO));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWENDPOINT_ASSOCIATIONEND_HWENDPOINT_ASSOCIATIONEND_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWENDPOINT_ASSOCIATIONEND_HWENDPOINT_ASSOCIATIONEND_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWENDPOINT_ASSOCIATIONEND_HWENDPOINT_ASSOCIATIONEND_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWENDPOINT_ASSOCIATIONEND_HWENDPOINT_ASSOCIATIONEND_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWENDPOINT_ASSOCIATIONEND_HWENDPOINT_ASSOCIATIONEND_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWENDPOINT_ATTRIBUTE_HWENDPOINT_ATTRIBUTE_CONNECTEDTO));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWENDPOINT_ATTRIBUTE_HWENDPOINT_ATTRIBUTE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWENDPOINT_ATTRIBUTE_HWENDPOINT_ATTRIBUTE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWENDPOINT_ATTRIBUTE_HWENDPOINT_ATTRIBUTE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWENDPOINT_ATTRIBUTE_HWENDPOINT_ATTRIBUTE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWENDPOINT_ATTRIBUTE_HWENDPOINT_ATTRIBUTE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWENDPOINT_CLASSIFIER_HWENDPOINT_CLASSIFIER_CONNECTEDTO));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWENDPOINT_CLASSIFIER_HWENDPOINT_CLASSIFIER_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWENDPOINT_CLASSIFIER_HWENDPOINT_CLASSIFIER_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWENDPOINT_CLASSIFIER_HWENDPOINT_CLASSIFIER_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWENDPOINT_CLASSIFIER_HWENDPOINT_CLASSIFIER_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWENDPOINT_CLASSIFIER_HWENDPOINT_CLASSIFIER_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWENDPOINT_INSTANCE_HWENDPOINT_INSTANCE_CONNECTEDTO));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWENDPOINT_INSTANCE_HWENDPOINT_INSTANCE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWENDPOINT_INSTANCE_HWENDPOINT_INSTANCE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWENDPOINT_INSTANCE_HWENDPOINT_INSTANCE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWENDPOINT_INSTANCE_HWENDPOINT_INSTANCE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWENDPOINT_INSTANCE_HWENDPOINT_INSTANCE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWENDPOINT_LIFELINE_HWENDPOINT_LIFELINE_CONNECTEDTO));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWENDPOINT_LIFELINE_HWENDPOINT_LIFELINE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWENDPOINT_LIFELINE_HWENDPOINT_LIFELINE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWENDPOINT_LIFELINE_HWENDPOINT_LIFELINE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWENDPOINT_LIFELINE_HWENDPOINT_LIFELINE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWENDPOINT_LIFELINE_HWENDPOINT_LIFELINE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LINK, Link.class, MARTEDesignerTagTypes.HWENDPOINT_LINK_HWENDPOINT_LINK_CONNECTEDTO));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LINK, Link.class, MARTEDesignerTagTypes.HWENDPOINT_LINK_HWENDPOINT_LINK_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LINK, Link.class, MARTEDesignerTagTypes.HWENDPOINT_LINK_HWENDPOINT_LINK_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LINK, Link.class, MARTEDesignerTagTypes.HWENDPOINT_LINK_HWENDPOINT_LINK_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LINK, Link.class, MARTEDesignerTagTypes.HWENDPOINT_LINK_HWENDPOINT_LINK_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LINK, Link.class, MARTEDesignerTagTypes.HWENDPOINT_LINK_HWENDPOINT_LINK_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LINKEND, LinkEnd.class, MARTEDesignerTagTypes.HWENDPOINT_LINKEND_HWENDPOINT_LINKEND_CONNECTEDTO));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LINKEND, LinkEnd.class, MARTEDesignerTagTypes.HWENDPOINT_LINKEND_HWENDPOINT_LINKEND_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LINKEND, LinkEnd.class, MARTEDesignerTagTypes.HWENDPOINT_LINKEND_HWENDPOINT_LINKEND_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LINKEND, LinkEnd.class, MARTEDesignerTagTypes.HWENDPOINT_LINKEND_HWENDPOINT_LINKEND_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LINKEND, LinkEnd.class, MARTEDesignerTagTypes.HWENDPOINT_LINKEND_HWENDPOINT_LINKEND_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_LINKEND, LinkEnd.class, MARTEDesignerTagTypes.HWENDPOINT_LINKEND_HWENDPOINT_LINKEND_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWENDPOINT_PARAMETER_HWENDPOINT_PARAMETER_CONNECTEDTO));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWENDPOINT_PARAMETER_HWENDPOINT_PARAMETER_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWENDPOINT_PARAMETER_HWENDPOINT_PARAMETER_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWENDPOINT_PARAMETER_HWENDPOINT_PARAMETER_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWENDPOINT_PARAMETER_HWENDPOINT_PARAMETER_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWENDPOINT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWENDPOINT_PARAMETER_HWENDPOINT_PARAMETER_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMEDIA_ASSOCIATION_HWMEDIA_ASSOCIATION_ARBITERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMEDIA_ASSOCIATION_HWMEDIA_ASSOCIATION_BANDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMEDIA_ASSOCIATIONEND_HWMEDIA_ASSOCIATIONEND_ARBITERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMEDIA_ASSOCIATIONEND_HWMEDIA_ASSOCIATIONEND_BANDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMEDIA_ATTRIBUTE_HWMEDIA_ATTRIBUTE_ARBITERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMEDIA_ATTRIBUTE_HWMEDIA_ATTRIBUTE_BANDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMEDIA_CLASSIFIER_HWMEDIA_CLASSIFIER_ARBITERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMEDIA_CLASSIFIER_HWMEDIA_CLASSIFIER_BANDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMEDIA_INSTANCE_HWMEDIA_INSTANCE_ARBITERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMEDIA_INSTANCE_HWMEDIA_INSTANCE_BANDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMEDIA_LIFELINE_HWMEDIA_LIFELINE_ARBITERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMEDIA_LIFELINE_HWMEDIA_LIFELINE_BANDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_LINK, Link.class, MARTEDesignerTagTypes.HWMEDIA_LINK_HWMEDIA_LINK_ARBITERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_LINK, Link.class, MARTEDesignerTagTypes.HWMEDIA_LINK_HWMEDIA_LINK_BANDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMEDIA_PARAMETER_HWMEDIA_PARAMETER_ARBITERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEDIA_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMEDIA_PARAMETER_HWMEDIA_PARAMETER_BANDWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCLOCK_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCLOCK_ASSOCIATION_HWCLOCK_ASSOCIATION_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCLOCK_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCLOCK_ASSOCIATIONEND_HWCLOCK_ASSOCIATIONEND_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCLOCK_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCLOCK_ATTRIBUTE_HWCLOCK_ATTRIBUTE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCLOCK_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCLOCK_CLASSIFIER_HWCLOCK_CLASSIFIER_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCLOCK_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCLOCK_INSTANCE_HWCLOCK_INSTANCE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCLOCK_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCLOCK_LIFELINE_HWCLOCK_LIFELINE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCLOCK_LINK, Link.class, MARTEDesignerTagTypes.HWCLOCK_LINK_HWCLOCK_LINK_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCLOCK_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCLOCK_PARAMETER_HWCLOCK_PARAMETER_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWTIMER_ASSOCIATION_HWTIMER_ASSOCIATION_NBCOUNTERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWTIMER_ASSOCIATION_HWTIMER_ASSOCIATION_COUNTERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWTIMER_ASSOCIATION_HWTIMER_ASSOCIATION_INPUTCLOCK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWTIMER_ASSOCIATIONEND_HWTIMER_ASSOCIATIONEND_NBCOUNTERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWTIMER_ASSOCIATIONEND_HWTIMER_ASSOCIATIONEND_COUNTERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWTIMER_ASSOCIATIONEND_HWTIMER_ASSOCIATIONEND_INPUTCLOCK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWTIMER_ATTRIBUTE_HWTIMER_ATTRIBUTE_NBCOUNTERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWTIMER_ATTRIBUTE_HWTIMER_ATTRIBUTE_COUNTERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWTIMER_ATTRIBUTE_HWTIMER_ATTRIBUTE_INPUTCLOCK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWTIMER_CLASSIFIER_HWTIMER_CLASSIFIER_NBCOUNTERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWTIMER_CLASSIFIER_HWTIMER_CLASSIFIER_COUNTERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWTIMER_CLASSIFIER_HWTIMER_CLASSIFIER_INPUTCLOCK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWTIMER_INSTANCE_HWTIMER_INSTANCE_NBCOUNTERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWTIMER_INSTANCE_HWTIMER_INSTANCE_COUNTERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWTIMER_INSTANCE_HWTIMER_INSTANCE_INPUTCLOCK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWTIMER_LIFELINE_HWTIMER_LIFELINE_NBCOUNTERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWTIMER_LIFELINE_HWTIMER_LIFELINE_COUNTERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWTIMER_LIFELINE_HWTIMER_LIFELINE_INPUTCLOCK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_LINK, Link.class, MARTEDesignerTagTypes.HWTIMER_LINK_HWTIMER_LINK_NBCOUNTERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_LINK, Link.class, MARTEDesignerTagTypes.HWTIMER_LINK_HWTIMER_LINK_COUNTERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_LINK, Link.class, MARTEDesignerTagTypes.HWTIMER_LINK_HWTIMER_LINK_INPUTCLOCK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWTIMER_PARAMETER_HWTIMER_PARAMETER_NBCOUNTERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWTIMER_PARAMETER_HWTIMER_PARAMETER_COUNTERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWTIMER_PARAMETER_HWTIMER_PARAMETER_INPUTCLOCK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ASSOCIATION_HWTIMINGRESOURCE_ASSOCIATION_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ASSOCIATION_HWTIMINGRESOURCE_ASSOCIATION_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ASSOCIATION_HWTIMINGRESOURCE_ASSOCIATION_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ASSOCIATION_HWTIMINGRESOURCE_ASSOCIATION_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ASSOCIATION_HWTIMINGRESOURCE_ASSOCIATION_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ASSOCIATION_HWTIMINGRESOURCE_ASSOCIATION_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ASSOCIATIONEND_HWTIMINGRESOURCE_ASSOCIATIONEND_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ASSOCIATIONEND_HWTIMINGRESOURCE_ASSOCIATIONEND_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ASSOCIATIONEND_HWTIMINGRESOURCE_ASSOCIATIONEND_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ASSOCIATIONEND_HWTIMINGRESOURCE_ASSOCIATIONEND_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ASSOCIATIONEND_HWTIMINGRESOURCE_ASSOCIATIONEND_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ASSOCIATIONEND_HWTIMINGRESOURCE_ASSOCIATIONEND_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ATTRIBUTE_HWTIMINGRESOURCE_ATTRIBUTE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ATTRIBUTE_HWTIMINGRESOURCE_ATTRIBUTE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ATTRIBUTE_HWTIMINGRESOURCE_ATTRIBUTE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ATTRIBUTE_HWTIMINGRESOURCE_ATTRIBUTE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ATTRIBUTE_HWTIMINGRESOURCE_ATTRIBUTE_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_ATTRIBUTE_HWTIMINGRESOURCE_ATTRIBUTE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_CLASSIFIER_HWTIMINGRESOURCE_CLASSIFIER_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_CLASSIFIER_HWTIMINGRESOURCE_CLASSIFIER_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_CLASSIFIER_HWTIMINGRESOURCE_CLASSIFIER_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_CLASSIFIER_HWTIMINGRESOURCE_CLASSIFIER_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_CLASSIFIER_HWTIMINGRESOURCE_CLASSIFIER_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_CLASSIFIER_HWTIMINGRESOURCE_CLASSIFIER_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_INSTANCE_HWTIMINGRESOURCE_INSTANCE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_INSTANCE_HWTIMINGRESOURCE_INSTANCE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_INSTANCE_HWTIMINGRESOURCE_INSTANCE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_INSTANCE_HWTIMINGRESOURCE_INSTANCE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_INSTANCE_HWTIMINGRESOURCE_INSTANCE_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_INSTANCE_HWTIMINGRESOURCE_INSTANCE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_LIFELINE_HWTIMINGRESOURCE_LIFELINE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_LIFELINE_HWTIMINGRESOURCE_LIFELINE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_LIFELINE_HWTIMINGRESOURCE_LIFELINE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_LIFELINE_HWTIMINGRESOURCE_LIFELINE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_LIFELINE_HWTIMINGRESOURCE_LIFELINE_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_LIFELINE_HWTIMINGRESOURCE_LIFELINE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_LINK_HWTIMINGRESOURCE_LINK_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_LINK_HWTIMINGRESOURCE_LINK_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_LINK_HWTIMINGRESOURCE_LINK_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_LINK_HWTIMINGRESOURCE_LINK_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_LINK_HWTIMINGRESOURCE_LINK_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_LINK_HWTIMINGRESOURCE_LINK_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_PARAMETER_HWTIMINGRESOURCE_PARAMETER_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_PARAMETER_HWTIMINGRESOURCE_PARAMETER_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_PARAMETER_HWTIMINGRESOURCE_PARAMETER_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_PARAMETER_HWTIMINGRESOURCE_PARAMETER_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_PARAMETER_HWTIMINGRESOURCE_PARAMETER_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWTIMINGRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWTIMINGRESOURCE_PARAMETER_HWTIMINGRESOURCE_PARAMETER_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWDEVICE_ASSOCIATION_HWDEVICE_ASSOCIATION_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWDEVICE_ASSOCIATION_HWDEVICE_ASSOCIATION_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWDEVICE_ASSOCIATIONEND_HWDEVICE_ASSOCIATIONEND_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWDEVICE_ASSOCIATIONEND_HWDEVICE_ASSOCIATIONEND_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWDEVICE_ATTRIBUTE_HWDEVICE_ATTRIBUTE_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWDEVICE_ATTRIBUTE_HWDEVICE_ATTRIBUTE_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWDEVICE_CLASSIFIER_HWDEVICE_CLASSIFIER_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWDEVICE_CLASSIFIER_HWDEVICE_CLASSIFIER_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWDEVICE_INSTANCE_HWDEVICE_INSTANCE_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWDEVICE_INSTANCE_HWDEVICE_INSTANCE_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWDEVICE_LIFELINE_HWDEVICE_LIFELINE_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWDEVICE_LIFELINE_HWDEVICE_LIFELINE_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_LINK, Link.class, MARTEDesignerTagTypes.HWDEVICE_LINK_HWDEVICE_LINK_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_LINK, Link.class, MARTEDesignerTagTypes.HWDEVICE_LINK_HWDEVICE_LINK_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWDEVICE_PARAMETER_HWDEVICE_PARAMETER_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDEVICE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWDEVICE_PARAMETER_HWDEVICE_PARAMETER_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCACHE_ASSOCIATION_HWCACHE_ASSOCIATION_LEVEL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCACHE_ASSOCIATION_HWCACHE_ASSOCIATION_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCACHE_ASSOCIATION_HWCACHE_ASSOCIATION_STRUCTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCACHE_ASSOCIATION_HWCACHE_ASSOCIATION_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCACHE_ASSOCIATION_HWCACHE_ASSOCIATION_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCACHE_ASSOCIATIONEND_HWCACHE_ASSOCIATIONEND_LEVEL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCACHE_ASSOCIATIONEND_HWCACHE_ASSOCIATIONEND_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCACHE_ASSOCIATIONEND_HWCACHE_ASSOCIATIONEND_STRUCTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCACHE_ASSOCIATIONEND_HWCACHE_ASSOCIATIONEND_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCACHE_ASSOCIATIONEND_HWCACHE_ASSOCIATIONEND_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCACHE_ATTRIBUTE_HWCACHE_ATTRIBUTE_LEVEL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCACHE_ATTRIBUTE_HWCACHE_ATTRIBUTE_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCACHE_ATTRIBUTE_HWCACHE_ATTRIBUTE_STRUCTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCACHE_ATTRIBUTE_HWCACHE_ATTRIBUTE_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCACHE_ATTRIBUTE_HWCACHE_ATTRIBUTE_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCACHE_CLASSIFIER_HWCACHE_CLASSIFIER_LEVEL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCACHE_CLASSIFIER_HWCACHE_CLASSIFIER_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCACHE_CLASSIFIER_HWCACHE_CLASSIFIER_STRUCTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCACHE_CLASSIFIER_HWCACHE_CLASSIFIER_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCACHE_CLASSIFIER_HWCACHE_CLASSIFIER_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCACHE_INSTANCE_HWCACHE_INSTANCE_LEVEL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCACHE_INSTANCE_HWCACHE_INSTANCE_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCACHE_INSTANCE_HWCACHE_INSTANCE_STRUCTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCACHE_INSTANCE_HWCACHE_INSTANCE_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCACHE_INSTANCE_HWCACHE_INSTANCE_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCACHE_LIFELINE_HWCACHE_LIFELINE_LEVEL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCACHE_LIFELINE_HWCACHE_LIFELINE_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCACHE_LIFELINE_HWCACHE_LIFELINE_STRUCTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCACHE_LIFELINE_HWCACHE_LIFELINE_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCACHE_LIFELINE_HWCACHE_LIFELINE_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_LINK, Link.class, MARTEDesignerTagTypes.HWCACHE_LINK_HWCACHE_LINK_LEVEL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_LINK, Link.class, MARTEDesignerTagTypes.HWCACHE_LINK_HWCACHE_LINK_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_LINK, Link.class, MARTEDesignerTagTypes.HWCACHE_LINK_HWCACHE_LINK_STRUCTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_LINK, Link.class, MARTEDesignerTagTypes.HWCACHE_LINK_HWCACHE_LINK_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_LINK, Link.class, MARTEDesignerTagTypes.HWCACHE_LINK_HWCACHE_LINK_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCACHE_PARAMETER_HWCACHE_PARAMETER_LEVEL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCACHE_PARAMETER_HWCACHE_PARAMETER_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCACHE_PARAMETER_HWCACHE_PARAMETER_STRUCTURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCACHE_PARAMETER_HWCACHE_PARAMETER_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCACHE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCACHE_PARAMETER_HWCACHE_PARAMETER_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWDRIVE_ASSOCIATION_HWDRIVE_ASSOCIATION_SECTORSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWDRIVE_ASSOCIATION_HWDRIVE_ASSOCIATION_BUFFER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWDRIVE_ASSOCIATIONEND_HWDRIVE_ASSOCIATIONEND_SECTORSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWDRIVE_ASSOCIATIONEND_HWDRIVE_ASSOCIATIONEND_BUFFER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWDRIVE_ATTRIBUTE_HWDRIVE_ATTRIBUTE_SECTORSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWDRIVE_ATTRIBUTE_HWDRIVE_ATTRIBUTE_BUFFER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWDRIVE_CLASSIFIER_HWDRIVE_CLASSIFIER_SECTORSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWDRIVE_CLASSIFIER_HWDRIVE_CLASSIFIER_BUFFER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWDRIVE_INSTANCE_HWDRIVE_INSTANCE_SECTORSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWDRIVE_INSTANCE_HWDRIVE_INSTANCE_BUFFER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWDRIVE_LIFELINE_HWDRIVE_LIFELINE_SECTORSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWDRIVE_LIFELINE_HWDRIVE_LIFELINE_BUFFER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_LINK, Link.class, MARTEDesignerTagTypes.HWDRIVE_LINK_HWDRIVE_LINK_SECTORSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_LINK, Link.class, MARTEDesignerTagTypes.HWDRIVE_LINK_HWDRIVE_LINK_BUFFER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWDRIVE_PARAMETER_HWDRIVE_PARAMETER_SECTORSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDRIVE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWDRIVE_PARAMETER_HWDRIVE_PARAMETER_BUFFER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATION_HWMEMORY_ASSOCIATION_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATION_HWMEMORY_ASSOCIATION_ADRESSSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATION_HWMEMORY_ASSOCIATION_TIMINGS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATION_HWMEMORY_ASSOCIATION_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATION_HWMEMORY_ASSOCIATION_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATION_HWMEMORY_ASSOCIATION_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATION_HWMEMORY_ASSOCIATION_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATION_HWMEMORY_ASSOCIATION_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATION_HWMEMORY_ASSOCIATION_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATION_HWMEMORY_ASSOCIATION_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATIONEND_HWMEMORY_ASSOCIATIONEND_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATIONEND_HWMEMORY_ASSOCIATIONEND_ADRESSSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATIONEND_HWMEMORY_ASSOCIATIONEND_TIMINGS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATIONEND_HWMEMORY_ASSOCIATIONEND_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATIONEND_HWMEMORY_ASSOCIATIONEND_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATIONEND_HWMEMORY_ASSOCIATIONEND_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATIONEND_HWMEMORY_ASSOCIATIONEND_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATIONEND_HWMEMORY_ASSOCIATIONEND_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATIONEND_HWMEMORY_ASSOCIATIONEND_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMEMORY_ASSOCIATIONEND_HWMEMORY_ASSOCIATIONEND_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMEMORY_ATTRIBUTE_HWMEMORY_ATTRIBUTE_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMEMORY_ATTRIBUTE_HWMEMORY_ATTRIBUTE_ADRESSSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMEMORY_ATTRIBUTE_HWMEMORY_ATTRIBUTE_TIMINGS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMEMORY_ATTRIBUTE_HWMEMORY_ATTRIBUTE_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMEMORY_ATTRIBUTE_HWMEMORY_ATTRIBUTE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMEMORY_ATTRIBUTE_HWMEMORY_ATTRIBUTE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMEMORY_ATTRIBUTE_HWMEMORY_ATTRIBUTE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMEMORY_ATTRIBUTE_HWMEMORY_ATTRIBUTE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMEMORY_ATTRIBUTE_HWMEMORY_ATTRIBUTE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMEMORY_ATTRIBUTE_HWMEMORY_ATTRIBUTE_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMEMORY_CLASSIFIER_HWMEMORY_CLASSIFIER_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMEMORY_CLASSIFIER_HWMEMORY_CLASSIFIER_ADRESSSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMEMORY_CLASSIFIER_HWMEMORY_CLASSIFIER_TIMINGS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMEMORY_CLASSIFIER_HWMEMORY_CLASSIFIER_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMEMORY_CLASSIFIER_HWMEMORY_CLASSIFIER_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMEMORY_CLASSIFIER_HWMEMORY_CLASSIFIER_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMEMORY_CLASSIFIER_HWMEMORY_CLASSIFIER_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMEMORY_CLASSIFIER_HWMEMORY_CLASSIFIER_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMEMORY_CLASSIFIER_HWMEMORY_CLASSIFIER_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMEMORY_CLASSIFIER_HWMEMORY_CLASSIFIER_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMEMORY_INSTANCE_HWMEMORY_INSTANCE_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMEMORY_INSTANCE_HWMEMORY_INSTANCE_ADRESSSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMEMORY_INSTANCE_HWMEMORY_INSTANCE_TIMINGS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMEMORY_INSTANCE_HWMEMORY_INSTANCE_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMEMORY_INSTANCE_HWMEMORY_INSTANCE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMEMORY_INSTANCE_HWMEMORY_INSTANCE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMEMORY_INSTANCE_HWMEMORY_INSTANCE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMEMORY_INSTANCE_HWMEMORY_INSTANCE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMEMORY_INSTANCE_HWMEMORY_INSTANCE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMEMORY_INSTANCE_HWMEMORY_INSTANCE_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMEMORY_LIFELINE_HWMEMORY_LIFELINE_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMEMORY_LIFELINE_HWMEMORY_LIFELINE_ADRESSSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMEMORY_LIFELINE_HWMEMORY_LIFELINE_TIMINGS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMEMORY_LIFELINE_HWMEMORY_LIFELINE_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMEMORY_LIFELINE_HWMEMORY_LIFELINE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMEMORY_LIFELINE_HWMEMORY_LIFELINE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMEMORY_LIFELINE_HWMEMORY_LIFELINE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMEMORY_LIFELINE_HWMEMORY_LIFELINE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMEMORY_LIFELINE_HWMEMORY_LIFELINE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMEMORY_LIFELINE_HWMEMORY_LIFELINE_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LINK, Link.class, MARTEDesignerTagTypes.HWMEMORY_LINK_HWMEMORY_LINK_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LINK, Link.class, MARTEDesignerTagTypes.HWMEMORY_LINK_HWMEMORY_LINK_ADRESSSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LINK, Link.class, MARTEDesignerTagTypes.HWMEMORY_LINK_HWMEMORY_LINK_TIMINGS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LINK, Link.class, MARTEDesignerTagTypes.HWMEMORY_LINK_HWMEMORY_LINK_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LINK, Link.class, MARTEDesignerTagTypes.HWMEMORY_LINK_HWMEMORY_LINK_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LINK, Link.class, MARTEDesignerTagTypes.HWMEMORY_LINK_HWMEMORY_LINK_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LINK, Link.class, MARTEDesignerTagTypes.HWMEMORY_LINK_HWMEMORY_LINK_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LINK, Link.class, MARTEDesignerTagTypes.HWMEMORY_LINK_HWMEMORY_LINK_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LINK, Link.class, MARTEDesignerTagTypes.HWMEMORY_LINK_HWMEMORY_LINK_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_LINK, Link.class, MARTEDesignerTagTypes.HWMEMORY_LINK_HWMEMORY_LINK_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMEMORY_PARAMETER_HWMEMORY_PARAMETER_MEMORYSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMEMORY_PARAMETER_HWMEMORY_PARAMETER_ADRESSSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMEMORY_PARAMETER_HWMEMORY_PARAMETER_TIMINGS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMEMORY_PARAMETER_HWMEMORY_PARAMETER_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMEMORY_PARAMETER_HWMEMORY_PARAMETER_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMEMORY_PARAMETER_HWMEMORY_PARAMETER_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMEMORY_PARAMETER_HWMEMORY_PARAMETER_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMEMORY_PARAMETER_HWMEMORY_PARAMETER_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMEMORY_PARAMETER_HWMEMORY_PARAMETER_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMEMORY_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMEMORY_PARAMETER_HWMEMORY_PARAMETER_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWRAM_ASSOCIATION_HWRAM_ASSOCIATION_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWRAM_ASSOCIATION_HWRAM_ASSOCIATION_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWRAM_ASSOCIATION_HWRAM_ASSOCIATION_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWRAM_ASSOCIATION_HWRAM_ASSOCIATION_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWRAM_ASSOCIATION_HWRAM_ASSOCIATION_ISSTATIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWRAM_ASSOCIATION_HWRAM_ASSOCIATION_ISNONVOLATILE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWRAM_ASSOCIATIONEND_HWRAM_ASSOCIATIONEND_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWRAM_ASSOCIATIONEND_HWRAM_ASSOCIATIONEND_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWRAM_ASSOCIATIONEND_HWRAM_ASSOCIATIONEND_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWRAM_ASSOCIATIONEND_HWRAM_ASSOCIATIONEND_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWRAM_ASSOCIATIONEND_HWRAM_ASSOCIATIONEND_ISSTATIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWRAM_ASSOCIATIONEND_HWRAM_ASSOCIATIONEND_ISNONVOLATILE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWRAM_ATTRIBUTE_HWRAM_ATTRIBUTE_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWRAM_ATTRIBUTE_HWRAM_ATTRIBUTE_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWRAM_ATTRIBUTE_HWRAM_ATTRIBUTE_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWRAM_ATTRIBUTE_HWRAM_ATTRIBUTE_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWRAM_ATTRIBUTE_HWRAM_ATTRIBUTE_ISSTATIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWRAM_ATTRIBUTE_HWRAM_ATTRIBUTE_ISNONVOLATILE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWRAM_CLASSIFIER_HWRAM_CLASSIFIER_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWRAM_CLASSIFIER_HWRAM_CLASSIFIER_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWRAM_CLASSIFIER_HWRAM_CLASSIFIER_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWRAM_CLASSIFIER_HWRAM_CLASSIFIER_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWRAM_CLASSIFIER_HWRAM_CLASSIFIER_ISSTATIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWRAM_CLASSIFIER_HWRAM_CLASSIFIER_ISNONVOLATILE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWRAM_INSTANCE_HWRAM_INSTANCE_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWRAM_INSTANCE_HWRAM_INSTANCE_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWRAM_INSTANCE_HWRAM_INSTANCE_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWRAM_INSTANCE_HWRAM_INSTANCE_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWRAM_INSTANCE_HWRAM_INSTANCE_ISSTATIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWRAM_INSTANCE_HWRAM_INSTANCE_ISNONVOLATILE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWRAM_LIFELINE_HWRAM_LIFELINE_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWRAM_LIFELINE_HWRAM_LIFELINE_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWRAM_LIFELINE_HWRAM_LIFELINE_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWRAM_LIFELINE_HWRAM_LIFELINE_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWRAM_LIFELINE_HWRAM_LIFELINE_ISSTATIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWRAM_LIFELINE_HWRAM_LIFELINE_ISNONVOLATILE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_LINK, Link.class, MARTEDesignerTagTypes.HWRAM_LINK_HWRAM_LINK_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_LINK, Link.class, MARTEDesignerTagTypes.HWRAM_LINK_HWRAM_LINK_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_LINK, Link.class, MARTEDesignerTagTypes.HWRAM_LINK_HWRAM_LINK_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_LINK, Link.class, MARTEDesignerTagTypes.HWRAM_LINK_HWRAM_LINK_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_LINK, Link.class, MARTEDesignerTagTypes.HWRAM_LINK_HWRAM_LINK_ISSTATIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_LINK, Link.class, MARTEDesignerTagTypes.HWRAM_LINK_HWRAM_LINK_ISNONVOLATILE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWRAM_PARAMETER_HWRAM_PARAMETER_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWRAM_PARAMETER_HWRAM_PARAMETER_REPL_POLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWRAM_PARAMETER_HWRAM_PARAMETER_WRITEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWRAM_PARAMETER_HWRAM_PARAMETER_ISSYNCHRONOUS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWRAM_PARAMETER_HWRAM_PARAMETER_ISSTATIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRAM_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWRAM_PARAMETER_HWRAM_PARAMETER_ISNONVOLATILE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWROM_ASSOCIATION_HWROM_ASSOCIATION_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWROM_ASSOCIATION_HWROM_ASSOCIATION_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWROM_ASSOCIATIONEND_HWROM_ASSOCIATIONEND_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWROM_ASSOCIATIONEND_HWROM_ASSOCIATIONEND_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWROM_ATTRIBUTE_HWROM_ATTRIBUTE_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWROM_ATTRIBUTE_HWROM_ATTRIBUTE_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWROM_CLASSIFIER_HWROM_CLASSIFIER_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWROM_CLASSIFIER_HWROM_CLASSIFIER_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWROM_INSTANCE_HWROM_INSTANCE_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWROM_INSTANCE_HWROM_INSTANCE_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWROM_LIFELINE_HWROM_LIFELINE_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWROM_LIFELINE_HWROM_LIFELINE_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_LINK, Link.class, MARTEDesignerTagTypes.HWROM_LINK_HWROM_LINK_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_LINK, Link.class, MARTEDesignerTagTypes.HWROM_LINK_HWROM_LINK_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWROM_PARAMETER_HWROM_PARAMETER_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWROM_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWROM_PARAMETER_HWROM_PARAMETER_ORGANIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWDMA_ASSOCIATION_HWDMA_ASSOCIATION_NBCHANNELS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWDMA_ASSOCIATION_HWDMA_ASSOCIATION_TRANSFERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWDMA_ASSOCIATION_HWDMA_ASSOCIATION_DRIVENBY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWDMA_ASSOCIATION_HWDMA_ASSOCIATION_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWDMA_ASSOCIATION_HWDMA_ASSOCIATION_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWDMA_ASSOCIATIONEND_HWDMA_ASSOCIATIONEND_NBCHANNELS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWDMA_ASSOCIATIONEND_HWDMA_ASSOCIATIONEND_TRANSFERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWDMA_ASSOCIATIONEND_HWDMA_ASSOCIATIONEND_DRIVENBY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWDMA_ASSOCIATIONEND_HWDMA_ASSOCIATIONEND_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWDMA_ASSOCIATIONEND_HWDMA_ASSOCIATIONEND_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWDMA_ATTRIBUTE_HWDMA_ATTRIBUTE_NBCHANNELS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWDMA_ATTRIBUTE_HWDMA_ATTRIBUTE_TRANSFERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWDMA_ATTRIBUTE_HWDMA_ATTRIBUTE_DRIVENBY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWDMA_ATTRIBUTE_HWDMA_ATTRIBUTE_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWDMA_ATTRIBUTE_HWDMA_ATTRIBUTE_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWDMA_CLASSIFIER_HWDMA_CLASSIFIER_NBCHANNELS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWDMA_CLASSIFIER_HWDMA_CLASSIFIER_TRANSFERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWDMA_CLASSIFIER_HWDMA_CLASSIFIER_DRIVENBY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWDMA_CLASSIFIER_HWDMA_CLASSIFIER_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWDMA_CLASSIFIER_HWDMA_CLASSIFIER_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWDMA_INSTANCE_HWDMA_INSTANCE_NBCHANNELS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWDMA_INSTANCE_HWDMA_INSTANCE_TRANSFERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWDMA_INSTANCE_HWDMA_INSTANCE_DRIVENBY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWDMA_INSTANCE_HWDMA_INSTANCE_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWDMA_INSTANCE_HWDMA_INSTANCE_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWDMA_LIFELINE_HWDMA_LIFELINE_NBCHANNELS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWDMA_LIFELINE_HWDMA_LIFELINE_TRANSFERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWDMA_LIFELINE_HWDMA_LIFELINE_DRIVENBY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWDMA_LIFELINE_HWDMA_LIFELINE_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWDMA_LIFELINE_HWDMA_LIFELINE_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_LINK, Link.class, MARTEDesignerTagTypes.HWDMA_LINK_HWDMA_LINK_NBCHANNELS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_LINK, Link.class, MARTEDesignerTagTypes.HWDMA_LINK_HWDMA_LINK_TRANSFERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_LINK, Link.class, MARTEDesignerTagTypes.HWDMA_LINK_HWDMA_LINK_DRIVENBY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_LINK, Link.class, MARTEDesignerTagTypes.HWDMA_LINK_HWDMA_LINK_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_LINK, Link.class, MARTEDesignerTagTypes.HWDMA_LINK_HWDMA_LINK_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWDMA_PARAMETER_HWDMA_PARAMETER_NBCHANNELS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWDMA_PARAMETER_HWDMA_PARAMETER_TRANSFERWIDTH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWDMA_PARAMETER_HWDMA_PARAMETER_DRIVENBY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWDMA_PARAMETER_HWDMA_PARAMETER_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWDMA_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWDMA_PARAMETER_HWDMA_PARAMETER_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMMU_ASSOCIATION_HWMMU_ASSOCIATION_VIRTUALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMMU_ASSOCIATION_HWMMU_ASSOCIATION_PHYSICALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMMU_ASSOCIATION_HWMMU_ASSOCIATION_NBENTRIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMMU_ASSOCIATION_HWMMU_ASSOCIATION_OWNEDTLBS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWMMU_ASSOCIATION_HWMMU_ASSOCIATION_MEMORYPROTECTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMMU_ASSOCIATIONEND_HWMMU_ASSOCIATIONEND_VIRTUALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMMU_ASSOCIATIONEND_HWMMU_ASSOCIATIONEND_PHYSICALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMMU_ASSOCIATIONEND_HWMMU_ASSOCIATIONEND_MEMORYPROTECTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMMU_ASSOCIATIONEND_HWMMU_ASSOCIATIONEND_NBENTRIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWMMU_ASSOCIATIONEND_HWMMU_ASSOCIATIONEND_OWNEDTLBS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMMU_ATTRIBUTE_HWMMU_ATTRIBUTE_VIRTUALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMMU_ATTRIBUTE_HWMMU_ATTRIBUTE_PHYSICALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMMU_ATTRIBUTE_HWMMU_ATTRIBUTE_NBENTRIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMMU_ATTRIBUTE_HWMMU_ATTRIBUTE_OWNEDTLBS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWMMU_ATTRIBUTE_HWMMU_ATTRIBUTE_MEMORYPROTECTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMMU_CLASSIFIER_HWMMU_CLASSIFIER_VIRTUALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMMU_CLASSIFIER_HWMMU_CLASSIFIER_PHYSICALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMMU_CLASSIFIER_HWMMU_CLASSIFIER_NBENTRIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMMU_CLASSIFIER_HWMMU_CLASSIFIER_OWNEDTLBS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWMMU_CLASSIFIER_HWMMU_CLASSIFIER_MEMORYPROTECTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMMU_INSTANCE_HWMMU_INSTANCE_VIRTUALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMMU_INSTANCE_HWMMU_INSTANCE_PHYSICALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMMU_INSTANCE_HWMMU_INSTANCE_NBENTRIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMMU_INSTANCE_HWMMU_INSTANCE_OWNEDTLBS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWMMU_INSTANCE_HWMMU_INSTANCE_MEMORYPROTECTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMMU_LIFELINE_HWMMU_LIFELINE_VIRTUALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMMU_LIFELINE_HWMMU_LIFELINE_PHYSICALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMMU_LIFELINE_HWMMU_LIFELINE_NBENTRIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMMU_LIFELINE_HWMMU_LIFELINE_OWNEDTLBS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWMMU_LIFELINE_HWMMU_LIFELINE_MEMORYPROTECTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_LINK, Link.class, MARTEDesignerTagTypes.HWMMU_LINK_HWMMU_LINK_VIRTUALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_LINK, Link.class, MARTEDesignerTagTypes.HWMMU_LINK_HWMMU_LINK_PHYSICALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_LINK, Link.class, MARTEDesignerTagTypes.HWMMU_LINK_HWMMU_LINK_NBENTRIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_LINK, Link.class, MARTEDesignerTagTypes.HWMMU_LINK_HWMMU_LINK_OWNEDTLBS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_LINK, Link.class, MARTEDesignerTagTypes.HWMMU_LINK_HWMMU_LINK_MEMORYPROTECTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMMU_PARAMETER_HWMMU_PARAMETER_VIRTUALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMMU_PARAMETER_HWMMU_PARAMETER_PHYSICALADDRSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMMU_PARAMETER_HWMMU_PARAMETER_NBENTRIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMMU_PARAMETER_HWMMU_PARAMETER_OWNEDTLBS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWMMU_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWMMU_PARAMETER_HWMMU_PARAMETER_MEMORYPROTECTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ASSOCIATION_HWSTORAGEMANAGER_ASSOCIATION_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ASSOCIATION_HWSTORAGEMANAGER_ASSOCIATION_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ASSOCIATION_HWSTORAGEMANAGER_ASSOCIATION_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ASSOCIATION_HWSTORAGEMANAGER_ASSOCIATION_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ASSOCIATION_HWSTORAGEMANAGER_ASSOCIATION_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ASSOCIATION_HWSTORAGEMANAGER_ASSOCIATION_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ASSOCIATION_HWSTORAGEMANAGER_ASSOCIATION_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ASSOCIATIONEND_HWSTORAGEMANAGER_ASSOCIATIONEND_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ASSOCIATIONEND_HWSTORAGEMANAGER_ASSOCIATIONEND_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ASSOCIATIONEND_HWSTORAGEMANAGER_ASSOCIATIONEND_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ASSOCIATIONEND_HWSTORAGEMANAGER_ASSOCIATIONEND_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ASSOCIATIONEND_HWSTORAGEMANAGER_ASSOCIATIONEND_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ASSOCIATIONEND_HWSTORAGEMANAGER_ASSOCIATIONEND_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ASSOCIATIONEND_HWSTORAGEMANAGER_ASSOCIATIONEND_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ATTRIBUTE_HWSTORAGEMANAGER_ATTRIBUTE_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ATTRIBUTE_HWSTORAGEMANAGER_ATTRIBUTE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ATTRIBUTE_HWSTORAGEMANAGER_ATTRIBUTE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ATTRIBUTE_HWSTORAGEMANAGER_ATTRIBUTE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ATTRIBUTE_HWSTORAGEMANAGER_ATTRIBUTE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ATTRIBUTE_HWSTORAGEMANAGER_ATTRIBUTE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_ATTRIBUTE_HWSTORAGEMANAGER_ATTRIBUTE_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_CLASSIFIER_HWSTORAGEMANAGER_CLASSIFIER_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_CLASSIFIER_HWSTORAGEMANAGER_CLASSIFIER_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_CLASSIFIER_HWSTORAGEMANAGER_CLASSIFIER_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_CLASSIFIER_HWSTORAGEMANAGER_CLASSIFIER_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_CLASSIFIER_HWSTORAGEMANAGER_CLASSIFIER_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_CLASSIFIER_HWSTORAGEMANAGER_CLASSIFIER_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_CLASSIFIER_HWSTORAGEMANAGER_CLASSIFIER_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_INSTANCE_HWSTORAGEMANAGER_INSTANCE_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_INSTANCE_HWSTORAGEMANAGER_INSTANCE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_INSTANCE_HWSTORAGEMANAGER_INSTANCE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_INSTANCE_HWSTORAGEMANAGER_INSTANCE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_INSTANCE_HWSTORAGEMANAGER_INSTANCE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_INSTANCE_HWSTORAGEMANAGER_INSTANCE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_INSTANCE_HWSTORAGEMANAGER_INSTANCE_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_LIFELINE_HWSTORAGEMANAGER_LIFELINE_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_LIFELINE_HWSTORAGEMANAGER_LIFELINE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_LIFELINE_HWSTORAGEMANAGER_LIFELINE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_LIFELINE_HWSTORAGEMANAGER_LIFELINE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_LIFELINE_HWSTORAGEMANAGER_LIFELINE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_LIFELINE_HWSTORAGEMANAGER_LIFELINE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_LIFELINE_HWSTORAGEMANAGER_LIFELINE_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_LINK, Link.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_LINK_HWSTORAGEMANAGER_LINK_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_LINK, Link.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_LINK_HWSTORAGEMANAGER_LINK_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_LINK, Link.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_LINK_HWSTORAGEMANAGER_LINK_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_LINK, Link.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_LINK_HWSTORAGEMANAGER_LINK_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_LINK, Link.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_LINK_HWSTORAGEMANAGER_LINK_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_LINK, Link.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_LINK_HWSTORAGEMANAGER_LINK_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_LINK, Link.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_LINK_HWSTORAGEMANAGER_LINK_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_PARAMETER_HWSTORAGEMANAGER_PARAMETER_MANAGEDMEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_PARAMETER_HWSTORAGEMANAGER_PARAMETER_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_PARAMETER_HWSTORAGEMANAGER_PARAMETER_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_PARAMETER_HWSTORAGEMANAGER_PARAMETER_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_PARAMETER_HWSTORAGEMANAGER_PARAMETER_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_PARAMETER_HWSTORAGEMANAGER_PARAMETER_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWSTORAGEMANAGER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWSTORAGEMANAGER_PARAMETER_HWSTORAGEMANAGER_PARAMETER_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATION_HWCOMPONENT_ASSOCIATION_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATION_HWCOMPONENT_ASSOCIATION_DIMENSIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATION_HWCOMPONENT_ASSOCIATION_AREA));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATION_HWCOMPONENT_ASSOCIATION_POSITION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATION_HWCOMPONENT_ASSOCIATION_GRID));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATION_HWCOMPONENT_ASSOCIATION_NBPINS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATION_HWCOMPONENT_ASSOCIATION_WEIGHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATION_HWCOMPONENT_ASSOCIATION_PRICE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATION_HWCOMPONENT_ASSOCIATION_R_CONDITIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATION_HWCOMPONENT_ASSOCIATION_POWEREDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATION_HWCOMPONENT_ASSOCIATION_STATICCONSUMPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATION_HWCOMPONENT_ASSOCIATION_STATICDISSIPATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATION_HWCOMPONENT_ASSOCIATION_SUBCOMPONENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATIONEND_HWCOMPONENT_ASSOCIATIONEND_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATIONEND_HWCOMPONENT_ASSOCIATIONEND_DIMENSIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATIONEND_HWCOMPONENT_ASSOCIATIONEND_AREA));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATIONEND_HWCOMPONENT_ASSOCIATIONEND_POSITION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATIONEND_HWCOMPONENT_ASSOCIATIONEND_GRID));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATIONEND_HWCOMPONENT_ASSOCIATIONEND_NBPINS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATIONEND_HWCOMPONENT_ASSOCIATIONEND_WEIGHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATIONEND_HWCOMPONENT_ASSOCIATIONEND_PRICE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATIONEND_HWCOMPONENT_ASSOCIATIONEND_R_CONDITIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATIONEND_HWCOMPONENT_ASSOCIATIONEND_POWEREDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATIONEND_HWCOMPONENT_ASSOCIATIONEND_STATICCONSUMPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATIONEND_HWCOMPONENT_ASSOCIATIONEND_STATICDISSIPATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOMPONENT_ASSOCIATIONEND_HWCOMPONENT_ASSOCIATIONEND_SUBCOMPONENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPONENT_ATTRIBUTE_HWCOMPONENT_ATTRIBUTE_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPONENT_ATTRIBUTE_HWCOMPONENT_ATTRIBUTE_DIMENSIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPONENT_ATTRIBUTE_HWCOMPONENT_ATTRIBUTE_AREA));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPONENT_ATTRIBUTE_HWCOMPONENT_ATTRIBUTE_POSITION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPONENT_ATTRIBUTE_HWCOMPONENT_ATTRIBUTE_GRID));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPONENT_ATTRIBUTE_HWCOMPONENT_ATTRIBUTE_NBPINS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPONENT_ATTRIBUTE_HWCOMPONENT_ATTRIBUTE_WEIGHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPONENT_ATTRIBUTE_HWCOMPONENT_ATTRIBUTE_PRICE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPONENT_ATTRIBUTE_HWCOMPONENT_ATTRIBUTE_R_CONDITIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPONENT_ATTRIBUTE_HWCOMPONENT_ATTRIBUTE_POWEREDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPONENT_ATTRIBUTE_HWCOMPONENT_ATTRIBUTE_STATICCONSUMPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPONENT_ATTRIBUTE_HWCOMPONENT_ATTRIBUTE_STATICDISSIPATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOMPONENT_ATTRIBUTE_HWCOMPONENT_ATTRIBUTE_SUBCOMPONENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPONENT_CLASSIFIER_HWCOMPONENT_CLASSIFIER_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPONENT_CLASSIFIER_HWCOMPONENT_CLASSIFIER_DIMENSIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPONENT_CLASSIFIER_HWCOMPONENT_CLASSIFIER_AREA));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPONENT_CLASSIFIER_HWCOMPONENT_CLASSIFIER_POSITION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPONENT_CLASSIFIER_HWCOMPONENT_CLASSIFIER_GRID));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPONENT_CLASSIFIER_HWCOMPONENT_CLASSIFIER_NBPINS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPONENT_CLASSIFIER_HWCOMPONENT_CLASSIFIER_WEIGHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPONENT_CLASSIFIER_HWCOMPONENT_CLASSIFIER_PRICE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPONENT_CLASSIFIER_HWCOMPONENT_CLASSIFIER_R_CONDITIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPONENT_CLASSIFIER_HWCOMPONENT_CLASSIFIER_POWEREDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPONENT_CLASSIFIER_HWCOMPONENT_CLASSIFIER_STATICCONSUMPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPONENT_CLASSIFIER_HWCOMPONENT_CLASSIFIER_STATICDISSIPATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOMPONENT_CLASSIFIER_HWCOMPONENT_CLASSIFIER_SUBCOMPONENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPONENT_INSTANCE_HWCOMPONENT_INSTANCE_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPONENT_INSTANCE_HWCOMPONENT_INSTANCE_DIMENSIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPONENT_INSTANCE_HWCOMPONENT_INSTANCE_AREA));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPONENT_INSTANCE_HWCOMPONENT_INSTANCE_POSITION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPONENT_INSTANCE_HWCOMPONENT_INSTANCE_GRID));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPONENT_INSTANCE_HWCOMPONENT_INSTANCE_NBPINS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPONENT_INSTANCE_HWCOMPONENT_INSTANCE_WEIGHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPONENT_INSTANCE_HWCOMPONENT_INSTANCE_PRICE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPONENT_INSTANCE_HWCOMPONENT_INSTANCE_R_CONDITIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPONENT_INSTANCE_HWCOMPONENT_INSTANCE_POWEREDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPONENT_INSTANCE_HWCOMPONENT_INSTANCE_STATICCONSUMPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPONENT_INSTANCE_HWCOMPONENT_INSTANCE_STATICDISSIPATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOMPONENT_INSTANCE_HWCOMPONENT_INSTANCE_SUBCOMPONENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPONENT_LIFELINE_HWCOMPONENT_LIFELINE_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPONENT_LIFELINE_HWCOMPONENT_LIFELINE_DIMENSIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPONENT_LIFELINE_HWCOMPONENT_LIFELINE_AREA));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPONENT_LIFELINE_HWCOMPONENT_LIFELINE_POSITION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPONENT_LIFELINE_HWCOMPONENT_LIFELINE_GRID));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPONENT_LIFELINE_HWCOMPONENT_LIFELINE_NBPINS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPONENT_LIFELINE_HWCOMPONENT_LIFELINE_WEIGHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPONENT_LIFELINE_HWCOMPONENT_LIFELINE_PRICE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPONENT_LIFELINE_HWCOMPONENT_LIFELINE_R_CONDITIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPONENT_LIFELINE_HWCOMPONENT_LIFELINE_POWEREDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPONENT_LIFELINE_HWCOMPONENT_LIFELINE_STATICCONSUMPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPONENT_LIFELINE_HWCOMPONENT_LIFELINE_STATICDISSIPATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOMPONENT_LIFELINE_HWCOMPONENT_LIFELINE_SUBCOMPONENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPONENT_LINK_HWCOMPONENT_LINK_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPONENT_LINK_HWCOMPONENT_LINK_DIMENSIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPONENT_LINK_HWCOMPONENT_LINK_AREA));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPONENT_LINK_HWCOMPONENT_LINK_POSITION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPONENT_LINK_HWCOMPONENT_LINK_GRID));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPONENT_LINK_HWCOMPONENT_LINK_NBPINS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPONENT_LINK_HWCOMPONENT_LINK_WEIGHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPONENT_LINK_HWCOMPONENT_LINK_PRICE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPONENT_LINK_HWCOMPONENT_LINK_R_CONDITIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPONENT_LINK_HWCOMPONENT_LINK_POWEREDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPONENT_LINK_HWCOMPONENT_LINK_STATICCONSUMPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPONENT_LINK_HWCOMPONENT_LINK_STATICDISSIPATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_LINK, Link.class, MARTEDesignerTagTypes.HWCOMPONENT_LINK_HWCOMPONENT_LINK_SUBCOMPONENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPONENT_PARAMETER_HWCOMPONENT_PARAMETER_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPONENT_PARAMETER_HWCOMPONENT_PARAMETER_DIMENSIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPONENT_PARAMETER_HWCOMPONENT_PARAMETER_AREA));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPONENT_PARAMETER_HWCOMPONENT_PARAMETER_POSITION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPONENT_PARAMETER_HWCOMPONENT_PARAMETER_GRID));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPONENT_PARAMETER_HWCOMPONENT_PARAMETER_NBPINS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPONENT_PARAMETER_HWCOMPONENT_PARAMETER_WEIGHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPONENT_PARAMETER_HWCOMPONENT_PARAMETER_PRICE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPONENT_PARAMETER_HWCOMPONENT_PARAMETER_R_CONDITIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPONENT_PARAMETER_HWCOMPONENT_PARAMETER_POWEREDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPONENT_PARAMETER_HWCOMPONENT_PARAMETER_STATICCONSUMPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPONENT_PARAMETER_HWCOMPONENT_PARAMETER_STATICDISSIPATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOMPONENT_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOMPONENT_PARAMETER_HWCOMPONENT_PARAMETER_SUBCOMPONENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBATTERY_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWBATTERY_ASSOCIATION_HWBATTERY_ASSOCIATION_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBATTERY_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWBATTERY_ASSOCIATIONEND_HWBATTERY_ASSOCIATIONEND_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBATTERY_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWBATTERY_ATTRIBUTE_HWBATTERY_ATTRIBUTE_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBATTERY_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWBATTERY_CLASSIFIER_HWBATTERY_CLASSIFIER_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBATTERY_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWBATTERY_INSTANCE_HWBATTERY_INSTANCE_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBATTERY_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWBATTERY_LIFELINE_HWBATTERY_LIFELINE_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBATTERY_LINK, Link.class, MARTEDesignerTagTypes.HWBATTERY_LINK_HWBATTERY_LINK_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWBATTERY_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWBATTERY_PARAMETER_HWBATTERY_PARAMETER_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOOLINGSUPPLY_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWCOOLINGSUPPLY_ASSOCIATION_HWCOOLINGSUPPLY_ASSOCIATION_COOLINGPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOOLINGSUPPLY_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWCOOLINGSUPPLY_ASSOCIATIONEND_HWCOOLINGSUPPLY_ASSOCIATIONEND_COOLINGPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOOLINGSUPPLY_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWCOOLINGSUPPLY_ATTRIBUTE_HWCOOLINGSUPPLY_ATTRIBUTE_COOLINGPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOOLINGSUPPLY_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWCOOLINGSUPPLY_CLASSIFIER_HWCOOLINGSUPPLY_CLASSIFIER_COOLINGPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOOLINGSUPPLY_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWCOOLINGSUPPLY_INSTANCE_HWCOOLINGSUPPLY_INSTANCE_COOLINGPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOOLINGSUPPLY_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWCOOLINGSUPPLY_LIFELINE_HWCOOLINGSUPPLY_LIFELINE_COOLINGPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOOLINGSUPPLY_LINK, Link.class, MARTEDesignerTagTypes.HWCOOLINGSUPPLY_LINK_HWCOOLINGSUPPLY_LINK_COOLINGPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWCOOLINGSUPPLY_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWCOOLINGSUPPLY_PARAMETER_HWCOOLINGSUPPLY_PARAMETER_COOLINGPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_ASSOCIATION_HWPOWERSUPPLY_ASSOCIATION_SUPPLIEDPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_ASSOCIATION_HWPOWERSUPPLY_ASSOCIATION_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_ASSOCIATIONEND_HWPOWERSUPPLY_ASSOCIATIONEND_SUPPLIEDPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_ASSOCIATIONEND_HWPOWERSUPPLY_ASSOCIATIONEND_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_ATTRIBUTE_HWPOWERSUPPLY_ATTRIBUTE_SUPPLIEDPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_ATTRIBUTE_HWPOWERSUPPLY_ATTRIBUTE_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_CLASSIFIER_HWPOWERSUPPLY_CLASSIFIER_SUPPLIEDPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_CLASSIFIER_HWPOWERSUPPLY_CLASSIFIER_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_INSTANCE_HWPOWERSUPPLY_INSTANCE_SUPPLIEDPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_INSTANCE_HWPOWERSUPPLY_INSTANCE_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_LIFELINE_HWPOWERSUPPLY_LIFELINE_SUPPLIEDPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_LIFELINE_HWPOWERSUPPLY_LIFELINE_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_LINK, Link.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_LINK_HWPOWERSUPPLY_LINK_SUPPLIEDPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_LINK, Link.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_LINK_HWPOWERSUPPLY_LINK_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_PARAMETER_HWPOWERSUPPLY_PARAMETER_SUPPLIEDPOWER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWPOWERSUPPLY_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWPOWERSUPPLY_PARAMETER_HWPOWERSUPPLY_PARAMETER_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCESERVICE_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.HWRESOURCESERVICE_BEHAVIOR_HWRESOURCESERVICE_BEHAVIOR_CONSUMPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCESERVICE_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.HWRESOURCESERVICE_BEHAVIOR_HWRESOURCESERVICE_BEHAVIOR_DISSIPATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCESERVICE_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.HWRESOURCESERVICE_COLLABORATION_HWRESOURCESERVICE_COLLABORATION_CONSUMPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCESERVICE_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.HWRESOURCESERVICE_COLLABORATION_HWRESOURCESERVICE_COLLABORATION_DISSIPATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCESERVICE_COLLABORATIONUSE, CollaborationUse.class, MARTEDesignerTagTypes.HWRESOURCESERVICE_COLLABORATIONUSE_HWRESOURCESERVICE_COLLABORATIONUSE_CONSUMPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCESERVICE_COLLABORATIONUSE, CollaborationUse.class, MARTEDesignerTagTypes.HWRESOURCESERVICE_COLLABORATIONUSE_HWRESOURCESERVICE_COLLABORATIONUSE_DISSIPATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCESERVICE_EXECUTIONSPECIFICATION, ExecutionSpecification.class, MARTEDesignerTagTypes.HWRESOURCESERVICE_EXECUTIONSPECIFICATION_HWRESOURCESERVICE_EXECUTIONSPECIFICATION_CONSUMPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCESERVICE_EXECUTIONSPECIFICATION, ExecutionSpecification.class, MARTEDesignerTagTypes.HWRESOURCESERVICE_EXECUTIONSPECIFICATION_HWRESOURCESERVICE_EXECUTIONSPECIFICATION_DISSIPATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCESERVICE_OPERATION, Operation.class, MARTEDesignerTagTypes.HWRESOURCESERVICE_OPERATION_HWRESOURCESERVICE_OPERATION_CONSUMPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCESERVICE_OPERATION, Operation.class, MARTEDesignerTagTypes.HWRESOURCESERVICE_OPERATION_HWRESOURCESERVICE_OPERATION_DISSIPATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWRESOURCE_ASSOCIATION_HWRESOURCE_ASSOCIATION_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWRESOURCE_ASSOCIATION_HWRESOURCE_ASSOCIATION_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWRESOURCE_ASSOCIATION_HWRESOURCE_ASSOCIATION_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWRESOURCE_ASSOCIATION_HWRESOURCE_ASSOCIATION_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWRESOURCE_ASSOCIATION_HWRESOURCE_ASSOCIATION_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.HWRESOURCE_ASSOCIATION_HWRESOURCE_ASSOCIATION_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWRESOURCE_ASSOCIATIONEND_HWRESOURCE_ASSOCIATIONEND_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWRESOURCE_ASSOCIATIONEND_HWRESOURCE_ASSOCIATIONEND_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWRESOURCE_ASSOCIATIONEND_HWRESOURCE_ASSOCIATIONEND_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWRESOURCE_ASSOCIATIONEND_HWRESOURCE_ASSOCIATIONEND_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWRESOURCE_ASSOCIATIONEND_HWRESOURCE_ASSOCIATIONEND_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.HWRESOURCE_ASSOCIATIONEND_HWRESOURCE_ASSOCIATIONEND_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWRESOURCE_ATTRIBUTE_HWRESOURCE_ATTRIBUTE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWRESOURCE_ATTRIBUTE_HWRESOURCE_ATTRIBUTE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWRESOURCE_ATTRIBUTE_HWRESOURCE_ATTRIBUTE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWRESOURCE_ATTRIBUTE_HWRESOURCE_ATTRIBUTE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWRESOURCE_ATTRIBUTE_HWRESOURCE_ATTRIBUTE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.HWRESOURCE_ATTRIBUTE_HWRESOURCE_ATTRIBUTE_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWRESOURCE_CLASSIFIER_HWRESOURCE_CLASSIFIER_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWRESOURCE_CLASSIFIER_HWRESOURCE_CLASSIFIER_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWRESOURCE_CLASSIFIER_HWRESOURCE_CLASSIFIER_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWRESOURCE_CLASSIFIER_HWRESOURCE_CLASSIFIER_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWRESOURCE_CLASSIFIER_HWRESOURCE_CLASSIFIER_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.HWRESOURCE_CLASSIFIER_HWRESOURCE_CLASSIFIER_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWRESOURCE_INSTANCE_HWRESOURCE_INSTANCE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWRESOURCE_INSTANCE_HWRESOURCE_INSTANCE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWRESOURCE_INSTANCE_HWRESOURCE_INSTANCE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWRESOURCE_INSTANCE_HWRESOURCE_INSTANCE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWRESOURCE_INSTANCE_HWRESOURCE_INSTANCE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.HWRESOURCE_INSTANCE_HWRESOURCE_INSTANCE_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWRESOURCE_LIFELINE_HWRESOURCE_LIFELINE_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWRESOURCE_LIFELINE_HWRESOURCE_LIFELINE_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWRESOURCE_LIFELINE_HWRESOURCE_LIFELINE_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWRESOURCE_LIFELINE_HWRESOURCE_LIFELINE_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWRESOURCE_LIFELINE_HWRESOURCE_LIFELINE_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.HWRESOURCE_LIFELINE_HWRESOURCE_LIFELINE_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWRESOURCE_LINK_HWRESOURCE_LINK_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWRESOURCE_LINK_HWRESOURCE_LINK_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWRESOURCE_LINK_HWRESOURCE_LINK_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWRESOURCE_LINK_HWRESOURCE_LINK_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWRESOURCE_LINK_HWRESOURCE_LINK_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.HWRESOURCE_LINK_HWRESOURCE_LINK_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWRESOURCE_PARAMETER_HWRESOURCE_PARAMETER_DESCRIPTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWRESOURCE_PARAMETER_HWRESOURCE_PARAMETER_P_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWRESOURCE_PARAMETER_HWRESOURCE_PARAMETER_R_HW_SERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWRESOURCE_PARAMETER_HWRESOURCE_PARAMETER_OWNEDHW));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWRESOURCE_PARAMETER_HWRESOURCE_PARAMETER_FREQUENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.HWRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.HWRESOURCE_PARAMETER_HWRESOURCE_PARAMETER_ENDPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWACCESSSERVICE_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.SWACCESSSERVICE_BEHAVIOR_SWACCESSSERVICE_BEHAVIOR_ISMODIFIER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWACCESSSERVICE_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.SWACCESSSERVICE_BEHAVIOR_SWACCESSSERVICE_BEHAVIOR_ACCESSEDELEMENT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWACCESSSERVICE_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.SWACCESSSERVICE_COLLABORATION_SWACCESSSERVICE_COLLABORATION_ISMODIFIER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWACCESSSERVICE_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.SWACCESSSERVICE_COLLABORATION_SWACCESSSERVICE_COLLABORATION_ACCESSEDELEMENT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWACCESSSERVICE_COLLABORATIONUSE, CollaborationUse.class, MARTEDesignerTagTypes.SWACCESSSERVICE_COLLABORATIONUSE_SWACCESSSERVICE_COLLABORATIONUSE_ISMODIFIER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWACCESSSERVICE_COLLABORATIONUSE, CollaborationUse.class, MARTEDesignerTagTypes.SWACCESSSERVICE_COLLABORATIONUSE_SWACCESSSERVICE_COLLABORATIONUSE_ACCESSEDELEMENT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWACCESSSERVICE_EXECUTIONSPECIFICATION, ExecutionSpecification.class, MARTEDesignerTagTypes.SWACCESSSERVICE_EXECUTIONSPECIFICATION_SWACCESSSERVICE_EXECUTIONSPECIFICATION_ISMODIFIER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWACCESSSERVICE_EXECUTIONSPECIFICATION, ExecutionSpecification.class, MARTEDesignerTagTypes.SWACCESSSERVICE_EXECUTIONSPECIFICATION_SWACCESSSERVICE_EXECUTIONSPECIFICATION_ACCESSEDELEMENT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWACCESSSERVICE_OPERATION, Operation.class, MARTEDesignerTagTypes.SWACCESSSERVICE_OPERATION_SWACCESSSERVICE_OPERATION_ISMODIFIER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWACCESSSERVICE_OPERATION, Operation.class, MARTEDesignerTagTypes.SWACCESSSERVICE_OPERATION_SWACCESSSERVICE_OPERATION_ACCESSEDELEMENT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWRESOURCE_ASSOCIATION_SWRESOURCE_ASSOCIATION_IDENTIFIERELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWRESOURCE_ASSOCIATION_SWRESOURCE_ASSOCIATION_STATEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWRESOURCE_ASSOCIATION_SWRESOURCE_ASSOCIATION_MEMORYSIZEFOOTPRINT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWRESOURCE_ASSOCIATION_SWRESOURCE_ASSOCIATION_CREATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWRESOURCE_ASSOCIATION_SWRESOURCE_ASSOCIATION_DELETESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWRESOURCE_ASSOCIATION_SWRESOURCE_ASSOCIATION_INITIALIZESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWRESOURCE_ASSOCIATIONEND_SWRESOURCE_ASSOCIATIONEND_IDENTIFIERELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWRESOURCE_ASSOCIATIONEND_SWRESOURCE_ASSOCIATIONEND_STATEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWRESOURCE_ASSOCIATIONEND_SWRESOURCE_ASSOCIATIONEND_MEMORYSIZEFOOTPRINT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWRESOURCE_ASSOCIATIONEND_SWRESOURCE_ASSOCIATIONEND_CREATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWRESOURCE_ASSOCIATIONEND_SWRESOURCE_ASSOCIATIONEND_DELETESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWRESOURCE_ASSOCIATIONEND_SWRESOURCE_ASSOCIATIONEND_INITIALIZESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWRESOURCE_ATTRIBUTE_SWRESOURCE_ATTRIBUTE_IDENTIFIERELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWRESOURCE_ATTRIBUTE_SWRESOURCE_ATTRIBUTE_STATEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWRESOURCE_ATTRIBUTE_SWRESOURCE_ATTRIBUTE_MEMORYSIZEFOOTPRINT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWRESOURCE_ATTRIBUTE_SWRESOURCE_ATTRIBUTE_CREATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWRESOURCE_ATTRIBUTE_SWRESOURCE_ATTRIBUTE_DELETESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWRESOURCE_ATTRIBUTE_SWRESOURCE_ATTRIBUTE_INITIALIZESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWRESOURCE_CLASSIFIER_SWRESOURCE_CLASSIFIER_IDENTIFIERELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWRESOURCE_CLASSIFIER_SWRESOURCE_CLASSIFIER_STATEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWRESOURCE_CLASSIFIER_SWRESOURCE_CLASSIFIER_MEMORYSIZEFOOTPRINT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWRESOURCE_CLASSIFIER_SWRESOURCE_CLASSIFIER_CREATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWRESOURCE_CLASSIFIER_SWRESOURCE_CLASSIFIER_DELETESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWRESOURCE_CLASSIFIER_SWRESOURCE_CLASSIFIER_INITIALIZESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWRESOURCE_INSTANCE_SWRESOURCE_INSTANCE_IDENTIFIERELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWRESOURCE_INSTANCE_SWRESOURCE_INSTANCE_STATEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWRESOURCE_INSTANCE_SWRESOURCE_INSTANCE_MEMORYSIZEFOOTPRINT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWRESOURCE_INSTANCE_SWRESOURCE_INSTANCE_CREATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWRESOURCE_INSTANCE_SWRESOURCE_INSTANCE_DELETESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWRESOURCE_INSTANCE_SWRESOURCE_INSTANCE_INITIALIZESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWRESOURCE_LIFELINE_SWRESOURCE_LIFELINE_IDENTIFIERELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWRESOURCE_LIFELINE_SWRESOURCE_LIFELINE_STATEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWRESOURCE_LIFELINE_SWRESOURCE_LIFELINE_MEMORYSIZEFOOTPRINT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWRESOURCE_LIFELINE_SWRESOURCE_LIFELINE_CREATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWRESOURCE_LIFELINE_SWRESOURCE_LIFELINE_DELETESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWRESOURCE_LIFELINE_SWRESOURCE_LIFELINE_INITIALIZESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWRESOURCE_LINK_SWRESOURCE_LINK_IDENTIFIERELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWRESOURCE_LINK_SWRESOURCE_LINK_STATEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWRESOURCE_LINK_SWRESOURCE_LINK_MEMORYSIZEFOOTPRINT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWRESOURCE_LINK_SWRESOURCE_LINK_CREATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWRESOURCE_LINK_SWRESOURCE_LINK_DELETESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWRESOURCE_LINK_SWRESOURCE_LINK_INITIALIZESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWRESOURCE_PARAMETER_SWRESOURCE_PARAMETER_IDENTIFIERELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWRESOURCE_PARAMETER_SWRESOURCE_PARAMETER_STATEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWRESOURCE_PARAMETER_SWRESOURCE_PARAMETER_MEMORYSIZEFOOTPRINT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWRESOURCE_PARAMETER_SWRESOURCE_PARAMETER_CREATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWRESOURCE_PARAMETER_SWRESOURCE_PARAMETER_DELETESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWRESOURCE_PARAMETER_SWRESOURCE_PARAMETER_INITIALIZESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_ASSOCIATION, Association.class, MARTEDesignerTagTypes.ALARM_ASSOCIATION_ALARM_ASSOCIATION_ISWATCHDOG));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_ASSOCIATION, Association.class, MARTEDesignerTagTypes.ALARM_ASSOCIATION_ALARM_ASSOCIATION_TIMERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.ALARM_ASSOCIATIONEND_ALARM_ASSOCIATIONEND_ISWATCHDOG));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.ALARM_ASSOCIATIONEND_ALARM_ASSOCIATIONEND_TIMERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.ALARM_ATTRIBUTE_ALARM_ATTRIBUTE_ISWATCHDOG));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.ALARM_ATTRIBUTE_ALARM_ATTRIBUTE_TIMERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.ALARM_CLASSIFIER_ALARM_CLASSIFIER_ISWATCHDOG));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.ALARM_CLASSIFIER_ALARM_CLASSIFIER_TIMERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_INSTANCE, Instance.class, MARTEDesignerTagTypes.ALARM_INSTANCE_ALARM_INSTANCE_ISWATCHDOG));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_INSTANCE, Instance.class, MARTEDesignerTagTypes.ALARM_INSTANCE_ALARM_INSTANCE_TIMERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.ALARM_LIFELINE_ALARM_LIFELINE_ISWATCHDOG));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.ALARM_LIFELINE_ALARM_LIFELINE_TIMERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_LINK, Link.class, MARTEDesignerTagTypes.ALARM_LINK_ALARM_LINK_ISWATCHDOG));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_LINK, Link.class, MARTEDesignerTagTypes.ALARM_LINK_ALARM_LINK_TIMERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_PARAMETER, Parameter.class, MARTEDesignerTagTypes.ALARM_PARAMETER_ALARM_PARAMETER_ISWATCHDOG));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ALARM_PARAMETER, Parameter.class, MARTEDesignerTagTypes.ALARM_PARAMETER_ALARM_PARAMETER_TIMERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ENTRYPOINT_DEPENDENCY, Dependency.class, MARTEDesignerTagTypes.ENTRYPOINT_DEPENDENCY_ENTRYPOINT_DEPENDENCY_ISREENTRANT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.ENTRYPOINT_DEPENDENCY, Dependency.class, MARTEDesignerTagTypes.ENTRYPOINT_DEPENDENCY_ENTRYPOINT_DEPENDENCY_ROUTINE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ASSOCIATION_INTERRUPTRESOURCE_ASSOCIATION_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ASSOCIATION_INTERRUPTRESOURCE_ASSOCIATION_ISMASKABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ASSOCIATION_INTERRUPTRESOURCE_ASSOCIATION_VECTORELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ASSOCIATION_INTERRUPTRESOURCE_ASSOCIATION_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ASSOCIATION_INTERRUPTRESOURCE_ASSOCIATION_ROUTINECONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ASSOCIATION_INTERRUPTRESOURCE_ASSOCIATION_ROUTINEDISCONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ASSOCIATIONEND_INTERRUPTRESOURCE_ASSOCIATIONEND_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ASSOCIATIONEND_INTERRUPTRESOURCE_ASSOCIATIONEND_ISMASKABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ASSOCIATIONEND_INTERRUPTRESOURCE_ASSOCIATIONEND_VECTORELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ASSOCIATIONEND_INTERRUPTRESOURCE_ASSOCIATIONEND_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ASSOCIATIONEND_INTERRUPTRESOURCE_ASSOCIATIONEND_ROUTINECONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ASSOCIATIONEND_INTERRUPTRESOURCE_ASSOCIATIONEND_ROUTINEDISCONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ATTRIBUTE_INTERRUPTRESOURCE_ATTRIBUTE_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ATTRIBUTE_INTERRUPTRESOURCE_ATTRIBUTE_ISMASKABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ATTRIBUTE_INTERRUPTRESOURCE_ATTRIBUTE_VECTORELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ATTRIBUTE_INTERRUPTRESOURCE_ATTRIBUTE_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ATTRIBUTE_INTERRUPTRESOURCE_ATTRIBUTE_ROUTINECONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_ATTRIBUTE_INTERRUPTRESOURCE_ATTRIBUTE_ROUTINEDISCONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_CLASSIFIER_INTERRUPTRESOURCE_CLASSIFIER_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_CLASSIFIER_INTERRUPTRESOURCE_CLASSIFIER_ISMASKABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_CLASSIFIER_INTERRUPTRESOURCE_CLASSIFIER_VECTORELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_CLASSIFIER_INTERRUPTRESOURCE_CLASSIFIER_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_CLASSIFIER_INTERRUPTRESOURCE_CLASSIFIER_ROUTINECONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_CLASSIFIER_INTERRUPTRESOURCE_CLASSIFIER_ROUTINEDISCONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_INSTANCE_INTERRUPTRESOURCE_INSTANCE_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_INSTANCE_INTERRUPTRESOURCE_INSTANCE_ISMASKABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_INSTANCE_INTERRUPTRESOURCE_INSTANCE_VECTORELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_INSTANCE_INTERRUPTRESOURCE_INSTANCE_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_INSTANCE_INTERRUPTRESOURCE_INSTANCE_ROUTINECONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_INSTANCE_INTERRUPTRESOURCE_INSTANCE_ROUTINEDISCONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_LIFELINE_INTERRUPTRESOURCE_LIFELINE_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_LIFELINE_INTERRUPTRESOURCE_LIFELINE_ISMASKABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_LIFELINE_INTERRUPTRESOURCE_LIFELINE_VECTORELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_LIFELINE_INTERRUPTRESOURCE_LIFELINE_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_LIFELINE_INTERRUPTRESOURCE_LIFELINE_ROUTINECONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_LIFELINE_INTERRUPTRESOURCE_LIFELINE_ROUTINEDISCONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_LINK_INTERRUPTRESOURCE_LINK_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_LINK_INTERRUPTRESOURCE_LINK_ISMASKABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_LINK_INTERRUPTRESOURCE_LINK_VECTORELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_LINK_INTERRUPTRESOURCE_LINK_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_LINK_INTERRUPTRESOURCE_LINK_ROUTINECONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_LINK_INTERRUPTRESOURCE_LINK_ROUTINEDISCONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_PARAMETER_INTERRUPTRESOURCE_PARAMETER_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_PARAMETER_INTERRUPTRESOURCE_PARAMETER_ISMASKABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_PARAMETER_INTERRUPTRESOURCE_PARAMETER_VECTORELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_PARAMETER_INTERRUPTRESOURCE_PARAMETER_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_PARAMETER_INTERRUPTRESOURCE_PARAMETER_ROUTINECONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERRUPTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.INTERRUPTRESOURCE_PARAMETER_INTERRUPTRESOURCE_PARAMETER_ROUTINEDISCONNECTSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MEMORYPARTITION_ASSOCIATION_MEMORYPARTITION_ASSOCIATION_CONCURRENTRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MEMORYPARTITION_ASSOCIATION_MEMORYPARTITION_ASSOCIATION_MEMORYSPACES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MEMORYPARTITION_ASSOCIATION_MEMORYPARTITION_ASSOCIATION_FORK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MEMORYPARTITION_ASSOCIATION_MEMORYPARTITION_ASSOCIATION_EXIT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MEMORYPARTITION_ASSOCIATIONEND_MEMORYPARTITION_ASSOCIATIONEND_CONCURRENTRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MEMORYPARTITION_ASSOCIATIONEND_MEMORYPARTITION_ASSOCIATIONEND_MEMORYSPACES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MEMORYPARTITION_ASSOCIATIONEND_MEMORYPARTITION_ASSOCIATIONEND_FORK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MEMORYPARTITION_ASSOCIATIONEND_MEMORYPARTITION_ASSOCIATIONEND_EXIT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MEMORYPARTITION_ATTRIBUTE_MEMORYPARTITION_ATTRIBUTE_CONCURRENTRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MEMORYPARTITION_ATTRIBUTE_MEMORYPARTITION_ATTRIBUTE_MEMORYSPACES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MEMORYPARTITION_ATTRIBUTE_MEMORYPARTITION_ATTRIBUTE_FORK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MEMORYPARTITION_ATTRIBUTE_MEMORYPARTITION_ATTRIBUTE_EXIT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_INSTANCE, Instance.class, MARTEDesignerTagTypes.MEMORYPARTITION_INSTANCE_MEMORYPARTITION_INSTANCE_CONCURRENTRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_INSTANCE, Instance.class, MARTEDesignerTagTypes.MEMORYPARTITION_INSTANCE_MEMORYPARTITION_INSTANCE_MEMORYSPACES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_INSTANCE, Instance.class, MARTEDesignerTagTypes.MEMORYPARTITION_INSTANCE_MEMORYPARTITION_INSTANCE_FORK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_INSTANCE, Instance.class, MARTEDesignerTagTypes.MEMORYPARTITION_INSTANCE_MEMORYPARTITION_INSTANCE_EXIT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MEMORYPARTITION_LIFELINE_MEMORYPARTITION_LIFELINE_CONCURRENTRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MEMORYPARTITION_LIFELINE_MEMORYPARTITION_LIFELINE_MEMORYSPACES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MEMORYPARTITION_LIFELINE_MEMORYPARTITION_LIFELINE_FORK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MEMORYPARTITION_LIFELINE_MEMORYPARTITION_LIFELINE_EXIT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_LINK, Link.class, MARTEDesignerTagTypes.MEMORYPARTITION_LINK_MEMORYPARTITION_LINK_CONCURRENTRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_LINK, Link.class, MARTEDesignerTagTypes.MEMORYPARTITION_LINK_MEMORYPARTITION_LINK_MEMORYSPACES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_LINK, Link.class, MARTEDesignerTagTypes.MEMORYPARTITION_LINK_MEMORYPARTITION_LINK_FORK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_LINK, Link.class, MARTEDesignerTagTypes.MEMORYPARTITION_LINK_MEMORYPARTITION_LINK_EXIT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MEMORYPARTITION_PARAMETER_MEMORYPARTITION_PARAMETER_CONCURRENTRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MEMORYPARTITION_PARAMETER_MEMORYPARTITION_PARAMETER_MEMORYSPACES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MEMORYPARTITION_PARAMETER_MEMORYPARTITION_PARAMETER_FORK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYPARTITION_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MEMORYPARTITION_PARAMETER_MEMORYPARTITION_PARAMETER_EXIT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_ACTIVATIONCAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_ENTRYPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_ADRESSSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_PERIODELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_PRIORITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_STACKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_ACTIVATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_ENABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_RESUMESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_SUSPENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_TERMINATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_DISABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_SHAREDATARESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_MESSAGERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_MUTUALEXCLUSIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_NOTIFICATIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATION_SWCONCURRENTRESOURCE_ASSOCIATION_HEAPSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_ACTIVATIONCAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_ENTRYPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_ADRESSSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_PERIODELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_PRIORITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_STACKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_ACTIVATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_ENABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_RESUMESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_SUSPENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_TERMINATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_DISABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_SHAREDATARESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_MESSAGERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_MUTUALEXCLUSIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_NOTIFICATIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ASSOCIATIONEND_SWCONCURRENTRESOURCE_ASSOCIATIONEND_HEAPSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_ACTIVATIONCAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_ENTRYPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_ADRESSSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_PERIODELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_PRIORITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_STACKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_ACTIVATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_ENABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_RESUMESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_SUSPENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_TERMINATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_DISABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_SHAREDATARESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_MESSAGERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_MUTUALEXCLUSIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_NOTIFICATIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_ATTRIBUTE_SWCONCURRENTRESOURCE_ATTRIBUTE_HEAPSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_ACTIVATIONCAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_ENTRYPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_ADRESSSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_PERIODELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_PRIORITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_STACKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_ACTIVATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_ENABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_RESUMESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_SUSPENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_TERMINATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_DISABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_SHAREDATARESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_MESSAGERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_MUTUALEXCLUSIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_NOTIFICATIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_CLASSIFIER_SWCONCURRENTRESOURCE_CLASSIFIER_HEAPSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_ACTIVATIONCAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_ENTRYPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_ADRESSSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_PERIODELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_PRIORITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_STACKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_ACTIVATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_ENABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_RESUMESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_SUSPENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_TERMINATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_DISABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_SHAREDATARESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_MESSAGERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_MUTUALEXCLUSIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_NOTIFICATIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_INSTANCE_SWCONCURRENTRESOURCE_INSTANCE_HEAPSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_ACTIVATIONCAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_ENTRYPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_ADRESSSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_PERIODELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_PRIORITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_STACKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_ACTIVATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_ENABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_RESUMESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_SUSPENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_TERMINATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_DISABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_SHAREDATARESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_MESSAGERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_MUTUALEXCLUSIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_NOTIFICATIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LIFELINE_SWCONCURRENTRESOURCE_LIFELINE_HEAPSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_ACTIVATIONCAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_ENTRYPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_ADRESSSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_PERIODELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_PRIORITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_STACKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_ACTIVATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_ENABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_RESUMESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_SUSPENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_TERMINATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_DISABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_SHAREDATARESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_MESSAGERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_MUTUALEXCLUSIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_NOTIFICATIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_LINK_SWCONCURRENTRESOURCE_LINK_HEAPSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_TYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_ACTIVATIONCAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_ENTRYPOINTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_ADRESSSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_PERIODELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_PRIORITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_STACKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_ACTIVATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_ENABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_RESUMESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_SUSPENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_TERMINATESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_DISABLECONCURRENCYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_SHAREDATARESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_MESSAGERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_MUTUALEXCLUSIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_NOTIFICATIONRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCONCURRENTRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCONCURRENTRESOURCE_PARAMETER_SWCONCURRENTRESOURCE_PARAMETER_HEAPSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATION_SWSCHEDULABLERESOURCE_ASSOCIATION_ISSTATICSCHEDULINGFEATURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATION_SWSCHEDULABLERESOURCE_ASSOCIATION_ISPREEMPTABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATION_SWSCHEDULABLERESOURCE_ASSOCIATION_SCHEDULERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATION_SWSCHEDULABLERESOURCE_ASSOCIATION_DEADLINEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATION_SWSCHEDULABLERESOURCE_ASSOCIATION_DEADLINETYPEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATION_SWSCHEDULABLERESOURCE_ASSOCIATION_TIMESLICEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATION_SWSCHEDULABLERESOURCE_ASSOCIATION_DELAYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATION_SWSCHEDULABLERESOURCE_ASSOCIATION_JOINSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATION_SWSCHEDULABLERESOURCE_ASSOCIATION_YIELDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATION_SWSCHEDULABLERESOURCE_ASSOCIATION_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATION_SWSCHEDULABLERESOURCE_ASSOCIATION_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATION_SWSCHEDULABLERESOURCE_ASSOCIATION_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND_SWSCHEDULABLERESOURCE_ASSOCIATIONEND_ISSTATICSCHEDULINGFEATURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND_SWSCHEDULABLERESOURCE_ASSOCIATIONEND_ISPREEMPTABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND_SWSCHEDULABLERESOURCE_ASSOCIATIONEND_SCHEDULERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND_SWSCHEDULABLERESOURCE_ASSOCIATIONEND_DEADLINEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND_SWSCHEDULABLERESOURCE_ASSOCIATIONEND_DEADLINETYPEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND_SWSCHEDULABLERESOURCE_ASSOCIATIONEND_TIMESLICEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND_SWSCHEDULABLERESOURCE_ASSOCIATIONEND_DELAYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND_SWSCHEDULABLERESOURCE_ASSOCIATIONEND_JOINSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND_SWSCHEDULABLERESOURCE_ASSOCIATIONEND_YIELDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND_SWSCHEDULABLERESOURCE_ASSOCIATIONEND_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND_SWSCHEDULABLERESOURCE_ASSOCIATIONEND_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ASSOCIATIONEND_SWSCHEDULABLERESOURCE_ASSOCIATIONEND_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ATTRIBUTE_SWSCHEDULABLERESOURCE_ATTRIBUTE_ISSTATICSCHEDULINGFEATURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ATTRIBUTE_SWSCHEDULABLERESOURCE_ATTRIBUTE_ISPREEMPTABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ATTRIBUTE_SWSCHEDULABLERESOURCE_ATTRIBUTE_SCHEDULERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ATTRIBUTE_SWSCHEDULABLERESOURCE_ATTRIBUTE_DEADLINEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ATTRIBUTE_SWSCHEDULABLERESOURCE_ATTRIBUTE_DEADLINETYPEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ATTRIBUTE_SWSCHEDULABLERESOURCE_ATTRIBUTE_TIMESLICEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ATTRIBUTE_SWSCHEDULABLERESOURCE_ATTRIBUTE_DELAYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ATTRIBUTE_SWSCHEDULABLERESOURCE_ATTRIBUTE_JOINSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ATTRIBUTE_SWSCHEDULABLERESOURCE_ATTRIBUTE_YIELDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ATTRIBUTE_SWSCHEDULABLERESOURCE_ATTRIBUTE_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ATTRIBUTE_SWSCHEDULABLERESOURCE_ATTRIBUTE_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_ATTRIBUTE_SWSCHEDULABLERESOURCE_ATTRIBUTE_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_CLASSIFIER_SWSCHEDULABLERESOURCE_CLASSIFIER_ISSTATICSCHEDULINGFEATURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_CLASSIFIER_SWSCHEDULABLERESOURCE_CLASSIFIER_ISPREEMPTABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_CLASSIFIER_SWSCHEDULABLERESOURCE_CLASSIFIER_SCHEDULERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_CLASSIFIER_SWSCHEDULABLERESOURCE_CLASSIFIER_DEADLINEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_CLASSIFIER_SWSCHEDULABLERESOURCE_CLASSIFIER_DEADLINETYPEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_CLASSIFIER_SWSCHEDULABLERESOURCE_CLASSIFIER_TIMESLICEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_CLASSIFIER_SWSCHEDULABLERESOURCE_CLASSIFIER_DELAYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_CLASSIFIER_SWSCHEDULABLERESOURCE_CLASSIFIER_JOINSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_CLASSIFIER_SWSCHEDULABLERESOURCE_CLASSIFIER_YIELDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_CLASSIFIER_SWSCHEDULABLERESOURCE_CLASSIFIER_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_CLASSIFIER_SWSCHEDULABLERESOURCE_CLASSIFIER_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_CLASSIFIER_SWSCHEDULABLERESOURCE_CLASSIFIER_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_INSTANCE_SWSCHEDULABLERESOURCE_INSTANCE_ISSTATICSCHEDULINGFEATURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_INSTANCE_SWSCHEDULABLERESOURCE_INSTANCE_ISPREEMPTABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_INSTANCE_SWSCHEDULABLERESOURCE_INSTANCE_SCHEDULERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_INSTANCE_SWSCHEDULABLERESOURCE_INSTANCE_DEADLINEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_INSTANCE_SWSCHEDULABLERESOURCE_INSTANCE_DEADLINETYPEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_INSTANCE_SWSCHEDULABLERESOURCE_INSTANCE_TIMESLICEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_INSTANCE_SWSCHEDULABLERESOURCE_INSTANCE_DELAYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_INSTANCE_SWSCHEDULABLERESOURCE_INSTANCE_JOINSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_INSTANCE_SWSCHEDULABLERESOURCE_INSTANCE_YIELDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_INSTANCE_SWSCHEDULABLERESOURCE_INSTANCE_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_INSTANCE_SWSCHEDULABLERESOURCE_INSTANCE_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_INSTANCE_SWSCHEDULABLERESOURCE_INSTANCE_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LIFELINE_SWSCHEDULABLERESOURCE_LIFELINE_ISSTATICSCHEDULINGFEATURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LIFELINE_SWSCHEDULABLERESOURCE_LIFELINE_ISPREEMPTABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LIFELINE_SWSCHEDULABLERESOURCE_LIFELINE_SCHEDULERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LIFELINE_SWSCHEDULABLERESOURCE_LIFELINE_DEADLINEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LIFELINE_SWSCHEDULABLERESOURCE_LIFELINE_DEADLINETYPEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LIFELINE_SWSCHEDULABLERESOURCE_LIFELINE_TIMESLICEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LIFELINE_SWSCHEDULABLERESOURCE_LIFELINE_DELAYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LIFELINE_SWSCHEDULABLERESOURCE_LIFELINE_JOINSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LIFELINE_SWSCHEDULABLERESOURCE_LIFELINE_YIELDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LIFELINE_SWSCHEDULABLERESOURCE_LIFELINE_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LIFELINE_SWSCHEDULABLERESOURCE_LIFELINE_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LIFELINE_SWSCHEDULABLERESOURCE_LIFELINE_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LINK_SWSCHEDULABLERESOURCE_LINK_ISSTATICSCHEDULINGFEATURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LINK_SWSCHEDULABLERESOURCE_LINK_ISPREEMPTABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LINK_SWSCHEDULABLERESOURCE_LINK_SCHEDULERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LINK_SWSCHEDULABLERESOURCE_LINK_DEADLINEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LINK_SWSCHEDULABLERESOURCE_LINK_DEADLINETYPEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LINK_SWSCHEDULABLERESOURCE_LINK_TIMESLICEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LINK_SWSCHEDULABLERESOURCE_LINK_DELAYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LINK_SWSCHEDULABLERESOURCE_LINK_JOINSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LINK_SWSCHEDULABLERESOURCE_LINK_YIELDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LINK_SWSCHEDULABLERESOURCE_LINK_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LINK_SWSCHEDULABLERESOURCE_LINK_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_LINK_SWSCHEDULABLERESOURCE_LINK_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_PARAMETER_SWSCHEDULABLERESOURCE_PARAMETER_ISSTATICSCHEDULINGFEATURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_PARAMETER_SWSCHEDULABLERESOURCE_PARAMETER_ISPREEMPTABLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_PARAMETER_SWSCHEDULABLERESOURCE_PARAMETER_SCHEDULERS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_PARAMETER_SWSCHEDULABLERESOURCE_PARAMETER_DEADLINEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_PARAMETER_SWSCHEDULABLERESOURCE_PARAMETER_DEADLINETYPEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_PARAMETER_SWSCHEDULABLERESOURCE_PARAMETER_TIMESLICEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_PARAMETER_SWSCHEDULABLERESOURCE_PARAMETER_DELAYSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_PARAMETER_SWSCHEDULABLERESOURCE_PARAMETER_JOINSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_PARAMETER_SWSCHEDULABLERESOURCE_PARAMETER_YIELDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_PARAMETER_SWSCHEDULABLERESOURCE_PARAMETER_SCHEDPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_PARAMETER_SWSCHEDULABLERESOURCE_PARAMETER_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWSCHEDULABLERESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWSCHEDULABLERESOURCE_PARAMETER_SWSCHEDULABLERESOURCE_PARAMETER_DEPENDENTSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.DEVICEBROKER_PARAMETER_DEVICEBROKER_PARAMETER_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.DEVICEBROKER_PARAMETER_DEVICEBROKER_PARAMETER_ISBUFFERED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.DEVICEBROKER_PARAMETER_DEVICEBROKER_PARAMETER_DEVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.DEVICEBROKER_PARAMETER_DEVICEBROKER_PARAMETER_CLOSESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.DEVICEBROKER_PARAMETER_DEVICEBROKER_PARAMETER_CONTROLSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.DEVICEBROKER_PARAMETER_DEVICEBROKER_PARAMETER_OPENSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.DEVICEBROKER_PARAMETER_DEVICEBROKER_PARAMETER_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.DEVICEBROKER_PARAMETER_DEVICEBROKER_PARAMETER_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATIONEND_DEVICEBROKER_ASSOCIATIONEND_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATIONEND_DEVICEBROKER_ASSOCIATIONEND_ISBUFFERED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATIONEND_DEVICEBROKER_ASSOCIATIONEND_DEVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATIONEND_DEVICEBROKER_ASSOCIATIONEND_CLOSESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATIONEND_DEVICEBROKER_ASSOCIATIONEND_CONTROLSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATIONEND_DEVICEBROKER_ASSOCIATIONEND_OPENSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATIONEND_DEVICEBROKER_ASSOCIATIONEND_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATIONEND_DEVICEBROKER_ASSOCIATIONEND_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.DEVICEBROKER_ATTRIBUTE_DEVICEBROKER_ATTRIBUTE_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.DEVICEBROKER_ATTRIBUTE_DEVICEBROKER_ATTRIBUTE_ISBUFFERED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.DEVICEBROKER_ATTRIBUTE_DEVICEBROKER_ATTRIBUTE_DEVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.DEVICEBROKER_ATTRIBUTE_DEVICEBROKER_ATTRIBUTE_CLOSESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.DEVICEBROKER_ATTRIBUTE_DEVICEBROKER_ATTRIBUTE_CONTROLSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.DEVICEBROKER_ATTRIBUTE_DEVICEBROKER_ATTRIBUTE_OPENSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.DEVICEBROKER_ATTRIBUTE_DEVICEBROKER_ATTRIBUTE_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.DEVICEBROKER_ATTRIBUTE_DEVICEBROKER_ATTRIBUTE_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LINK, Link.class, MARTEDesignerTagTypes.DEVICEBROKER_LINK_DEVICEBROKER_LINK_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LINK, Link.class, MARTEDesignerTagTypes.DEVICEBROKER_LINK_DEVICEBROKER_LINK_ISBUFFERED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LINK, Link.class, MARTEDesignerTagTypes.DEVICEBROKER_LINK_DEVICEBROKER_LINK_DEVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LINK, Link.class, MARTEDesignerTagTypes.DEVICEBROKER_LINK_DEVICEBROKER_LINK_CLOSESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LINK, Link.class, MARTEDesignerTagTypes.DEVICEBROKER_LINK_DEVICEBROKER_LINK_CONTROLSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LINK, Link.class, MARTEDesignerTagTypes.DEVICEBROKER_LINK_DEVICEBROKER_LINK_OPENSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LINK, Link.class, MARTEDesignerTagTypes.DEVICEBROKER_LINK_DEVICEBROKER_LINK_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LINK, Link.class, MARTEDesignerTagTypes.DEVICEBROKER_LINK_DEVICEBROKER_LINK_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.DEVICEBROKER_INSTANCE_DEVICEBROKER_INSTANCE_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.DEVICEBROKER_INSTANCE_DEVICEBROKER_INSTANCE_ISBUFFERED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.DEVICEBROKER_INSTANCE_DEVICEBROKER_INSTANCE_DEVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.DEVICEBROKER_INSTANCE_DEVICEBROKER_INSTANCE_CLOSESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.DEVICEBROKER_INSTANCE_DEVICEBROKER_INSTANCE_CONTROLSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.DEVICEBROKER_INSTANCE_DEVICEBROKER_INSTANCE_OPENSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.DEVICEBROKER_INSTANCE_DEVICEBROKER_INSTANCE_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.DEVICEBROKER_INSTANCE_DEVICEBROKER_INSTANCE_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATION_DEVICEBROKER_ASSOCIATION_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATION_DEVICEBROKER_ASSOCIATION_ISBUFFERED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATION_DEVICEBROKER_ASSOCIATION_DEVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATION_DEVICEBROKER_ASSOCIATION_CLOSESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATION_DEVICEBROKER_ASSOCIATION_CONTROLSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATION_DEVICEBROKER_ASSOCIATION_OPENSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATION_DEVICEBROKER_ASSOCIATION_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.DEVICEBROKER_ASSOCIATION_DEVICEBROKER_ASSOCIATION_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.DEVICEBROKER_LIFELINE_DEVICEBROKER_LIFELINE_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.DEVICEBROKER_LIFELINE_DEVICEBROKER_LIFELINE_ISBUFFERED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.DEVICEBROKER_LIFELINE_DEVICEBROKER_LIFELINE_DEVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.DEVICEBROKER_LIFELINE_DEVICEBROKER_LIFELINE_CLOSESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.DEVICEBROKER_LIFELINE_DEVICEBROKER_LIFELINE_CONTROLSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.DEVICEBROKER_LIFELINE_DEVICEBROKER_LIFELINE_OPENSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.DEVICEBROKER_LIFELINE_DEVICEBROKER_LIFELINE_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.DEVICEBROKER_LIFELINE_DEVICEBROKER_LIFELINE_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.DEVICEBROKER_CLASSIFIER_DEVICEBROKER_CLASSIFIER_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.DEVICEBROKER_CLASSIFIER_DEVICEBROKER_CLASSIFIER_ISBUFFERED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.DEVICEBROKER_CLASSIFIER_DEVICEBROKER_CLASSIFIER_DEVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.DEVICEBROKER_CLASSIFIER_DEVICEBROKER_CLASSIFIER_CLOSESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.DEVICEBROKER_CLASSIFIER_DEVICEBROKER_CLASSIFIER_CONTROLSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.DEVICEBROKER_CLASSIFIER_DEVICEBROKER_CLASSIFIER_OPENSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.DEVICEBROKER_CLASSIFIER_DEVICEBROKER_CLASSIFIER_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DEVICEBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.DEVICEBROKER_CLASSIFIER_DEVICEBROKER_CLASSIFIER_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MEMORYBROKER_PARAMETER_MEMORYBROKER_PARAMETER_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MEMORYBROKER_PARAMETER_MEMORYBROKER_PARAMETER_MEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MEMORYBROKER_PARAMETER_MEMORYBROKER_PARAMETER_MEMORYBLOCKADRESSELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MEMORYBROKER_PARAMETER_MEMORYBROKER_PARAMETER_MEMORYBLOCKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MEMORYBROKER_PARAMETER_MEMORYBROKER_PARAMETER_LOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MEMORYBROKER_PARAMETER_MEMORYBROKER_PARAMETER_UNLOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MEMORYBROKER_PARAMETER_MEMORYBROKER_PARAMETER_MAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MEMORYBROKER_PARAMETER_MEMORYBROKER_PARAMETER_UNMAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATIONEND_MEMORYBROKER_ASSOCIATIONEND_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATIONEND_MEMORYBROKER_ASSOCIATIONEND_MEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATIONEND_MEMORYBROKER_ASSOCIATIONEND_MEMORYBLOCKADRESSELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATIONEND_MEMORYBROKER_ASSOCIATIONEND_MEMORYBLOCKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATIONEND_MEMORYBROKER_ASSOCIATIONEND_LOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATIONEND_MEMORYBROKER_ASSOCIATIONEND_UNLOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATIONEND_MEMORYBROKER_ASSOCIATIONEND_MAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATIONEND_MEMORYBROKER_ASSOCIATIONEND_UNMAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MEMORYBROKER_ATTRIBUTE_MEMORYBROKER_ATTRIBUTE_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MEMORYBROKER_ATTRIBUTE_MEMORYBROKER_ATTRIBUTE_MEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MEMORYBROKER_ATTRIBUTE_MEMORYBROKER_ATTRIBUTE_MEMORYBLOCKADRESSELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MEMORYBROKER_ATTRIBUTE_MEMORYBROKER_ATTRIBUTE_MEMORYBLOCKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MEMORYBROKER_ATTRIBUTE_MEMORYBROKER_ATTRIBUTE_LOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MEMORYBROKER_ATTRIBUTE_MEMORYBROKER_ATTRIBUTE_UNLOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MEMORYBROKER_ATTRIBUTE_MEMORYBROKER_ATTRIBUTE_MAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MEMORYBROKER_ATTRIBUTE_MEMORYBROKER_ATTRIBUTE_UNMAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LINK, Link.class, MARTEDesignerTagTypes.MEMORYBROKER_LINK_MEMORYBROKER_LINK_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LINK, Link.class, MARTEDesignerTagTypes.MEMORYBROKER_LINK_MEMORYBROKER_LINK_MEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LINK, Link.class, MARTEDesignerTagTypes.MEMORYBROKER_LINK_MEMORYBROKER_LINK_MEMORYBLOCKADRESSELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LINK, Link.class, MARTEDesignerTagTypes.MEMORYBROKER_LINK_MEMORYBROKER_LINK_MEMORYBLOCKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LINK, Link.class, MARTEDesignerTagTypes.MEMORYBROKER_LINK_MEMORYBROKER_LINK_LOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LINK, Link.class, MARTEDesignerTagTypes.MEMORYBROKER_LINK_MEMORYBROKER_LINK_UNLOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LINK, Link.class, MARTEDesignerTagTypes.MEMORYBROKER_LINK_MEMORYBROKER_LINK_MAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LINK, Link.class, MARTEDesignerTagTypes.MEMORYBROKER_LINK_MEMORYBROKER_LINK_UNMAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.MEMORYBROKER_INSTANCE_MEMORYBROKER_INSTANCE_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.MEMORYBROKER_INSTANCE_MEMORYBROKER_INSTANCE_MEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.MEMORYBROKER_INSTANCE_MEMORYBROKER_INSTANCE_MEMORYBLOCKADRESSELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.MEMORYBROKER_INSTANCE_MEMORYBROKER_INSTANCE_MEMORYBLOCKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.MEMORYBROKER_INSTANCE_MEMORYBROKER_INSTANCE_LOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.MEMORYBROKER_INSTANCE_MEMORYBROKER_INSTANCE_UNLOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.MEMORYBROKER_INSTANCE_MEMORYBROKER_INSTANCE_MAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_INSTANCE, Instance.class, MARTEDesignerTagTypes.MEMORYBROKER_INSTANCE_MEMORYBROKER_INSTANCE_UNMAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATION_MEMORYBROKER_ASSOCIATION_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATION_MEMORYBROKER_ASSOCIATION_MEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATION_MEMORYBROKER_ASSOCIATION_MEMORYBLOCKADRESSELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATION_MEMORYBROKER_ASSOCIATION_MEMORYBLOCKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATION_MEMORYBROKER_ASSOCIATION_LOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATION_MEMORYBROKER_ASSOCIATION_UNLOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATION_MEMORYBROKER_ASSOCIATION_MAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MEMORYBROKER_ASSOCIATION_MEMORYBROKER_ASSOCIATION_UNMAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MEMORYBROKER_LIFELINE_MEMORYBROKER_LIFELINE_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MEMORYBROKER_LIFELINE_MEMORYBROKER_LIFELINE_MEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MEMORYBROKER_LIFELINE_MEMORYBROKER_LIFELINE_MEMORYBLOCKADRESSELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MEMORYBROKER_LIFELINE_MEMORYBROKER_LIFELINE_MEMORYBLOCKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MEMORYBROKER_LIFELINE_MEMORYBROKER_LIFELINE_LOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MEMORYBROKER_LIFELINE_MEMORYBROKER_LIFELINE_UNLOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MEMORYBROKER_LIFELINE_MEMORYBROKER_LIFELINE_MAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MEMORYBROKER_LIFELINE_MEMORYBROKER_LIFELINE_UNMAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MEMORYBROKER_CLASSIFIER_MEMORYBROKER_CLASSIFIER_ACCESSPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MEMORYBROKER_CLASSIFIER_MEMORYBROKER_CLASSIFIER_MEMORIES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MEMORYBROKER_CLASSIFIER_MEMORYBROKER_CLASSIFIER_MEMORYBLOCKADRESSELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MEMORYBROKER_CLASSIFIER_MEMORYBROKER_CLASSIFIER_MEMORYBLOCKSIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MEMORYBROKER_CLASSIFIER_MEMORYBROKER_CLASSIFIER_LOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MEMORYBROKER_CLASSIFIER_MEMORYBROKER_CLASSIFIER_UNLOCKSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MEMORYBROKER_CLASSIFIER_MEMORYBROKER_CLASSIFIER_MAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MEMORYBROKER_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MEMORYBROKER_CLASSIFIER_MEMORYBROKER_CLASSIFIER_UNMAPSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ASSOCIATION_MESSAGECOMRESOURCE_ASSOCIATION_ISFIXEDMESSAGESIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ASSOCIATION_MESSAGECOMRESOURCE_ASSOCIATION_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ASSOCIATION_MESSAGECOMRESOURCE_ASSOCIATION_MESSAGESIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ASSOCIATION_MESSAGECOMRESOURCE_ASSOCIATION_MESSAGEQUEUECAPACITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ASSOCIATION_MESSAGECOMRESOURCE_ASSOCIATION_MESSAGEQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ASSOCIATION_MESSAGECOMRESOURCE_ASSOCIATION_SENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ASSOCIATION_MESSAGECOMRESOURCE_ASSOCIATION_RECEIVESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ASSOCIATIONEND_MESSAGECOMRESOURCE_ASSOCIATIONEND_ISFIXEDMESSAGESIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ASSOCIATIONEND_MESSAGECOMRESOURCE_ASSOCIATIONEND_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ASSOCIATIONEND_MESSAGECOMRESOURCE_ASSOCIATIONEND_MESSAGESIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ASSOCIATIONEND_MESSAGECOMRESOURCE_ASSOCIATIONEND_MESSAGEQUEUECAPACITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ASSOCIATIONEND_MESSAGECOMRESOURCE_ASSOCIATIONEND_MESSAGEQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ASSOCIATIONEND_MESSAGECOMRESOURCE_ASSOCIATIONEND_SENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ASSOCIATIONEND_MESSAGECOMRESOURCE_ASSOCIATIONEND_RECEIVESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ATTRIBUTE_MESSAGECOMRESOURCE_ATTRIBUTE_ISFIXEDMESSAGESIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ATTRIBUTE_MESSAGECOMRESOURCE_ATTRIBUTE_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ATTRIBUTE_MESSAGECOMRESOURCE_ATTRIBUTE_MESSAGESIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ATTRIBUTE_MESSAGECOMRESOURCE_ATTRIBUTE_MESSAGEQUEUECAPACITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ATTRIBUTE_MESSAGECOMRESOURCE_ATTRIBUTE_MESSAGEQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ATTRIBUTE_MESSAGECOMRESOURCE_ATTRIBUTE_SENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_ATTRIBUTE_MESSAGECOMRESOURCE_ATTRIBUTE_RECEIVESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_CLASSIFIER_MESSAGECOMRESOURCE_CLASSIFIER_ISFIXEDMESSAGESIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_CLASSIFIER_MESSAGECOMRESOURCE_CLASSIFIER_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_CLASSIFIER_MESSAGECOMRESOURCE_CLASSIFIER_MESSAGESIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_CLASSIFIER_MESSAGECOMRESOURCE_CLASSIFIER_MESSAGEQUEUECAPACITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_CLASSIFIER_MESSAGECOMRESOURCE_CLASSIFIER_MESSAGEQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_CLASSIFIER_MESSAGECOMRESOURCE_CLASSIFIER_SENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_CLASSIFIER_MESSAGECOMRESOURCE_CLASSIFIER_RECEIVESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_INSTANCE_MESSAGECOMRESOURCE_INSTANCE_ISFIXEDMESSAGESIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_INSTANCE_MESSAGECOMRESOURCE_INSTANCE_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_INSTANCE_MESSAGECOMRESOURCE_INSTANCE_MESSAGESIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_INSTANCE_MESSAGECOMRESOURCE_INSTANCE_MESSAGEQUEUECAPACITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_INSTANCE_MESSAGECOMRESOURCE_INSTANCE_MESSAGEQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_INSTANCE_MESSAGECOMRESOURCE_INSTANCE_SENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_INSTANCE_MESSAGECOMRESOURCE_INSTANCE_RECEIVESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_LIFELINE_MESSAGECOMRESOURCE_LIFELINE_ISFIXEDMESSAGESIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_LIFELINE_MESSAGECOMRESOURCE_LIFELINE_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_LIFELINE_MESSAGECOMRESOURCE_LIFELINE_MESSAGESIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_LIFELINE_MESSAGECOMRESOURCE_LIFELINE_MESSAGEQUEUECAPACITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_LIFELINE_MESSAGECOMRESOURCE_LIFELINE_MESSAGEQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_LIFELINE_MESSAGECOMRESOURCE_LIFELINE_SENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_LIFELINE_MESSAGECOMRESOURCE_LIFELINE_RECEIVESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_LINK_MESSAGECOMRESOURCE_LINK_ISFIXEDMESSAGESIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_LINK_MESSAGECOMRESOURCE_LINK_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_LINK_MESSAGECOMRESOURCE_LINK_MESSAGESIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_LINK_MESSAGECOMRESOURCE_LINK_MESSAGEQUEUECAPACITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_LINK_MESSAGECOMRESOURCE_LINK_MESSAGEQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_LINK_MESSAGECOMRESOURCE_LINK_SENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_LINK_MESSAGECOMRESOURCE_LINK_RECEIVESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_PARAMETER_MESSAGECOMRESOURCE_PARAMETER_ISFIXEDMESSAGESIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_PARAMETER_MESSAGECOMRESOURCE_PARAMETER_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_PARAMETER_MESSAGECOMRESOURCE_PARAMETER_MESSAGESIZEELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_PARAMETER_MESSAGECOMRESOURCE_PARAMETER_MESSAGEQUEUECAPACITYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_PARAMETER_MESSAGECOMRESOURCE_PARAMETER_MESSAGEQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_PARAMETER_MESSAGECOMRESOURCE_PARAMETER_SENDSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.MESSAGECOMRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.MESSAGECOMRESOURCE_PARAMETER_MESSAGECOMRESOURCE_PARAMETER_RECEIVESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATION_NOTIFICATIONRESOURCE_ASSOCIATION_OCCURENCE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATION_NOTIFICATIONRESOURCE_ASSOCIATION_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATION_NOTIFICATIONRESOURCE_ASSOCIATION_OCCURENCECOUNTELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATION_NOTIFICATIONRESOURCE_ASSOCIATION_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATION_NOTIFICATIONRESOURCE_ASSOCIATION_FLUSHSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATION_NOTIFICATIONRESOURCE_ASSOCIATION_SIGNALSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATION_NOTIFICATIONRESOURCE_ASSOCIATION_WAITSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATION_NOTIFICATIONRESOURCE_ASSOCIATION_CLEARSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND_NOTIFICATIONRESOURCE_ASSOCIATIONEND_OCCURENCE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND_NOTIFICATIONRESOURCE_ASSOCIATIONEND_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND_NOTIFICATIONRESOURCE_ASSOCIATIONEND_OCCURENCECOUNTELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND_NOTIFICATIONRESOURCE_ASSOCIATIONEND_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND_NOTIFICATIONRESOURCE_ASSOCIATIONEND_FLUSHSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND_NOTIFICATIONRESOURCE_ASSOCIATIONEND_SIGNALSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND_NOTIFICATIONRESOURCE_ASSOCIATIONEND_WAITSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ASSOCIATIONEND_NOTIFICATIONRESOURCE_ASSOCIATIONEND_CLEARSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ATTRIBUTE_NOTIFICATIONRESOURCE_ATTRIBUTE_OCCURENCE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ATTRIBUTE_NOTIFICATIONRESOURCE_ATTRIBUTE_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ATTRIBUTE_NOTIFICATIONRESOURCE_ATTRIBUTE_OCCURENCECOUNTELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ATTRIBUTE_NOTIFICATIONRESOURCE_ATTRIBUTE_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ATTRIBUTE_NOTIFICATIONRESOURCE_ATTRIBUTE_FLUSHSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ATTRIBUTE_NOTIFICATIONRESOURCE_ATTRIBUTE_SIGNALSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ATTRIBUTE_NOTIFICATIONRESOURCE_ATTRIBUTE_WAITSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_ATTRIBUTE_NOTIFICATIONRESOURCE_ATTRIBUTE_CLEARSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_CLASSIFIER_NOTIFICATIONRESOURCE_CLASSIFIER_OCCURENCE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_CLASSIFIER_NOTIFICATIONRESOURCE_CLASSIFIER_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_CLASSIFIER_NOTIFICATIONRESOURCE_CLASSIFIER_OCCURENCECOUNTELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_CLASSIFIER_NOTIFICATIONRESOURCE_CLASSIFIER_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_CLASSIFIER_NOTIFICATIONRESOURCE_CLASSIFIER_FLUSHSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_CLASSIFIER_NOTIFICATIONRESOURCE_CLASSIFIER_SIGNALSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_CLASSIFIER_NOTIFICATIONRESOURCE_CLASSIFIER_WAITSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_CLASSIFIER_NOTIFICATIONRESOURCE_CLASSIFIER_CLEARSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_INSTANCE_NOTIFICATIONRESOURCE_INSTANCE_OCCURENCE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_INSTANCE_NOTIFICATIONRESOURCE_INSTANCE_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_INSTANCE_NOTIFICATIONRESOURCE_INSTANCE_OCCURENCECOUNTELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_INSTANCE_NOTIFICATIONRESOURCE_INSTANCE_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_INSTANCE_NOTIFICATIONRESOURCE_INSTANCE_FLUSHSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_INSTANCE_NOTIFICATIONRESOURCE_INSTANCE_SIGNALSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_INSTANCE_NOTIFICATIONRESOURCE_INSTANCE_WAITSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_INSTANCE_NOTIFICATIONRESOURCE_INSTANCE_CLEARSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LIFELINE_NOTIFICATIONRESOURCE_LIFELINE_OCCURENCE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LIFELINE_NOTIFICATIONRESOURCE_LIFELINE_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LIFELINE_NOTIFICATIONRESOURCE_LIFELINE_OCCURENCECOUNTELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LIFELINE_NOTIFICATIONRESOURCE_LIFELINE_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LIFELINE_NOTIFICATIONRESOURCE_LIFELINE_FLUSHSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LIFELINE_NOTIFICATIONRESOURCE_LIFELINE_SIGNALSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LIFELINE_NOTIFICATIONRESOURCE_LIFELINE_WAITSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LIFELINE_NOTIFICATIONRESOURCE_LIFELINE_CLEARSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LINK_NOTIFICATIONRESOURCE_LINK_OCCURENCE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LINK_NOTIFICATIONRESOURCE_LINK_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LINK_NOTIFICATIONRESOURCE_LINK_OCCURENCECOUNTELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LINK_NOTIFICATIONRESOURCE_LINK_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LINK_NOTIFICATIONRESOURCE_LINK_FLUSHSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LINK_NOTIFICATIONRESOURCE_LINK_SIGNALSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LINK_NOTIFICATIONRESOURCE_LINK_WAITSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_LINK_NOTIFICATIONRESOURCE_LINK_CLEARSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_PARAMETER_NOTIFICATIONRESOURCE_PARAMETER_OCCURENCE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_PARAMETER_NOTIFICATIONRESOURCE_PARAMETER_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_PARAMETER_NOTIFICATIONRESOURCE_PARAMETER_OCCURENCECOUNTELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_PARAMETER_NOTIFICATIONRESOURCE_PARAMETER_MASKELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_PARAMETER_NOTIFICATIONRESOURCE_PARAMETER_FLUSHSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_PARAMETER_NOTIFICATIONRESOURCE_PARAMETER_SIGNALSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_PARAMETER_NOTIFICATIONRESOURCE_PARAMETER_WAITSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.NOTIFICATIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.NOTIFICATIONRESOURCE_PARAMETER_NOTIFICATIONRESOURCE_PARAMETER_CLEARSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_ASSOCIATION_SHAREDDATACOMRESOURCE_ASSOCIATION_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_ASSOCIATION_SHAREDDATACOMRESOURCE_ASSOCIATION_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_ASSOCIATIONEND_SHAREDDATACOMRESOURCE_ASSOCIATIONEND_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_ASSOCIATIONEND_SHAREDDATACOMRESOURCE_ASSOCIATIONEND_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_ATTRIBUTE_SHAREDDATACOMRESOURCE_ATTRIBUTE_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_ATTRIBUTE_SHAREDDATACOMRESOURCE_ATTRIBUTE_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_CLASSIFIER_SHAREDDATACOMRESOURCE_CLASSIFIER_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_CLASSIFIER_SHAREDDATACOMRESOURCE_CLASSIFIER_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_INSTANCE_SHAREDDATACOMRESOURCE_INSTANCE_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_INSTANCE_SHAREDDATACOMRESOURCE_INSTANCE_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_LIFELINE_SHAREDDATACOMRESOURCE_LIFELINE_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_LIFELINE_SHAREDDATACOMRESOURCE_LIFELINE_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_LINK_SHAREDDATACOMRESOURCE_LINK_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_LINK_SHAREDDATACOMRESOURCE_LINK_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_PARAMETER_SHAREDDATACOMRESOURCE_PARAMETER_READSERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAREDDATACOMRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SHAREDDATACOMRESOURCE_PARAMETER_SHAREDDATACOMRESOURCE_PARAMETER_WRITESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ASSOCIATION_SWCOMMUNICATIONRESOURCE_ASSOCIATION_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ASSOCIATION_SWCOMMUNICATIONRESOURCE_ASSOCIATION_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ASSOCIATION_SWCOMMUNICATIONRESOURCE_ASSOCIATION_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ASSOCIATION_SWCOMMUNICATIONRESOURCE_ASSOCIATION_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ASSOCIATION_SWCOMMUNICATIONRESOURCE_ASSOCIATION_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ASSOCIATION_SWCOMMUNICATIONRESOURCE_ASSOCIATION_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ASSOCIATION_SWCOMMUNICATIONRESOURCE_ASSOCIATION_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND_SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND_SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND_SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND_SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND_SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND_SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND_SWCOMMUNICATIONRESOURCE_ASSOCIATIONEND_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ATTRIBUTE_SWCOMMUNICATIONRESOURCE_ATTRIBUTE_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ATTRIBUTE_SWCOMMUNICATIONRESOURCE_ATTRIBUTE_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ATTRIBUTE_SWCOMMUNICATIONRESOURCE_ATTRIBUTE_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ATTRIBUTE_SWCOMMUNICATIONRESOURCE_ATTRIBUTE_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ATTRIBUTE_SWCOMMUNICATIONRESOURCE_ATTRIBUTE_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ATTRIBUTE_SWCOMMUNICATIONRESOURCE_ATTRIBUTE_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_ATTRIBUTE_SWCOMMUNICATIONRESOURCE_ATTRIBUTE_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_CLASSIFIER_SWCOMMUNICATIONRESOURCE_CLASSIFIER_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_CLASSIFIER_SWCOMMUNICATIONRESOURCE_CLASSIFIER_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_CLASSIFIER_SWCOMMUNICATIONRESOURCE_CLASSIFIER_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_CLASSIFIER_SWCOMMUNICATIONRESOURCE_CLASSIFIER_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_CLASSIFIER_SWCOMMUNICATIONRESOURCE_CLASSIFIER_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_CLASSIFIER_SWCOMMUNICATIONRESOURCE_CLASSIFIER_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_CLASSIFIER_SWCOMMUNICATIONRESOURCE_CLASSIFIER_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_INSTANCE_SWCOMMUNICATIONRESOURCE_INSTANCE_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_INSTANCE_SWCOMMUNICATIONRESOURCE_INSTANCE_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_INSTANCE_SWCOMMUNICATIONRESOURCE_INSTANCE_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_INSTANCE_SWCOMMUNICATIONRESOURCE_INSTANCE_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_INSTANCE_SWCOMMUNICATIONRESOURCE_INSTANCE_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_INSTANCE_SWCOMMUNICATIONRESOURCE_INSTANCE_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_INSTANCE_SWCOMMUNICATIONRESOURCE_INSTANCE_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_LIFELINE_SWCOMMUNICATIONRESOURCE_LIFELINE_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_LIFELINE_SWCOMMUNICATIONRESOURCE_LIFELINE_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_LIFELINE_SWCOMMUNICATIONRESOURCE_LIFELINE_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_LIFELINE_SWCOMMUNICATIONRESOURCE_LIFELINE_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_LIFELINE_SWCOMMUNICATIONRESOURCE_LIFELINE_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_LIFELINE_SWCOMMUNICATIONRESOURCE_LIFELINE_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_LIFELINE_SWCOMMUNICATIONRESOURCE_LIFELINE_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_LINK_SWCOMMUNICATIONRESOURCE_LINK_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_LINK_SWCOMMUNICATIONRESOURCE_LINK_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_LINK_SWCOMMUNICATIONRESOURCE_LINK_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_LINK_SWCOMMUNICATIONRESOURCE_LINK_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_LINK_SWCOMMUNICATIONRESOURCE_LINK_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_LINK_SWCOMMUNICATIONRESOURCE_LINK_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_LINK_SWCOMMUNICATIONRESOURCE_LINK_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_PARAMETER_SWCOMMUNICATIONRESOURCE_PARAMETER_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_PARAMETER_SWCOMMUNICATIONRESOURCE_PARAMETER_PACKETT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_PARAMETER_SWCOMMUNICATIONRESOURCE_PARAMETER_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_PARAMETER_SWCOMMUNICATIONRESOURCE_PARAMETER_SPEEDFACTOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_PARAMETER_SWCOMMUNICATIONRESOURCE_PARAMETER_MAINSCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_PARAMETER_SWCOMMUNICATIONRESOURCE_PARAMETER_ELEMENTSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWCOMMUNICATIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWCOMMUNICATIONRESOURCE_PARAMETER_SWCOMMUNICATIONRESOURCE_PARAMETER_TRANSMMODE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_ASSOCIATION_SWINTERACTIONRESOURCE_ASSOCIATION_ISINTRAMEMORYPARTITIONINTERACTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_ASSOCIATION_SWINTERACTIONRESOURCE_ASSOCIATION_WAITINGQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_ASSOCIATION_SWINTERACTIONRESOURCE_ASSOCIATION_WAITINGQUEUECAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_ASSOCIATION_SWINTERACTIONRESOURCE_ASSOCIATION_WAITINGPOLICYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_ASSOCIATIONEND_SWINTERACTIONRESOURCE_ASSOCIATIONEND_ISINTRAMEMORYPARTITIONINTERACTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_ASSOCIATIONEND_SWINTERACTIONRESOURCE_ASSOCIATIONEND_WAITINGQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_ASSOCIATIONEND_SWINTERACTIONRESOURCE_ASSOCIATIONEND_WAITINGQUEUECAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_ASSOCIATIONEND_SWINTERACTIONRESOURCE_ASSOCIATIONEND_WAITINGPOLICYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_ATTRIBUTE_SWINTERACTIONRESOURCE_ATTRIBUTE_ISINTRAMEMORYPARTITIONINTERACTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_ATTRIBUTE_SWINTERACTIONRESOURCE_ATTRIBUTE_WAITINGQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_ATTRIBUTE_SWINTERACTIONRESOURCE_ATTRIBUTE_WAITINGQUEUECAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_ATTRIBUTE_SWINTERACTIONRESOURCE_ATTRIBUTE_WAITINGPOLICYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_CLASSIFIER_SWINTERACTIONRESOURCE_CLASSIFIER_ISINTRAMEMORYPARTITIONINTERACTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_CLASSIFIER_SWINTERACTIONRESOURCE_CLASSIFIER_WAITINGQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_CLASSIFIER_SWINTERACTIONRESOURCE_CLASSIFIER_WAITINGQUEUECAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_CLASSIFIER_SWINTERACTIONRESOURCE_CLASSIFIER_WAITINGPOLICYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_INSTANCE_SWINTERACTIONRESOURCE_INSTANCE_ISINTRAMEMORYPARTITIONINTERACTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_INSTANCE_SWINTERACTIONRESOURCE_INSTANCE_WAITINGQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_INSTANCE_SWINTERACTIONRESOURCE_INSTANCE_WAITINGQUEUECAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_INSTANCE_SWINTERACTIONRESOURCE_INSTANCE_WAITINGPOLICYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_LIFELINE_SWINTERACTIONRESOURCE_LIFELINE_ISINTRAMEMORYPARTITIONINTERACTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_LIFELINE_SWINTERACTIONRESOURCE_LIFELINE_WAITINGQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_LIFELINE_SWINTERACTIONRESOURCE_LIFELINE_WAITINGQUEUECAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_LIFELINE_SWINTERACTIONRESOURCE_LIFELINE_WAITINGPOLICYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_LINK_SWINTERACTIONRESOURCE_LINK_ISINTRAMEMORYPARTITIONINTERACTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_LINK_SWINTERACTIONRESOURCE_LINK_WAITINGQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_LINK_SWINTERACTIONRESOURCE_LINK_WAITINGQUEUECAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_LINK_SWINTERACTIONRESOURCE_LINK_WAITINGPOLICYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_PARAMETER_SWINTERACTIONRESOURCE_PARAMETER_ISINTRAMEMORYPARTITIONINTERACTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_PARAMETER_SWINTERACTIONRESOURCE_PARAMETER_WAITINGQUEUEPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_PARAMETER_SWINTERACTIONRESOURCE_PARAMETER_WAITINGQUEUECAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWINTERACTIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWINTERACTIONRESOURCE_PARAMETER_SWINTERACTIONRESOURCE_PARAMETER_WAITINGPOLICYELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_CONCURRENTACCESSPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_ACCESSTOKENELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_RELEASESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_ACQUIRESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATION_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_CONCURRENTACCESSPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_ACCESSTOKENELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_RELEASESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_ACQUIRESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_SWMUTUALEXCLUSIONRESOURCE_ASSOCIATIONEND_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_CONCURRENTACCESSPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_ACCESSTOKENELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_RELEASESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_ACQUIRESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_SWMUTUALEXCLUSIONRESOURCE_ATTRIBUTE_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_CONCURRENTACCESSPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_ACCESSTOKENELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_RELEASESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_ACQUIRESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_SWMUTUALEXCLUSIONRESOURCE_CLASSIFIER_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE_SWMUTUALEXCLUSIONRESOURCE_INSTANCE_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE_SWMUTUALEXCLUSIONRESOURCE_INSTANCE_CONCURRENTACCESSPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE_SWMUTUALEXCLUSIONRESOURCE_INSTANCE_ACCESSTOKENELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE_SWMUTUALEXCLUSIONRESOURCE_INSTANCE_RELEASESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE_SWMUTUALEXCLUSIONRESOURCE_INSTANCE_ACQUIRESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE_SWMUTUALEXCLUSIONRESOURCE_INSTANCE_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE_SWMUTUALEXCLUSIONRESOURCE_INSTANCE_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE_SWMUTUALEXCLUSIONRESOURCE_INSTANCE_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_INSTANCE_SWMUTUALEXCLUSIONRESOURCE_INSTANCE_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE_SWMUTUALEXCLUSIONRESOURCE_LIFELINE_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE_SWMUTUALEXCLUSIONRESOURCE_LIFELINE_CONCURRENTACCESSPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE_SWMUTUALEXCLUSIONRESOURCE_LIFELINE_ACCESSTOKENELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE_SWMUTUALEXCLUSIONRESOURCE_LIFELINE_RELEASESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE_SWMUTUALEXCLUSIONRESOURCE_LIFELINE_ACQUIRESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE_SWMUTUALEXCLUSIONRESOURCE_LIFELINE_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE_SWMUTUALEXCLUSIONRESOURCE_LIFELINE_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE_SWMUTUALEXCLUSIONRESOURCE_LIFELINE_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LIFELINE_SWMUTUALEXCLUSIONRESOURCE_LIFELINE_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LINK_SWMUTUALEXCLUSIONRESOURCE_LINK_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LINK_SWMUTUALEXCLUSIONRESOURCE_LINK_CONCURRENTACCESSPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LINK_SWMUTUALEXCLUSIONRESOURCE_LINK_ACCESSTOKENELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LINK_SWMUTUALEXCLUSIONRESOURCE_LINK_RELEASESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LINK_SWMUTUALEXCLUSIONRESOURCE_LINK_ACQUIRESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LINK_SWMUTUALEXCLUSIONRESOURCE_LINK_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LINK_SWMUTUALEXCLUSIONRESOURCE_LINK_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LINK_SWMUTUALEXCLUSIONRESOURCE_LINK_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_LINK_SWMUTUALEXCLUSIONRESOURCE_LINK_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER_SWMUTUALEXCLUSIONRESOURCE_PARAMETER_MECHANISM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER_SWMUTUALEXCLUSIONRESOURCE_PARAMETER_CONCURRENTACCESSPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER_SWMUTUALEXCLUSIONRESOURCE_PARAMETER_ACCESSTOKENELEMENTS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER_SWMUTUALEXCLUSIONRESOURCE_PARAMETER_RELEASESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER_SWMUTUALEXCLUSIONRESOURCE_PARAMETER_ACQUIRESERVICES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER_SWMUTUALEXCLUSIONRESOURCE_PARAMETER_PROTECTKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER_SWMUTUALEXCLUSIONRESOURCE_PARAMETER_CEILING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER_SWMUTUALEXCLUSIONRESOURCE_PARAMETER_OTHERPROTECTPROTOCOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SWMUTUALEXCLUSIONRESOURCE_PARAMETER_SWMUTUALEXCLUSIONRESOURCE_PARAMETER_SCHEDULER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLIENTSERVERFEATURE_OPERATION, Operation.class, MARTEDesignerTagTypes.CLIENTSERVERFEATURE_OPERATION_CLIENTSERVERFEATURE_OPERATION_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLIENTSERVERPORT_PORT, Port.class, MARTEDesignerTagTypes.CLIENTSERVERPORT_PORT_CLIENTSERVERPORT_PORT_SPECIFICATIONKIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLIENTSERVERPORT_PORT, Port.class, MARTEDesignerTagTypes.CLIENTSERVERPORT_PORT_CLIENTSERVERPORT_PORT_KIND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLIENTSERVERPORT_PORT, Port.class, MARTEDesignerTagTypes.CLIENTSERVERPORT_PORT_CLIENTSERVERPORT_PORT_PROVINTERFACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLIENTSERVERPORT_PORT, Port.class, MARTEDesignerTagTypes.CLIENTSERVERPORT_PORT_CLIENTSERVERPORT_PORT_REQINTERFACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CLIENTSERVERPORT_PORT, Port.class, MARTEDesignerTagTypes.CLIENTSERVERPORT_PORT_CLIENTSERVERPORT_PORT_FEATURESSPEC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DATAEVENT_EVENT, Event.class, MARTEDesignerTagTypes.DATAEVENT_EVENT_DATAEVENT_EVENT_CLASSIFIER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DATAPOOL_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.DATAPOOL_ASSOCIATIONEND_DATAPOOL_ASSOCIATIONEND_ORDERING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DATAPOOL_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.DATAPOOL_ASSOCIATIONEND_DATAPOOL_ASSOCIATIONEND_INSERTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DATAPOOL_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.DATAPOOL_ASSOCIATIONEND_DATAPOOL_ASSOCIATIONEND_SELECTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DATAPOOL_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.DATAPOOL_ATTRIBUTE_DATAPOOL_ATTRIBUTE_ORDERING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DATAPOOL_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.DATAPOOL_ATTRIBUTE_DATAPOOL_ATTRIBUTE_INSERTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DATAPOOL_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.DATAPOOL_ATTRIBUTE_DATAPOOL_ATTRIBUTE_SELECTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DATAPOOL_BINDABLEINSTANCE, BindableInstance.class, MARTEDesignerTagTypes.DATAPOOL_BINDABLEINSTANCE_DATAPOOL_BINDABLEINSTANCE_ORDERING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DATAPOOL_BINDABLEINSTANCE, BindableInstance.class, MARTEDesignerTagTypes.DATAPOOL_BINDABLEINSTANCE_DATAPOOL_BINDABLEINSTANCE_INSERTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DATAPOOL_BINDABLEINSTANCE, BindableInstance.class, MARTEDesignerTagTypes.DATAPOOL_BINDABLEINSTANCE_DATAPOOL_BINDABLEINSTANCE_SELECTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.FLOWPORT_PORT, Port.class, MARTEDesignerTagTypes.FLOWPORT_PORT_FLOWPORT_PORT_ISATOMIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.FLOWPORT_PORT, Port.class, MARTEDesignerTagTypes.FLOWPORT_PORT_FLOWPORT_PORT_DIRECTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.FLOWPROPERTY_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.FLOWPROPERTY_ASSOCIATIONEND_FLOWPROPERTY_ASSOCIATIONEND_DIRECTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.FLOWPROPERTY_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.FLOWPROPERTY_ATTRIBUTE_FLOWPROPERTY_ATTRIBUTE_DIRECTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.FLOWPROPERTY_BINDABLEINSTANCE, BindableInstance.class, MARTEDesignerTagTypes.FLOWPROPERTY_BINDABLEINSTANCE_FLOWPROPERTY_BINDABLEINSTANCE_DIRECTION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GCMINVOCATINGBEHAVIOR_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.GCMINVOCATINGBEHAVIOR_BEHAVIOR_GCMINVOCATINGBEHAVIOR_BEHAVIOR_ONPORT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GCMINVOCATINGBEHAVIOR_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.GCMINVOCATINGBEHAVIOR_BEHAVIOR_GCMINVOCATINGBEHAVIOR_BEHAVIOR_ONFEATURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GCMINVOCATINGBEHAVIOR_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.GCMINVOCATINGBEHAVIOR_BEHAVIOR_GCMINVOCATINGBEHAVIOR_BEHAVIOR_INVOCATIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GCMINVOCATIONACTION_ACTIVITYACTION, ActivityAction.class, MARTEDesignerTagTypes.GCMINVOCATIONACTION_ACTIVITYACTION_GCMINVOCATIONACTION_ACTIVITYACTION_ONFEATURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GCMTRIGGER_DEPENDENCY, Dependency.class, MARTEDesignerTagTypes.GCMTRIGGER_DEPENDENCY_GCMTRIGGER_DEPENDENCY_FEATURE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GCMTRIGGER_DEPENDENCY, Dependency.class, MARTEDesignerTagTypes.GCMTRIGGER_DEPENDENCY_GCMTRIGGER_DEPENDENCY_PORT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAACQSTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GAACQSTEP_MODELELEMENT_GAACQSTEP_MODELELEMENT_ACQRES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAACQSTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GAACQSTEP_MODELELEMENT_GAACQSTEP_MODELELEMENT_RESUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAANALYSISCONTEXT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.GAANALYSISCONTEXT_BEHAVIOR_GAANALYSISCONTEXT_BEHAVIOR_CONTEXTPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAANALYSISCONTEXT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.GAANALYSISCONTEXT_BEHAVIOR_GAANALYSISCONTEXT_BEHAVIOR_WORKLOAD));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAANALYSISCONTEXT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.GAANALYSISCONTEXT_BEHAVIOR_GAANALYSISCONTEXT_BEHAVIOR_PLATFORM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAANALYSISCONTEXT_CLASS, Class.class, MARTEDesignerTagTypes.GAANALYSISCONTEXT_CLASS_GAANALYSISCONTEXT_CLASS_CONTEXTPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAANALYSISCONTEXT_CLASS, Class.class, MARTEDesignerTagTypes.GAANALYSISCONTEXT_CLASS_GAANALYSISCONTEXT_CLASS_WORKLOAD));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAANALYSISCONTEXT_CLASS, Class.class, MARTEDesignerTagTypes.GAANALYSISCONTEXT_CLASS_GAANALYSISCONTEXT_CLASS_PLATFORM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAANALYSISCONTEXT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.GAANALYSISCONTEXT_COLLABORATION_GAANALYSISCONTEXT_COLLABORATION_CONTEXTPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAANALYSISCONTEXT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.GAANALYSISCONTEXT_COLLABORATION_GAANALYSISCONTEXT_COLLABORATION_WORKLOAD));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAANALYSISCONTEXT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.GAANALYSISCONTEXT_COLLABORATION_GAANALYSISCONTEXT_COLLABORATION_PLATFORM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAANALYSISCONTEXT_NODE, Node.class, MARTEDesignerTagTypes.GAANALYSISCONTEXT_NODE_GAANALYSISCONTEXT_NODE_CONTEXTPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAANALYSISCONTEXT_NODE, Node.class, MARTEDesignerTagTypes.GAANALYSISCONTEXT_NODE_GAANALYSISCONTEXT_NODE_WORKLOAD));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAANALYSISCONTEXT_NODE, Node.class, MARTEDesignerTagTypes.GAANALYSISCONTEXT_NODE_GAANALYSISCONTEXT_NODE_PLATFORM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAANALYSISCONTEXT_PACKAGE, Package.class, MARTEDesignerTagTypes.GAANALYSISCONTEXT_PACKAGE_GAANALYSISCONTEXT_PACKAGE_CONTEXTPARAMS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAANALYSISCONTEXT_PACKAGE, Package.class, MARTEDesignerTagTypes.GAANALYSISCONTEXT_PACKAGE_GAANALYSISCONTEXT_PACKAGE_WORKLOAD));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAANALYSISCONTEXT_PACKAGE, Package.class, MARTEDesignerTagTypes.GAANALYSISCONTEXT_PACKAGE_GAANALYSISCONTEXT_PACKAGE_PLATFORM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GACOMMCHANNEL_ASSOCIATION_GACOMMCHANNEL_ASSOCIATION_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GACOMMCHANNEL_ASSOCIATION_GACOMMCHANNEL_ASSOCIATION_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GACOMMCHANNEL_ASSOCIATIONEND_GACOMMCHANNEL_ASSOCIATIONEND_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GACOMMCHANNEL_ASSOCIATIONEND_GACOMMCHANNEL_ASSOCIATIONEND_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GACOMMCHANNEL_ATTRIBUTE_GACOMMCHANNEL_ATTRIBUTE_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GACOMMCHANNEL_ATTRIBUTE_GACOMMCHANNEL_ATTRIBUTE_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GACOMMCHANNEL_CLASSIFIER_GACOMMCHANNEL_CLASSIFIER_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GACOMMCHANNEL_CLASSIFIER_GACOMMCHANNEL_CLASSIFIER_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_INSTANCE, Instance.class, MARTEDesignerTagTypes.GACOMMCHANNEL_INSTANCE_GACOMMCHANNEL_INSTANCE_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_INSTANCE, Instance.class, MARTEDesignerTagTypes.GACOMMCHANNEL_INSTANCE_GACOMMCHANNEL_INSTANCE_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GACOMMCHANNEL_LIFELINE_GACOMMCHANNEL_LIFELINE_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GACOMMCHANNEL_LIFELINE_GACOMMCHANNEL_LIFELINE_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_LINK, Link.class, MARTEDesignerTagTypes.GACOMMCHANNEL_LINK_GACOMMCHANNEL_LINK_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_LINK, Link.class, MARTEDesignerTagTypes.GACOMMCHANNEL_LINK_GACOMMCHANNEL_LINK_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GACOMMCHANNEL_PARAMETER_GACOMMCHANNEL_PARAMETER_PACKETSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMCHANNEL_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GACOMMCHANNEL_PARAMETER_GACOMMCHANNEL_PARAMETER_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATION_GACOMMHOST_ASSOCIATION_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATION_GACOMMHOST_ASSOCIATION_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATION_GACOMMHOST_ASSOCIATION_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATION_GACOMMHOST_ASSOCIATION_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATION_GACOMMHOST_ASSOCIATION_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATION_GACOMMHOST_ASSOCIATION_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATION_GACOMMHOST_ASSOCIATION_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATION_GACOMMHOST_ASSOCIATION_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATION_GACOMMHOST_ASSOCIATION_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATION_GACOMMHOST_ASSOCIATION_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATIONEND_GACOMMHOST_ASSOCIATIONEND_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATIONEND_GACOMMHOST_ASSOCIATIONEND_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATIONEND_GACOMMHOST_ASSOCIATIONEND_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATIONEND_GACOMMHOST_ASSOCIATIONEND_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATIONEND_GACOMMHOST_ASSOCIATIONEND_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATIONEND_GACOMMHOST_ASSOCIATIONEND_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATIONEND_GACOMMHOST_ASSOCIATIONEND_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATIONEND_GACOMMHOST_ASSOCIATIONEND_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATIONEND_GACOMMHOST_ASSOCIATIONEND_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GACOMMHOST_ASSOCIATIONEND_GACOMMHOST_ASSOCIATIONEND_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GACOMMHOST_ATTRIBUTE_GACOMMHOST_ATTRIBUTE_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GACOMMHOST_ATTRIBUTE_GACOMMHOST_ATTRIBUTE_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GACOMMHOST_ATTRIBUTE_GACOMMHOST_ATTRIBUTE_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GACOMMHOST_ATTRIBUTE_GACOMMHOST_ATTRIBUTE_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GACOMMHOST_ATTRIBUTE_GACOMMHOST_ATTRIBUTE_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GACOMMHOST_ATTRIBUTE_GACOMMHOST_ATTRIBUTE_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GACOMMHOST_ATTRIBUTE_GACOMMHOST_ATTRIBUTE_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GACOMMHOST_ATTRIBUTE_GACOMMHOST_ATTRIBUTE_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GACOMMHOST_ATTRIBUTE_GACOMMHOST_ATTRIBUTE_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GACOMMHOST_ATTRIBUTE_GACOMMHOST_ATTRIBUTE_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GACOMMHOST_CLASSIFIER_GACOMMHOST_CLASSIFIER_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GACOMMHOST_CLASSIFIER_GACOMMHOST_CLASSIFIER_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GACOMMHOST_CLASSIFIER_GACOMMHOST_CLASSIFIER_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GACOMMHOST_CLASSIFIER_GACOMMHOST_CLASSIFIER_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GACOMMHOST_CLASSIFIER_GACOMMHOST_CLASSIFIER_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GACOMMHOST_CLASSIFIER_GACOMMHOST_CLASSIFIER_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GACOMMHOST_CLASSIFIER_GACOMMHOST_CLASSIFIER_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GACOMMHOST_CLASSIFIER_GACOMMHOST_CLASSIFIER_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GACOMMHOST_CLASSIFIER_GACOMMHOST_CLASSIFIER_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GACOMMHOST_CLASSIFIER_GACOMMHOST_CLASSIFIER_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GACOMMHOST_INSTANCE_GACOMMHOST_INSTANCE_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GACOMMHOST_INSTANCE_GACOMMHOST_INSTANCE_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GACOMMHOST_INSTANCE_GACOMMHOST_INSTANCE_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GACOMMHOST_INSTANCE_GACOMMHOST_INSTANCE_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GACOMMHOST_INSTANCE_GACOMMHOST_INSTANCE_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GACOMMHOST_INSTANCE_GACOMMHOST_INSTANCE_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GACOMMHOST_INSTANCE_GACOMMHOST_INSTANCE_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GACOMMHOST_INSTANCE_GACOMMHOST_INSTANCE_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GACOMMHOST_INSTANCE_GACOMMHOST_INSTANCE_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GACOMMHOST_INSTANCE_GACOMMHOST_INSTANCE_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GACOMMHOST_LIFELINE_GACOMMHOST_LIFELINE_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GACOMMHOST_LIFELINE_GACOMMHOST_LIFELINE_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GACOMMHOST_LIFELINE_GACOMMHOST_LIFELINE_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GACOMMHOST_LIFELINE_GACOMMHOST_LIFELINE_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GACOMMHOST_LIFELINE_GACOMMHOST_LIFELINE_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GACOMMHOST_LIFELINE_GACOMMHOST_LIFELINE_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GACOMMHOST_LIFELINE_GACOMMHOST_LIFELINE_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GACOMMHOST_LIFELINE_GACOMMHOST_LIFELINE_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GACOMMHOST_LIFELINE_GACOMMHOST_LIFELINE_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GACOMMHOST_LIFELINE_GACOMMHOST_LIFELINE_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LINK, Link.class, MARTEDesignerTagTypes.GACOMMHOST_LINK_GACOMMHOST_LINK_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LINK, Link.class, MARTEDesignerTagTypes.GACOMMHOST_LINK_GACOMMHOST_LINK_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LINK, Link.class, MARTEDesignerTagTypes.GACOMMHOST_LINK_GACOMMHOST_LINK_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LINK, Link.class, MARTEDesignerTagTypes.GACOMMHOST_LINK_GACOMMHOST_LINK_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LINK, Link.class, MARTEDesignerTagTypes.GACOMMHOST_LINK_GACOMMHOST_LINK_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LINK, Link.class, MARTEDesignerTagTypes.GACOMMHOST_LINK_GACOMMHOST_LINK_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LINK, Link.class, MARTEDesignerTagTypes.GACOMMHOST_LINK_GACOMMHOST_LINK_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LINK, Link.class, MARTEDesignerTagTypes.GACOMMHOST_LINK_GACOMMHOST_LINK_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LINK, Link.class, MARTEDesignerTagTypes.GACOMMHOST_LINK_GACOMMHOST_LINK_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_LINK, Link.class, MARTEDesignerTagTypes.GACOMMHOST_LINK_GACOMMHOST_LINK_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GACOMMHOST_PARAMETER_GACOMMHOST_PARAMETER_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GACOMMHOST_PARAMETER_GACOMMHOST_PARAMETER_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GACOMMHOST_PARAMETER_GACOMMHOST_PARAMETER_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GACOMMHOST_PARAMETER_GACOMMHOST_PARAMETER_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GACOMMHOST_PARAMETER_GACOMMHOST_PARAMETER_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GACOMMHOST_PARAMETER_GACOMMHOST_PARAMETER_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GACOMMHOST_PARAMETER_GACOMMHOST_PARAMETER_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GACOMMHOST_PARAMETER_GACOMMHOST_PARAMETER_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GACOMMHOST_PARAMETER_GACOMMHOST_PARAMETER_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GACOMMHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GACOMMHOST_PARAMETER_GACOMMHOST_PARAMETER_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEVENTTRACE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GAEVENTTRACE_MODELELEMENT_GAEVENTTRACE_MODELELEMENT_CONTENT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEVENTTRACE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GAEVENTTRACE_MODELELEMENT_GAEVENTTRACE_MODELELEMENT_FORMAT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEVENTTRACE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GAEVENTTRACE_MODELELEMENT_GAEVENTTRACE_MODELELEMENT_LOCATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_COMMTXOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_COMMRCVOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_CNTXTSWT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_CLOCKOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_SCHEDPRIRANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_MEMSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATION_GAEXECHOST_ASSOCIATION_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_COMMTXOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_COMMRCVOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_CNTXTSWT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_CLOCKOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_SCHEDPRIRANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_MEMSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.GAEXECHOST_ASSOCIATIONEND_GAEXECHOST_ASSOCIATIONEND_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_COMMTXOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_COMMRCVOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_CNTXTSWT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_CLOCKOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_SCHEDPRIRANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_MEMSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.GAEXECHOST_ATTRIBUTE_GAEXECHOST_ATTRIBUTE_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_COMMTXOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_COMMRCVOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_CNTXTSWT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_CLOCKOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_SCHEDPRIRANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_MEMSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GAEXECHOST_CLASSIFIER_GAEXECHOST_CLASSIFIER_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_COMMTXOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_COMMRCVOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_CNTXTSWT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_CLOCKOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_SCHEDPRIRANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_MEMSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.GAEXECHOST_INSTANCE_GAEXECHOST_INSTANCE_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_COMMTXOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_COMMRCVOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_CNTXTSWT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_CLOCKOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_SCHEDPRIRANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_MEMSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.GAEXECHOST_LIFELINE_GAEXECHOST_LIFELINE_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_COMMTXOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_COMMRCVOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_CNTXTSWT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_CLOCKOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_SCHEDPRIRANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_MEMSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.GAEXECHOST_LINK_GAEXECHOST_LINK_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_COMMTXOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_COMMRCVOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_CNTXTSWT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_CLOCKOVH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_SCHEDPRIRANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_MEMSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_ISPREEMPTIBLE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_SCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_OTHERSCHEDPOLICY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_SCHEDULE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_PROCESSINGUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_PROTECTEDSHAREDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAEXECHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.GAEXECHOST_PARAMETER_GAEXECHOST_PARAMETER_SCHEDULABLERESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GALATENCYOBS_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.GALATENCYOBS_CONSTRAINT_GALATENCYOBS_CONSTRAINT_LATENCY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GALATENCYOBS_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.GALATENCYOBS_CONSTRAINT_GALATENCYOBS_CONSTRAINT_MISS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GALATENCYOBS_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.GALATENCYOBS_CONSTRAINT_GALATENCYOBS_CONSTRAINT_UTILITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GALATENCYOBS_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.GALATENCYOBS_CONSTRAINT_GALATENCYOBS_CONSTRAINT_MAXJITTER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GARELSTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GARELSTEP_MODELELEMENT_GARELSTEP_MODELELEMENT_RELRES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GARELSTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GARELSTEP_MODELELEMENT_GARELSTEP_MODELELEMENT_RESUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GARESOURCESPLATFORM_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.GARESOURCESPLATFORM_CLASSIFIER_GARESOURCESPLATFORM_CLASSIFIER_RESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_CAUSE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_HOSTDEMAND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_HOSTDEMANDOPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_INTEROCCT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_RESPT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_UTILIZATIONONHOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_ROOT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_TIMING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_EXECTIME));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_ALLOCATEDMEMORY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_USEDMEMORY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_POWERPEAK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_ENERGY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_SUBUSAGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_USEDRESOURCES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_MSGSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_DURATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_START));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_FINISH));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_ON));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_PARENTSTEP));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASCENARIO_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASCENARIO_MODELELEMENT_GASCENARIO_MODELELEMENT_STEPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASTEP_MODELELEMENT_GASTEP_MODELELEMENT_ISATOMIC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASTEP_MODELELEMENT_GASTEP_MODELELEMENT_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASTEP_MODELELEMENT_GASTEP_MODELELEMENT_REP));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASTEP_MODELELEMENT_GASTEP_MODELELEMENT_PROB));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASTEP_MODELELEMENT_GASTEP_MODELELEMENT_PRIORITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASTEP_MODELELEMENT_GASTEP_MODELELEMENT_CONCURRES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASTEP_MODELELEMENT_GASTEP_MODELELEMENT_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASTEP_MODELELEMENT_GASTEP_MODELELEMENT_SERVDEMAND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASTEP_MODELELEMENT_GASTEP_MODELELEMENT_SERVCOUNT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASTEP_MODELELEMENT_GASTEP_MODELELEMENT_CHILDSCENARIO));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GASTEP_MODELELEMENT_GASTEP_MODELELEMENT_SCENARIO));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GATIMEDOBS_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.GATIMEDOBS_CONSTRAINT_GATIMEDOBS_CONSTRAINT_LAXITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GATIMEDOBS_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.GATIMEDOBS_CONSTRAINT_GATIMEDOBS_CONSTRAINT_STARTOBS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GATIMEDOBS_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.GATIMEDOBS_CONSTRAINT_GATIMEDOBS_CONSTRAINT_ENDOBS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAWORKLOADBEHAVIOR_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GAWORKLOADBEHAVIOR_MODELELEMENT_GAWORKLOADBEHAVIOR_MODELELEMENT_BEHAVIOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAWORKLOADBEHAVIOR_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GAWORKLOADBEHAVIOR_MODELELEMENT_GAWORKLOADBEHAVIOR_MODELELEMENT_DEMAND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAWORKLOADEVENT_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GAWORKLOADEVENT_MODELELEMENT_GAWORKLOADEVENT_MODELELEMENT_PATTERN));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAWORKLOADEVENT_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GAWORKLOADEVENT_MODELELEMENT_GAWORKLOADEVENT_MODELELEMENT_GENERATOR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAWORKLOADEVENT_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GAWORKLOADEVENT_MODELELEMENT_GAWORKLOADEVENT_MODELELEMENT_TRACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAWORKLOADEVENT_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GAWORKLOADEVENT_MODELELEMENT_GAWORKLOADEVENT_MODELELEMENT_EFFECT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAWORKLOADEVENT_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.GAWORKLOADEVENT_MODELELEMENT_GAWORKLOADEVENT_MODELELEMENT_TIMEDEVENT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.GAWORKLOADGENERATOR_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.GAWORKLOADGENERATOR_BEHAVIOR_GAWORKLOADGENERATOR_BEHAVIOR_POP));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PACOMMSTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PACOMMSTEP_MODELELEMENT_PACOMMSTEP_MODELELEMENT_NOSYNC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PACOMMSTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PACOMMSTEP_MODELELEMENT_PACOMMSTEP_MODELELEMENT_EXTOPDEMAND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PACOMMSTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PACOMMSTEP_MODELELEMENT_PACOMMSTEP_MODELELEMENT_EXTOPCOUNT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PACOMMSTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PACOMMSTEP_MODELELEMENT_PACOMMSTEP_MODELELEMENT_BEHAVDEMAND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PACOMMSTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PACOMMSTEP_MODELELEMENT_PACOMMSTEP_MODELELEMENT_BEHAVCOUNT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_ASSOCIATIONEND_PALOGICALRESOURCE_ASSOCIATIONEND_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_ASSOCIATIONEND_PALOGICALRESOURCE_ASSOCIATIONEND_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_ASSOCIATIONEND_PALOGICALRESOURCE_ASSOCIATIONEND_POOLSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_ASSOCIATION_PALOGICALRESOURCE_ASSOCIATION_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_ASSOCIATION_PALOGICALRESOURCE_ASSOCIATION_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_ASSOCIATION_PALOGICALRESOURCE_ASSOCIATION_POOLSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_ATTRIBUTE_PALOGICALRESOURCE_ATTRIBUTE_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_ATTRIBUTE_PALOGICALRESOURCE_ATTRIBUTE_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_ATTRIBUTE_PALOGICALRESOURCE_ATTRIBUTE_POOLSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_CLASSIFIER_PALOGICALRESOURCE_CLASSIFIER_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_CLASSIFIER_PALOGICALRESOURCE_CLASSIFIER_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_CLASSIFIER_PALOGICALRESOURCE_CLASSIFIER_POOLSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_INSTANCE_PALOGICALRESOURCE_INSTANCE_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_INSTANCE_PALOGICALRESOURCE_INSTANCE_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_INSTANCE_PALOGICALRESOURCE_INSTANCE_POOLSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_LIFELINE_PALOGICALRESOURCE_LIFELINE_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_LIFELINE_PALOGICALRESOURCE_LIFELINE_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_LIFELINE_PALOGICALRESOURCE_LIFELINE_POOLSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_LINK_PALOGICALRESOURCE_LINK_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_LINK_PALOGICALRESOURCE_LINK_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_LINK_PALOGICALRESOURCE_LINK_POOLSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_PARAMETER_PALOGICALRESOURCE_PARAMETER_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_PARAMETER_PALOGICALRESOURCE_PARAMETER_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PALOGICALRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.PALOGICALRESOURCE_PARAMETER_PALOGICALRESOURCE_PARAMETER_POOLSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PAREQUESTEDSERVICE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PAREQUESTEDSERVICE_MODELELEMENT_PAREQUESTEDSERVICE_MODELELEMENT_NOSYNC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PAREQUESTEDSERVICE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PAREQUESTEDSERVICE_MODELELEMENT_PAREQUESTEDSERVICE_MODELELEMENT_EXTOPDEMAND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PAREQUESTEDSERVICE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PAREQUESTEDSERVICE_MODELELEMENT_PAREQUESTEDSERVICE_MODELELEMENT_EXTOPCOUNT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PAREQUESTEDSERVICE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PAREQUESTEDSERVICE_MODELELEMENT_PAREQUESTEDSERVICE_MODELELEMENT_BEHAVDEMAND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PAREQUESTEDSERVICE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PAREQUESTEDSERVICE_MODELELEMENT_PAREQUESTEDSERVICE_MODELELEMENT_BEHAVCOUNT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PARESPASSSTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PARESPASSSTEP_MODELELEMENT_PARESPASSSTEP_MODELELEMENT_RESOURCE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PARESPASSSTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PARESPASSSTEP_MODELELEMENT_PARESPASSSTEP_MODELELEMENT_RESUNITS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PARUNTINSTANCE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PARUNTINSTANCE_MODELELEMENT_PARUNTINSTANCE_MODELELEMENT_POOLSIZE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PARUNTINSTANCE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PARUNTINSTANCE_MODELELEMENT_PARUNTINSTANCE_MODELELEMENT_UNBDDPOOL));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PARUNTINSTANCE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PARUNTINSTANCE_MODELELEMENT_PARUNTINSTANCE_MODELELEMENT_INSTANCE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PARUNTINSTANCE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PARUNTINSTANCE_MODELELEMENT_PARUNTINSTANCE_MODELELEMENT_HOST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PARUNTINSTANCE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PARUNTINSTANCE_MODELELEMENT_PARUNTINSTANCE_MODELELEMENT_UTILIZATION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PARUNTINSTANCE_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PARUNTINSTANCE_MODELELEMENT_PARUNTINSTANCE_MODELELEMENT_THROUGHPUT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PASTEP_MODELELEMENT_PASTEP_MODELELEMENT_NOSYNC));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PASTEP_MODELELEMENT_PASTEP_MODELELEMENT_EXTOPDEMAND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PASTEP_MODELELEMENT_PASTEP_MODELELEMENT_EXTOPCOUNT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PASTEP_MODELELEMENT_PASTEP_MODELELEMENT_BEHAVDEMAND));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.PASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.PASTEP_MODELELEMENT_PASTEP_MODELELEMENT_BEHAVCOUNT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAANALYSISCONTEXT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.SAANALYSISCONTEXT_BEHAVIOR_SAANALYSISCONTEXT_BEHAVIOR_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAANALYSISCONTEXT_BEHAVIOR, Behavior.class, MARTEDesignerTagTypes.SAANALYSISCONTEXT_BEHAVIOR_SAANALYSISCONTEXT_BEHAVIOR_OPTCRITERION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAANALYSISCONTEXT_CLASS, Class.class, MARTEDesignerTagTypes.SAANALYSISCONTEXT_CLASS_SAANALYSISCONTEXT_CLASS_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAANALYSISCONTEXT_CLASS, Class.class, MARTEDesignerTagTypes.SAANALYSISCONTEXT_CLASS_SAANALYSISCONTEXT_CLASS_OPTCRITERION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAANALYSISCONTEXT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.SAANALYSISCONTEXT_COLLABORATION_SAANALYSISCONTEXT_COLLABORATION_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAANALYSISCONTEXT_COLLABORATION, Collaboration.class, MARTEDesignerTagTypes.SAANALYSISCONTEXT_COLLABORATION_SAANALYSISCONTEXT_COLLABORATION_OPTCRITERION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAANALYSISCONTEXT_PACKAGE, Package.class, MARTEDesignerTagTypes.SAANALYSISCONTEXT_PACKAGE_SAANALYSISCONTEXT_PACKAGE_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAANALYSISCONTEXT_PACKAGE, Package.class, MARTEDesignerTagTypes.SAANALYSISCONTEXT_PACKAGE_SAANALYSISCONTEXT_PACKAGE_OPTCRITERION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAANALYSISCONTEXT_NODE, Node.class, MARTEDesignerTagTypes.SAANALYSISCONTEXT_NODE_SAANALYSISCONTEXT_NODE_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAANALYSISCONTEXT_NODE, Node.class, MARTEDesignerTagTypes.SAANALYSISCONTEXT_NODE_SAANALYSISCONTEXT_NODE_OPTCRITERION));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SACOMMHOST_PARAMETER_SACOMMHOST_PARAMETER_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SACOMMHOST_PARAMETER_SACOMMHOST_PARAMETER_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SACOMMHOST_ASSOCIATIONEND_SACOMMHOST_ASSOCIATIONEND_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SACOMMHOST_ASSOCIATIONEND_SACOMMHOST_ASSOCIATIONEND_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SACOMMHOST_ATTRIBUTE_SACOMMHOST_ATTRIBUTE_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SACOMMHOST_ATTRIBUTE_SACOMMHOST_ATTRIBUTE_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_LINK, Link.class, MARTEDesignerTagTypes.SACOMMHOST_LINK_SACOMMHOST_LINK_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_LINK, Link.class, MARTEDesignerTagTypes.SACOMMHOST_LINK_SACOMMHOST_LINK_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.SACOMMHOST_INSTANCE_SACOMMHOST_INSTANCE_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.SACOMMHOST_INSTANCE_SACOMMHOST_INSTANCE_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SACOMMHOST_ASSOCIATION_SACOMMHOST_ASSOCIATION_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SACOMMHOST_ASSOCIATION_SACOMMHOST_ASSOCIATION_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SACOMMHOST_LIFELINE_SACOMMHOST_LIFELINE_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SACOMMHOST_LIFELINE_SACOMMHOST_LIFELINE_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SACOMMHOST_CLASSIFIER_SACOMMHOST_CLASSIFIER_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SACOMMHOST_CLASSIFIER_SACOMMHOST_CLASSIFIER_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMSTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SACOMMSTEP_MODELELEMENT_SACOMMSTEP_MODELELEMENT_DEADLINE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMSTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SACOMMSTEP_MODELELEMENT_SACOMMSTEP_MODELELEMENT_SPARECAP));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SACOMMSTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SACOMMSTEP_MODELELEMENT_SACOMMSTEP_MODELELEMENT_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAENDTOENDFLOW_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SAENDTOENDFLOW_MODELELEMENT_SAENDTOENDFLOW_MODELELEMENT_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAENDTOENDFLOW_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SAENDTOENDFLOW_MODELELEMENT_SAENDTOENDFLOW_MODELELEMENT_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAENDTOENDFLOW_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SAENDTOENDFLOW_MODELELEMENT_SAENDTOENDFLOW_MODELELEMENT_ENDTOENDT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAENDTOENDFLOW_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SAENDTOENDFLOW_MODELELEMENT_SAENDTOENDFLOW_MODELELEMENT_ENDTOENDD));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAENDTOENDFLOW_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SAENDTOENDFLOW_MODELELEMENT_SAENDTOENDFLOW_MODELELEMENT_TIMING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SAEXECHOST_ASSOCIATIONEND_SAEXECHOST_ASSOCIATIONEND_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SAEXECHOST_ASSOCIATIONEND_SAEXECHOST_ASSOCIATIONEND_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SAEXECHOST_ASSOCIATIONEND_SAEXECHOST_ASSOCIATIONEND_SCHEDUTILIZ));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SAEXECHOST_ASSOCIATIONEND_SAEXECHOST_ASSOCIATIONEND_ISRSWITCHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SAEXECHOST_ASSOCIATIONEND_SAEXECHOST_ASSOCIATIONEND_ISRPRIORANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SAEXECHOST_ASSOCIATION_SAEXECHOST_ASSOCIATION_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SAEXECHOST_ASSOCIATION_SAEXECHOST_ASSOCIATION_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SAEXECHOST_ASSOCIATION_SAEXECHOST_ASSOCIATION_SCHEDUTILIZ));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SAEXECHOST_ASSOCIATION_SAEXECHOST_ASSOCIATION_ISRSWITCHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SAEXECHOST_ASSOCIATION_SAEXECHOST_ASSOCIATION_ISRPRIORANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SAEXECHOST_ATTRIBUTE_SAEXECHOST_ATTRIBUTE_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SAEXECHOST_ATTRIBUTE_SAEXECHOST_ATTRIBUTE_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SAEXECHOST_ATTRIBUTE_SAEXECHOST_ATTRIBUTE_SCHEDUTILIZ));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SAEXECHOST_ATTRIBUTE_SAEXECHOST_ATTRIBUTE_ISRSWITCHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SAEXECHOST_ATTRIBUTE_SAEXECHOST_ATTRIBUTE_ISRPRIORANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SAEXECHOST_CLASSIFIER_SAEXECHOST_CLASSIFIER_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SAEXECHOST_CLASSIFIER_SAEXECHOST_CLASSIFIER_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SAEXECHOST_CLASSIFIER_SAEXECHOST_CLASSIFIER_SCHEDUTILIZ));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SAEXECHOST_CLASSIFIER_SAEXECHOST_CLASSIFIER_ISRSWITCHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SAEXECHOST_CLASSIFIER_SAEXECHOST_CLASSIFIER_ISRPRIORANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.SAEXECHOST_INSTANCE_SAEXECHOST_INSTANCE_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.SAEXECHOST_INSTANCE_SAEXECHOST_INSTANCE_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.SAEXECHOST_INSTANCE_SAEXECHOST_INSTANCE_SCHEDUTILIZ));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.SAEXECHOST_INSTANCE_SAEXECHOST_INSTANCE_ISRSWITCHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_INSTANCE, Instance.class, MARTEDesignerTagTypes.SAEXECHOST_INSTANCE_SAEXECHOST_INSTANCE_ISRPRIORANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.SAEXECHOST_LINK_SAEXECHOST_LINK_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.SAEXECHOST_LINK_SAEXECHOST_LINK_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.SAEXECHOST_LINK_SAEXECHOST_LINK_SCHEDUTILIZ));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.SAEXECHOST_LINK_SAEXECHOST_LINK_ISRSWITCHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_LINK, Link.class, MARTEDesignerTagTypes.SAEXECHOST_LINK_SAEXECHOST_LINK_ISRPRIORANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SAEXECHOST_LIFELINE_SAEXECHOST_LIFELINE_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SAEXECHOST_LIFELINE_SAEXECHOST_LIFELINE_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SAEXECHOST_LIFELINE_SAEXECHOST_LIFELINE_SCHEDUTILIZ));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SAEXECHOST_LIFELINE_SAEXECHOST_LIFELINE_ISRSWITCHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SAEXECHOST_LIFELINE_SAEXECHOST_LIFELINE_ISRPRIORANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_PARAMETER, BehaviorParameter.class, MARTEDesignerTagTypes.SAEXECHOST_PARAMETER_SAEXECHOST_PARAMETER_ISSCHED));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_PARAMETER, BehaviorParameter.class, MARTEDesignerTagTypes.SAEXECHOST_PARAMETER_SAEXECHOST_PARAMETER_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_PARAMETER, BehaviorParameter.class, MARTEDesignerTagTypes.SAEXECHOST_PARAMETER_SAEXECHOST_PARAMETER_SCHEDUTILIZ));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_PARAMETER, BehaviorParameter.class, MARTEDesignerTagTypes.SAEXECHOST_PARAMETER_SAEXECHOST_PARAMETER_ISRSWITCHT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SAEXECHOST_PARAMETER, BehaviorParameter.class, MARTEDesignerTagTypes.SAEXECHOST_PARAMETER_SAEXECHOST_PARAMETER_ISRPRIORANGE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASCHEDOBS_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.SASCHEDOBS_CONSTRAINT_SASCHEDOBS_CONSTRAINT_SUSPENTIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASCHEDOBS_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.SASCHEDOBS_CONSTRAINT_SASCHEDOBS_CONSTRAINT_BLOCKT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASCHEDOBS_CONSTRAINT, Constraint.class, MARTEDesignerTagTypes.SASCHEDOBS_CONSTRAINT_SASCHEDOBS_CONSTRAINT_OVERLAPS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_PARAMETER_SASHAREDRESOURCE_PARAMETER_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_PARAMETER_SASHAREDRESOURCE_PARAMETER_ISPREEMP));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_PARAMETER_SASHAREDRESOURCE_PARAMETER_ISCONSUM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_PARAMETER_SASHAREDRESOURCE_PARAMETER_ACQUIST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_PARAMETER_SASHAREDRESOURCE_PARAMETER_RELEASET));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_ASSOCIATIONEND_SASHAREDRESOURCE_ASSOCIATIONEND_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_ASSOCIATIONEND_SASHAREDRESOURCE_ASSOCIATIONEND_ISPREEMP));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_ASSOCIATIONEND_SASHAREDRESOURCE_ASSOCIATIONEND_ISCONSUM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_ASSOCIATIONEND_SASHAREDRESOURCE_ASSOCIATIONEND_ACQUIST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_ASSOCIATIONEND_SASHAREDRESOURCE_ASSOCIATIONEND_RELEASET));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_ATTRIBUTE_SASHAREDRESOURCE_ATTRIBUTE_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_ATTRIBUTE_SASHAREDRESOURCE_ATTRIBUTE_ISPREEMP));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_ATTRIBUTE_SASHAREDRESOURCE_ATTRIBUTE_ISCONSUM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_ATTRIBUTE_SASHAREDRESOURCE_ATTRIBUTE_ACQUIST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_ATTRIBUTE_SASHAREDRESOURCE_ATTRIBUTE_RELEASET));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_LINK_SASHAREDRESOURCE_LINK_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_LINK_SASHAREDRESOURCE_LINK_ISPREEMP));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_LINK_SASHAREDRESOURCE_LINK_ISCONSUM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_LINK_SASHAREDRESOURCE_LINK_ACQUIST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_LINK, Link.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_LINK_SASHAREDRESOURCE_LINK_RELEASET));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_INSTANCE_SASHAREDRESOURCE_INSTANCE_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_INSTANCE_SASHAREDRESOURCE_INSTANCE_ISPREEMP));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_INSTANCE_SASHAREDRESOURCE_INSTANCE_ISCONSUM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_INSTANCE_SASHAREDRESOURCE_INSTANCE_ACQUIST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_INSTANCE, Instance.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_INSTANCE_SASHAREDRESOURCE_INSTANCE_RELEASET));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_ASSOCIATION_SASHAREDRESOURCE_ASSOCIATION_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_ASSOCIATION_SASHAREDRESOURCE_ASSOCIATION_ISPREEMP));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_ASSOCIATION_SASHAREDRESOURCE_ASSOCIATION_ISCONSUM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_ASSOCIATION_SASHAREDRESOURCE_ASSOCIATION_ACQUIST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_ASSOCIATION, Association.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_ASSOCIATION_SASHAREDRESOURCE_ASSOCIATION_RELEASET));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_LIFELINE_SASHAREDRESOURCE_LIFELINE_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_LIFELINE_SASHAREDRESOURCE_LIFELINE_ISPREEMP));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_LIFELINE_SASHAREDRESOURCE_LIFELINE_ISCONSUM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_LIFELINE_SASHAREDRESOURCE_LIFELINE_ACQUIST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_LIFELINE, Lifeline.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_LIFELINE_SASHAREDRESOURCE_LIFELINE_RELEASET));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_CLASSIFIER_SASHAREDRESOURCE_CLASSIFIER_CAPACITY));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_CLASSIFIER_SASHAREDRESOURCE_CLASSIFIER_ISPREEMP));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_CLASSIFIER_SASHAREDRESOURCE_CLASSIFIER_ISCONSUM));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_CLASSIFIER_SASHAREDRESOURCE_CLASSIFIER_ACQUIST));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASHAREDRESOURCE_CLASSIFIER, Classifier.class, MARTEDesignerTagTypes.SASHAREDRESOURCE_CLASSIFIER_SASHAREDRESOURCE_CLASSIFIER_RELEASET));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SASTEP_MODELELEMENT_SASTEP_MODELELEMENT_DEADLINE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SASTEP_MODELELEMENT_SASTEP_MODELELEMENT_SPARECAP));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SASTEP_MODELELEMENT_SASTEP_MODELELEMENT_SCHSLACK));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SASTEP_MODELELEMENT_SASTEP_MODELELEMENT_PREEMPTT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SASTEP_MODELELEMENT_SASTEP_MODELELEMENT_READYT));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SASTEP_MODELELEMENT_SASTEP_MODELELEMENT_NONPREEMPTIONBLOCKING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SASTEP_MODELELEMENT_SASTEP_MODELELEMENT_SHAREDRES));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SASTEP_MODELELEMENT_SASTEP_MODELELEMENT_SELFSUSPENSIONBLOCKING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SASTEP_MODELELEMENT, ModelElement.class, MARTEDesignerTagTypes.SASTEP_MODELELEMENT_SASTEP_MODELELEMENT_NUMBERSELFSUSPENSIONS));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DISTRIBUTE_DEPENDENCY, Dependency.class, MARTEDesignerTagTypes.DISTRIBUTE_DEPENDENCY_DISTRIBUTE_DEPENDENCY_PATTERNSHAPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DISTRIBUTE_DEPENDENCY, Dependency.class, MARTEDesignerTagTypes.DISTRIBUTE_DEPENDENCY_DISTRIBUTE_DEPENDENCY_REPETITIONSPACE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DISTRIBUTE_DEPENDENCY, Dependency.class, MARTEDesignerTagTypes.DISTRIBUTE_DEPENDENCY_DISTRIBUTE_DEPENDENCY_FROMTILER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.DISTRIBUTE_DEPENDENCY, Dependency.class, MARTEDesignerTagTypes.DISTRIBUTE_DEPENDENCY_DISTRIBUTE_DEPENDENCY_TOTILER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERREPETITION_CONNECTOR, Connector.class, MARTEDesignerTagTypes.INTERREPETITION_CONNECTOR_INTERREPETITION_CONNECTOR_REPETITIONSHAPEDEPENDENCE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERREPETITION_CONNECTOR, Connector.class, MARTEDesignerTagTypes.INTERREPETITION_CONNECTOR_INTERREPETITION_CONNECTOR_ISMODULO));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESHAPE_CONNECTOR, Connector.class, MARTEDesignerTagTypes.RESHAPE_CONNECTOR_RESHAPE_CONNECTOR_PATTERNSHAPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.RESHAPE_CONNECTOR, Connector.class, MARTEDesignerTagTypes.RESHAPE_CONNECTOR_RESHAPE_CONNECTOR_REPETITONSHAPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAPED_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.SHAPED_ASSOCIATIONEND_SHAPED_ASSOCIATIONEND_SHAPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAPED_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.SHAPED_ATTRIBUTE_SHAPED_ATTRIBUTE_SHAPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAPED_BINDABLEINSTANCE, BindableInstance.class, MARTEDesignerTagTypes.SHAPED_BINDABLEINSTANCE_SHAPED_BINDABLEINSTANCE_SHAPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAPED_CONNECTOREND, ConnectorEnd.class, MARTEDesignerTagTypes.SHAPED_CONNECTOREND_SHAPED_CONNECTOREND_SHAPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.SHAPED_PARAMETER, Parameter.class, MARTEDesignerTagTypes.SHAPED_PARAMETER_SHAPED_PARAMETER_SHAPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TILER_CONNECTOR, Connector.class, MARTEDesignerTagTypes.TILER_CONNECTOR_TILER_CONNECTOR_ORIGIN));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TILER_CONNECTOR, Connector.class, MARTEDesignerTagTypes.TILER_CONNECTOR_TILER_CONNECTOR_PAVING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TILER_CONNECTOR, Connector.class, MARTEDesignerTagTypes.TILER_CONNECTOR_TILER_CONNECTOR_FITTING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TILER_CONNECTOR, Connector.class, MARTEDesignerTagTypes.TILER_CONNECTOR_TILER_CONNECTOR_TILER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TILER_CONNECTOREND, ConnectorEnd.class, MARTEDesignerTagTypes.TILER_CONNECTOREND_TILER_CONNECTOREND_ORIGIN));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TILER_CONNECTOREND, ConnectorEnd.class, MARTEDesignerTagTypes.TILER_CONNECTOREND_TILER_CONNECTOREND_PAVING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TILER_CONNECTOREND, ConnectorEnd.class, MARTEDesignerTagTypes.TILER_CONNECTOREND_TILER_CONNECTOREND_FITTING));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TILER_CONNECTOREND, ConnectorEnd.class, MARTEDesignerTagTypes.TILER_CONNECTOREND_TILER_CONNECTOREND_TILER));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.VAR_ASSOCIATIONEND, AssociationEnd.class, MARTEDesignerTagTypes.VAR_ASSOCIATIONEND_VAR_ASSOCIATIONEND_DIR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.VAR_BINDABLEINSTANCE, BindableInstance.class, MARTEDesignerTagTypes.VAR_BINDABLEINSTANCE_VAR_BINDABLEINSTANCE_DIR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.VAR_ATTRIBUTE, Attribute.class, MARTEDesignerTagTypes.VAR_ATTRIBUTE_VAR_ATTRIBUTE_DIR));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.BOUNDEDSUBTYPE_DATATYPE, DataType.class, MARTEDesignerTagTypes.BOUNDEDSUBTYPE_DATATYPE_BOUNDEDSUBTYPE_DATATYPE_BASETYPE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.BOUNDEDSUBTYPE_DATATYPE, DataType.class, MARTEDesignerTagTypes.BOUNDEDSUBTYPE_DATATYPE_BOUNDEDSUBTYPE_DATATYPE_MINVALUE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.BOUNDEDSUBTYPE_DATATYPE, DataType.class, MARTEDesignerTagTypes.BOUNDEDSUBTYPE_DATATYPE_BOUNDEDSUBTYPE_DATATYPE_MAXVALUE));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.BOUNDEDSUBTYPE_DATATYPE, DataType.class, MARTEDesignerTagTypes.BOUNDEDSUBTYPE_DATATYPE_BOUNDEDSUBTYPE_DATATYPE_ISMINOPEN));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.BOUNDEDSUBTYPE_DATATYPE, DataType.class, MARTEDesignerTagTypes.BOUNDEDSUBTYPE_DATATYPE_BOUNDEDSUBTYPE_DATATYPE_ISMAXOPEN));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CHOICETYPE_DATATYPE, DataType.class, MARTEDesignerTagTypes.CHOICETYPE_DATATYPE_CHOICETYPE_DATATYPE_CHOICEATTRIB));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.CHOICETYPE_DATATYPE, DataType.class, MARTEDesignerTagTypes.CHOICETYPE_DATATYPE_CHOICETYPE_DATATYPE_DEFAULTATTRIB));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.COLLECTIONTYPE_DATATYPE, DataType.class, MARTEDesignerTagTypes.COLLECTIONTYPE_DATATYPE_COLLECTIONTYPE_DATATYPE_COLLECTIONATTRIB));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.INTERVALTYPE_DATATYPE, DataType.class, MARTEDesignerTagTypes.INTERVALTYPE_DATATYPE_INTERVALTYPE_DATATYPE_INTERVALATTRIB));
        tagTypes.add(getTagType(MARTEDesignerStereotypes.TUPLETYPE_DATATYPE, DataType.class, MARTEDesignerTagTypes.TUPLETYPE_DATATYPE_TUPLETYPE_DATATYPE_TUPLEATTRIB));
        tagTypes.add(getTagType(Attribute.class, MARTEDesignerTagTypes.ATTRIBUTE_ATTRIBUTE_DATATYPEVALUE));
        return tagTypes;
    }

    /**
     * A custom filter allowing to remove a specific element from an List.
     */
    @objid ("1516d632-57e7-4b0f-b9c3-82db245f2d53")
    private class ExcludeElementFilter implements IObjectFilter {
        /**
         * The element to exclude.
         */
        @objid ("af07601a-7fe1-4999-89bb-212044cbccbe")
        private Element eltToExclude;

        /**
         * Default constructor.
         */
        @objid ("8d72858f-1fb9-4775-9a83-f462e0b1b339")
        public ExcludeElementFilter(final Element eltToExclude) {
            this.eltToExclude = eltToExclude;
        }

        /**
         * Check if this element has to be excluded.
         *
         * @param eltToFilter The element to check.
         * @return True if the eltToFilter is not the eltToExclude
         */
        @objid ("6032b80a-4a42-41ff-9825-2c79050180a0")
        public boolean select(Element eltToFilter) {
            return !this.eltToExclude.equals(eltToFilter);
        }

        @objid ("6f333867-18fc-4138-8735-2da19d0d3a00")
        @Override
        public boolean accept(MObject arg0) {
            return !this.eltToExclude.equals(arg0);
        }

    }

}
